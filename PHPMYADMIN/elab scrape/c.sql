-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Sep 11, 2020 at 10:11 PM
-- Server version: 10.4.13-MariaDB
-- PHP Version: 7.2.32

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `c`
--
CREATE DATABASE IF NOT EXISTS `c` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE `c`;

-- --------------------------------------------------------

--
-- Table structure for table `elabdata`
--

DROP TABLE IF EXISTS `elabdata`;
CREATE TABLE IF NOT EXISTS `elabdata` (
  `id` int(100) DEFAULT NULL,
  `SESSION` varchar(255) DEFAULT NULL,
  `QUESTION_NO` varchar(100) DEFAULT NULL,
  `QUESTION_NAME` varchar(255) DEFAULT NULL,
  `QUESTION_DESC` varchar(3000) DEFAULT NULL,
  `CODE` varchar(5000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `elabdata`
--

INSERT INTO `elabdata` VALUES
(1, 'Input & Ouput ', 'Q. 1:', 'Valid Perfect Square', 'Get a positive integer. Check the number whether perfect square or not. Print TRUE when the integer is perfect square.If it is not, return FALSE.<br>Input format: The input is verified whether the number is perfect square or not.<br>Output format: Whether the input is perfect square then true is returned, else it should return false.<br>EXPLANATION: Get a non-negative integer from the user. Check it whether it is perfect square or not by using arithmetic functions. Print True when it is valid perfect square integer. If the integer is not valid perfect square integer, then print False.<br>Note: Do not use any inbuilt function.<br>', '#include <stdio.h>\r\n#include <math.h>\r\nint main() \r\n{\r\n	int num;\r\n    double ans;\r\n  	scanf(\"%d\",&num);\r\n  	ans=sqrt(num);\r\n    if(roundf(ans)==ans) \r\n       	printf(\"TRUE\");\r\n	else \r\n        printf(\"FALSE\");\r\n	return 0;\r\n}\r\n'),
(2, 'Input & Ouput ', 'Q. 2:', 'IO 13', 'Write a program to read a character in upper case and then print it in lower case<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	char a;\r\n  	scanf(\"%c\",&a);\r\n  	a=tolower(a);\r\n  	printf(\"%c\",a);\r\n	return 0;\r\n}\r\n'),
(3, 'Input & Ouput ', 'Q. 3:', 'Turbo Task', 'A task is given to 3 persons to complete it within a particular time. If the person exceeds the time limit he will be disqualified. Only those who complete it within the given time limit is qualified. Among the qualified persons, the person who completes the task first will be rewarded.<br>Write a program to find the person who is rewarded.<br>Input Format:<br>First input corresponds to the Time limit for the task in hours. Second,Third and Fourth Inputs correspond to the number of hours Taken by the first , second and third persons respectively to complete the task.<br>Output Format:<br>Display the person who Completes first.<br>[All text in bold corresponds to input and the rest corresponds to output]<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int T,a,b,c;\r\n  	int fa,fb,fc;\r\n  	scanf(\"%d\",&T);\r\n  	scanf(\"%d\",&a);\r\n  	scanf(\"%d\",&b);\r\n  	scanf(\"%d\",&c);\r\n  	if(a>T)\r\n    {\r\n      fa=1;\r\n    }\r\n    if(b>T)\r\n    {\r\n      fb=1;\r\n    }\r\n    if(c>T)\r\n    {\r\n      fc=1;\r\n    }\r\n  	if(fa==1&&fb==1&&fc==1)\r\n    	printf(\"No person wins\");\r\n  	else\r\n    {\r\n      if(a<b)\r\n      {\r\n        if(a<c)\r\n          printf(\"First person wins\");\r\n        else if(c<a)\r\n          printf(\"Third person wins\");\r\n      }\r\n      else if(b<a)\r\n      {\r\n        if(b<c)\r\n          printf(\"Second person wins\");\r\n        else if(c<b)\r\n          printf(\"Third person wins\");\r\n      }\r\n    }\r\n	return 0;\r\n}\r\n'),
(4, 'Input & Ouput ', 'Q. 4:', 'Months', 'Write a program that accepts an integer as input and displays the corresponding month in words. [ January, February, March, April, May, June, July, August, September, October, November, December]. Use Switch statement.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int num;\r\n    scanf(\"%d\",&num);\r\n  	switch(num)\r\n    {\r\n      case 1:\r\n        	 printf(\"January\");\r\n        	 break;\r\n      case 2:\r\n        	 printf(\"February\");\r\n        	 break;\r\n      case 3:\r\n        	 printf(\"March\");\r\n        	 break;\r\n	  case 4:\r\n        	 printf(\"April\");\r\n        	 break;\r\n	  case 5:\r\n        	 printf(\"May\");\r\n        	 break;\r\n	  case 6:\r\n        	 printf(\"June\");\r\n        	 break;\r\n	  case 7:\r\n        	 printf(\"July\");\r\n        	 break;\r\n	  case 8:\r\n        	 printf(\"August\");\r\n        	 break;\r\n	  case 9:\r\n        	 printf(\"September\");\r\n        	 break;\r\n	  case 10:\r\n        	 printf(\"October\");\r\n        	 break;\r\n	  case 11:\r\n        	 printf(\"November\");\r\n        	 break;\r\n	  case 12:\r\n        	 printf(\"December\");\r\n        	 break;\r\n    }\r\n	return 0;\r\n}\r\n'),
(5, 'Input & Ouput ', 'Q. 5:', 'Calculate Grade', 'Write a program that accepts the marks in 3 subjects of a student , calculates the average mark of the student and prints the student\'s grade. If the average mark is greater than or equal to 90, then the grade is \'A\'. If the average mark is 80 and between 80 and 90, then the grade is \'B\'.<br>If the average mark is 70 and between 70 and 80, then the grade is \'C\'. If the average mark is 60 and between 60 and 70, then the grade is \'D\'. If the average mark is 50 and between 50 and 60, then the grade is \'E\'. If the average mark is less than 50, then the grade is \'F\'.<br>Input Format:<br>Input consists of 3 lines. Each line consists of an integer.<br>Output Format:<br>Output consists of a single line. Refer sample output for the format.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int m1,m2,m3,s;\r\n  	float avg;\r\n  	scanf(\"%d\",&m1);\r\n  	scanf(\"%d\",&m2);\r\n  	scanf(\"%d\",&m3);\r\n  	s=m1+m2+m3;\r\n  	avg=(float)s/3;\r\n  	if(avg>=90)\r\n  	  printf(\"The grade is A\");\r\n  	else if(avg>=80&&avg<90)\r\n      printf(\"The grade is B\");\r\n  	else if(avg>=70&&avg<80)\r\n      printf(\"The grade is C\");\r\n  	else if(avg>=60&&avg<70)\r\n	  printf(\"The grade is D\");\r\n  	else if(avg>=50&&avg<60)\r\n	  printf(\"The grade is E\");\r\n  	else if(avg<50)\r\n      printf(\"The grade is F\");\r\n	return 0;\r\n}\r\n'),
(6, 'Input & Ouput ', 'Q. 6:', 'IO 24', 'Selvan from SRM Public school is studying 3r grade in school, her maths mam gave her a problem to convert the decimal number in octal and hexadecimal . Since her mam gave so much problems to solves.She went to his brother who is computer programmer and requested to create a program that converts automatically given integer to decimal, octal and hexadecimal equivalent. Let us help an programmer to do program?<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int num;\r\n  	scanf(\"%d\",&num);\r\n  	printf(\"Decimal value:%d\\n\",num);\r\n  	printf(\"Octal value:%o\\n\",num);\r\n  	printf(\"Hexadecimal value:%x\",num);\r\n	return 0;\r\n}\r\n'),
(7, 'Input & Ouput ', 'Q. 7:', 'Miney Mouse', 'Mickey and Miney are two friends. Goofy was one of the Mickey\'s enemy.He was jealous of Mickey because Mickey was liked by everyone. One day Mickey and Miney went on to a trip. Goofy planned to kidnap Miney. He kidnapped Miney and kept her in one of the hot balloons tied up to a height. There were 50 hot balloons numbered from one. Each balloon will fly to a certain height. Only the numbers having 4 and 8 as its factors can fly upto the height of the Miney\'s balloon. Mickey was confused and he didn\'t know which numbered balloon can fly to Miney.<br>So write a program to help the Mickey in finding the balloon.<br>Input format:<br>Inputs consists of a single integer which corresponds to number printed on the balloon. Assume that the input value is between 1 and 50.<br>Output Format:<br>Display whether the given Balloon will fly to Miney or Not.<br>[All text in bold corresponds to input and the rest corresponds to output]<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int n;\r\n  	scanf(\"%d\",&n);\r\n    if(n%4==0&&n%8==0)\r\n      printf(\"This balloon can fly to miney\");\r\n  	else\r\n      printf(\"This balloon cannot fly to miney\");\r\n  	return 0;\r\n}\r\n'),
(8, 'Input & Ouput ', 'Q. 8:', 'Fees Calculator', 'Write a program that displays the fees that a student needs to pay at the end of the semester. Use switch statement.<br>Input Format:<br>The first line of the input consists of a character from the set {A, B, C, D}. A corresponds to a day scholar student with the required attendance percentage. B corresponds to a day scholar student without the required attendance percentage. C corresponds to a hostel student with the required attendance percentage. D corresponds to a hostel student without the required attendance percentage.<br>The second line of the input consists of an integer which corresponds to the number of regular papers for which the student is appearing in the examination.<br>The third line of the input consists of an integer which corresponds to the fee to be paid per regular paper.<br>The fourth line of the input consists of an integer which corresponds to the number of backup(arrear) papers for which the student is appearing in the examination.<br>The fifth line of the input consists of an integer which corresponds to the fee to be paid per arrear paper.<br>Output Format:<br>The output consists of a single line. Refer to Sample output for format details.<br>[ There is a condonation fee or Rs. 5000 for lack of attendance and the hostel students need to pay the last month mess bill of Rs.1500 along with the examination fee.]<br>Mandatory:<br>You should use Switch case to get 100% evaluation<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	char s;\r\n  	int p1,f1,p2,f2;\r\n  	int f;\r\n  	scanf(\"%c%d%d%d%d\",&s,&p1,&f1,&p2,&f2);\r\n  	switch(s)\r\n    {\r\n      case \'A\':\r\n    		   f=f1*p1;\r\n      		   f=f+(f2*p2);\r\n    		   break;\r\n      case \'B\':\r\n    	       f=f1*p1;\r\n     		   f=f+(f2*p2);\r\n  		       f=f+5000;\r\n   			    break;\r\n      case \'C\':\r\n        	   f=f1*p1;\r\n     		   f=f+(f2*p2);\r\n  		       f=f+1500;\r\n        		break;\r\n      case \'D\':\r\n        	   f=f1*p1;\r\n     		   f=f+(f2*p2);\r\n  		       f=f+1500;\r\n      		   f=f+5000;\r\n        		break;\r\n    }\r\n  	printf(\"The fee to be paid is Rs=%d\",f);\r\n	return 0;\r\n}\r\n'),
(9, 'Input & Ouput ', 'Q. 9:', 'Gizmos', 'An online retailer sells two products: widgets and gizmos.<br>Each widget weighs 75 grams and Each gizmo weighs 112 grams.<br>Write a program that reads the number of widgets and the number of gizmos in an order from the user.<br>Then your program should compute and display the total weight of the order.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int w,g;\r\n  	float f;\r\n  	scanf(\"%d%d\",&w,&g);\r\n    printf(\"widgets=%d\\n\",w);\r\n  	printf(\"gizmo=%d\\n\",g);\r\n  	f=(w*75)+(g*112);\r\n  	f=f/1000;\r\n  	printf(\"Total weight=%.3f\",f);\r\n	return 0;\r\n}\r\n'),
(10, 'Input & Ouput ', 'Q. 10:', 'IO 12', 'Write a program to print the ASCII value of a character<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	char n;\r\n  	scanf(\"%c\",&n);\r\n  	printf(\"ASCII value of %c=%d\",n,n);\r\n	return 0;\r\n}\r\n'),
(12, 'Data types ', 'Q. 12:', 'Number of digits', 'C Program to Count number of digits in number without using mod operator<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	int num,l;\r\n  	char n[10];\r\n  	scanf(\"%d\",&num);\r\n  	sprintf(n,\"%d\",num);\r\n  	l=strlen(n);\r\n  	printf(\"Number of Digits:%d\",l);\r\n	return 0;\r\n}\r\n'),
(13, 'Data types ', 'Q. 13:', 'Moving Coins', 'A triangle can be classified based on the lengths of its sides as equilateral, isosceles or scalene.<br>All 3 sides of an equilateral triangle have the same length.<br>An isosceles triangle has two sides that are the same length, and a third side that is a different length.<br>If all of the sides have different lengths then the triangle is scalene.<br>Write a program that reads the lengths of 3 sides of a triangle from the user. Display a message indicating the type of the triangle.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int a,b,c;\r\n  	scanf(\"%d%d%d\",&a,&b,&c);\r\n  	if(a==b)\r\n    {\r\n      if(b==c)\r\n      	printf(\"equilateral\");\r\n      else\r\n        printf(\"isosceles\");\r\n    }\r\n  	else if(a!=b)\r\n    {\r\n      if(b==c)\r\n        printf(\"isosceles\");\r\n      else\r\n        printf(\"scalene\");\r\n    }\r\n  	else if(a==c)\r\n    {\r\n      if(b==c)\r\n      	printf(\"equilateral\");\r\n      else\r\n        printf(\"isosceles\");\r\n    }\r\n  	else if(a!=c)\r\n    {\r\n      if(b==c)\r\n        printf(\"isosceles\");\r\n      else\r\n        printf(\"scalene\");\r\n    }\r\n	return 0;\r\n}\r\n'),
(14, ' ', 'Q. 14:', 'SESSION: Data types', 'Puck, the trickster, has again started troubling people in your city.<br>The people have turned on to you for getting rid of Puck. Puck presents to you a number consisting of numbers from 0 to 9 characters.<br>He wants you to reverse it from the final answer such that the number becomes Palindrome number.<br>A Palindrome is a number which equals its reverse. The hope of people are on you so you have to solve the riddle.<br>You have to tell if some number exists which you would reverse to convert the number into palindrome.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{   \r\n  	int n,t,rem,rev=0;\r\n  	scanf(\"%d\",&n);\r\n  	t=n;\r\n  	while(t!=0) \r\n  	{\r\n        rem=t%10;\r\n        rev=rev*10+rem;\r\n        t/=10;\r\n  	}\r\n	if(n==rev)\r\n		printf(\"Mirror Image\");\r\n	else\r\n		printf(\"Not a Mirror Image\");\r\n	return 0;\r\n}\r\n'),
(16, 'Data types ', 'Q. 16:', 'Prime Factors', 'Helan had to find a number that must be the sum of two prime numbers. Help him to write a C Program to Check Whether a Number can be Expressed as Sum of Two Prime Numbers<br>', '#include <stdio.h>\r\nint prime(int n)\r\n{  \r\n    int i,flag=0;\r\n    for (i=2;i<=n/2;++i) \r\n    {\r\n    	if(n%i==0) \r\n        {\r\n            flag = 1;\r\n            break;\r\n        }\r\n    }\r\n    if(flag==0)\r\n        return 1;\r\n    else\r\n    	return 0;\r\n}\r\nint main()\r\n{\r\n	int num,i,f;\r\n  	scanf(\"%d\",&num);\r\n  	for(i=2;i<=num/2;i++)\r\n    {\r\n      if(prime(i)==1)\r\n      {\r\n        if(prime(num-i)==1)\r\n        {\r\n             printf(\"%d = %d + %d\\n\",num,i,num-i);\r\n             f=1;\r\n        }\r\n      }\r\n    }\r\n    if(f==0)\r\n      printf(\"NOT\");\r\n	return 0;\r\n}\r\n'),
(17, 'Data types ', 'Q. 17:', 'Your Name is Mine', 'In an attempt to control the rise in population, Archer was asked to come up with a plan. This time he is targeting marriages. Archer, being as intelligent as he is, came up with the following plan:<br>A man with name M is allowed to marry a woman with name W, only if M is a subsequence of W or W is a subsequence of M.<br>A is said to be a subsequence of B, if A can be obtained by deleting some elements of B without changing the order of the remaining elements.<br>Your task is to determine whether a couple is allowed to marry or not, according to Archers rule.<br>Input<br>The first line contains an integer T, the number of test cases. T test cases follow. Each test case contains two space separated strings M and W.<br>Output<br>For each test case print \"\"YES\"\" if they are allowed to marry, else print \"\"NO\"\". (quotes are meant for clarity, please dont print them)<br>Constraints<br>1 <= T<=100<br>1<= |M|, |W| <=25000 (|A| denotes the length of the string A.)<br>All names consist of lowercase English letters only.<br>', '#include <stdio.h>\r\nint subsequence(char M[],char W[])\r\n{\r\n     int i,j;\r\n     j=0;\r\n     for(i=0;W[i]!=\'\\0\';i++)\r\n     {\r\n         if(M[j]==W[i])\r\n         {\r\n           j++;\r\n           if(M[j]==\'\\0\')\r\n                return 1;\r\n         }\r\n     }\r\n     return 0;\r\n}\r\nint main()\r\n{\r\n  int T,flag1,flag2;\r\n  char M[25001],W[25001];\r\n  scanf(\"%d\",&T);\r\n  while(T--)\r\n  {\r\n      scanf(\"%s %s\",M,W);\r\n      flag1=subsequence(M,W);\r\n      flag2=subsequence(W,M);\r\n      if(flag1||flag2)\r\n         printf(\"YES\\n\");\r\n      else\r\n         printf(\"NO\\n\");\r\n  }	\r\n  return 0;\r\n}\r\n'),
(18, 'Data types ', 'Q. 18:', 'Favorite Sequence', 'Lancy has a sequence of N numbers. He like a sequence better if the sequence contains his favorite sequence as a substring.<br>Given the sequence and his favorite sequence(F) check whether the favorite sequence is contained in the sequence<br>Input<br>The first line will contain the number of test cases and are followed by the cases.<br>Each test case consists of four lines: The length of the sequence, the sequence N,the length of F and the sequence F<br>Output<br>Print \"Yes\" if the sequence contains the favourite sequence int it otherwise print \"No\"<br>Constraints<br>1<=T<=10<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,j,k,c=0,T,n1,n2,N[30],F[30];\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%d\",&n1);\r\n      for(j=0;j<n1;j++)\r\n		scanf(\"%d\",&N[j]);\r\n      scanf(\"%d\",&n2);\r\n      for(j=0;j<n2;j++)\r\n        scanf(\"%d\",&F[j]);\r\n      \r\n      for(j=0;j<n2;j++)\r\n      {\r\n        for(k=0;k<n1;k++)\r\n        {\r\n       		if(F[j]==N[k])\r\n            {\r\n              c++;\r\n              break;\r\n            }\r\n        }\r\n      }\r\n      if(c==n2)\r\n        printf(\"Yes\\n\");\r\n      else\r\n        printf(\"No\\n\");\r\n    }\r\n	return 0;\r\n}\r\n'),
(19, 'Data types ', 'Q. 19:', 'Pool', 'You are planning to go for swimming classes. You would prefer to enroll in the center which has the swimming pool of a greater area. In the first centre that you visit, the swimming pool is a circular shape(radius-r). In the next centre that you visit, the swimming pool is of a square shape (side-S). Write a program that will help you to make the choice of the swimming pool.<br>Input :<br>Input consists of 2 integers. The first integer correspond to the radius (r) of the circular swimming pool, The second integer corresponds to the side (S) of the square swimming pool.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int r,s;\r\n  	float ar,as;\r\n  	scanf(\"%d%d\",&r,&s);\r\n  	ar=3.14*r*r;\r\n  	as=s*s;\r\n  	if(ar>as)\r\n      printf(\"I prefer centre 1\");\r\n  	else\r\n      printf(\"I prefer centre 2\");\r\n	return 0;\r\n}\r\n'),
(20, 'Data types ', 'Q. 20:', 'Substraction of numbers', 'Harinis home work for second day is to subtract two numbers, help Harini to solve the problem.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	float a,b;\r\n  	scanf(\"%f%f\",&a,&b);\r\n  	printf(\"The Subtraction of two number is:%f\\n\",a-b);\r\n  	printf(\"The Subtraction of two number is:%.2f\\n\",a-b);\r\n	return 0;\r\n}\r\n'),
(21, 'Operators ', 'Q. 21:', 'Greedy puppy', 'Tuzik is a little dog. But despite the fact he is still a puppy he already knows about the pretty things that coins are. He knows that for every coin he can get very tasty bone from his master. He believes that some day he will find a treasure and have loads of bones.<br>And finally he found something interesting. A wooden chest containing N coins! But as you should remember, Tuzik is just a little dog, and so he cant open it by himself. Actually, the only thing he can really do is barking. He can use his barking to attract nearby people and seek their help. He can set the loudness of his barking very precisely, and therefore you can assume that he can choose to call any number of people, from a minimum of 1, to a maximum of K.<br>When people come and open the chest they divide all the coins between them in such a way that everyone will get the same amount of coins and this amount is maximal possible. If some coins are not used they will leave it on the ground and Tuzik will take them after they go away. Since Tuzik is clearly not a fool, he understands that his profit depends on the number of people he will call. While Tuzik works on his barking, you have to find the maximum possible number of coins he can get.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. Each of next T lines contains 2 space-separated integers: N and K, for this test case.<br>Output<br>For each test case output one integer - the maximum possible number of coins Tuzik can get.<br>Constraints<br>1<=T<=50<br>1<=N, K<=105<br>In the first example he should call two people. Each of them will take 2 coins and they will leave 1 coin for Tuzik.<br>In the second example he should call 3 people<br>EXPLANATION :<br>As the size of the inputs in the problem is very small ( in the order of 10^2 ) , we can simply use brute-forcing ( Brute Forcing ) and test every possible case and print the value of the maximum coins that the dog gets.<br>As the dog only gets what remains after equal spitting , this can be calculated by using the modulo \" % \" ( Modulo ) operation .<br>Example :<br>For 2nd test case : ( 11,3 ) :<br>He can call maximum of 3 people<br>If he calls only 1 person , the person will take all the coins , leaving him with nothing<br>If he calls 2 people , he will be left with only 1 coin , as the two people take 5 , 5 coins each.<br>If he calls 3 people , each one will take 3 coins , leaving him with 2 coins<br>So the best case for him is to call 3 people so he can get 2 coins.<br>The input format is :<br>An integer , to represent the number of test cases ( number of times the user will provide distinct values of N and K)<br>Pair of integers representing N and K values respectively ( this will be the input format for next t cases )<br>The result will be biggest modulo value that a number gives with N , such that the number is less than K.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,T,N,K;\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n  		scanf(\"%d%d\",&N,&K);\r\n      	printf(\"%d\\n\",N%K);\r\n    }\r\n	return 0;\r\n}\r\n'),
(22, 'Operators ', 'Q. 22:', 'Near prime', 'You are on your way to find the gifts. All the gifts lie in your path in a straight line at prime numbers and your house is at 0.Given your current position find the closest gift to your position, and calculate the distance between your current position and gift and tell the distance.<br>For the number= 0, the output is 2.<br>The closest prime number to 0 is 2, so the answer is 2 - 0 = 2.<br>For number = 11, the output should be 0.<br>11 is a prime number, so the answer is 11 - 11 = 0<br>For the number 16, the closest prime is 17<br>So Output 17-16=1<br>For the number 24, the closes prime is 29<br>So Output 29-24=5<br>Input/Output<br>[time limit] 3000ms [input] string number<br>Constraints: 0 int(number) 9 1014<br>', '#include <stdio.h>\r\nint prime(int n)\r\n{  \r\n    int i,flag=0;\r\n    for (i=2;i<=n/2;++i) \r\n    {\r\n    	if(n%i==0) \r\n        {\r\n            flag=1;\r\n            \r\n            break;\r\n        }\r\n    }\r\n    if(flag==0)\r\n        return 1;\r\n    else\r\n    	return 0;\r\n}\r\nint check(int n)\r\n{\r\n  int i,c=0;\r\n  for(i=n;c<10;i++,c++)\r\n  {\r\n    if(prime(i)==1)\r\n    {\r\n      \r\n      break;\r\n    }\r\n  }\r\n  return (i-n);\r\n}\r\nint main()\r\n{\r\n	int num;\r\n  	scanf(\"%d\",&num);\r\n  	printf(\"%d\",check(num));\r\n  	return 0;\r\n}\r\n'),
(23, 'Operators ', 'Q. 23:', 'SUM IT NOW', 'Nilo and Teena are playing with each other. Nilo challenges Teena to sum the digit of a number. Help Teena to answer as quick as possible.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int n,s=0,rem;\r\n  	scanf(\"%d\",&n);\r\n    while(n!=0)\r\n    {\r\n      rem=n%10;\r\n      s=s+rem;\r\n      n=n/10;\r\n    }\r\n    printf(\"%d\",s);\r\n    return 0;\r\n}\r\n'),
(24, 'Operators ', 'Q. 24:', 'Remainder', 'Write a program to find the remainder when two given numbers are divided. he first line contains an integer T, total number of test cases. Then follow T lines, each line contains two Integers A and B. Find remainder when A is divided by B<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int T,i,A,B;\r\n    scanf(\"%d\",&T);\r\n    for(i=0;i<T;i++)\r\n    {\r\n    	scanf(\"%d%d\",&A,&B);\r\n        printf(\"%d\\n\",A%B);\r\n    }\r\n	return 0;\r\n}\r\n'),
(25, 'Operators ', 'Q. 25:', 'Odd Triangle', '\"Given the triangle of consecutive odd numbers:<br>1<br>3 5<br>7 9 11<br>13 15 17 19<br>21 23 25 27 29<br>...<br>Calculate the row sums of this triangle from the nth row index (starting at row index 1).\"<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,j,A[30][30],s=0,n,k=1;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<30;i++)\r\n    {\r\n     	for(j=1;j<=i;j++)\r\n        {\r\n     		A[i][j]=k;\r\n            k+=2;\r\n        }\r\n    }\r\n    for(i=n;i<=n;i++)\r\n    {\r\n     	for(j=1;j<=i;j++)\r\n        {\r\n     		s+=A[i][j];\r\n        }\r\n    }\r\n    printf(\"%d\",s);\r\n    return 0;\r\n}\r\n'),
(26, 'Operators ', 'Q. 26:', 'Nth FIBO', 'John played with jacob.John wanted to test how soon jacob will answer for his question.He told him one number.The job of john is to add the numbers 0 and 1 initially and to add that output with 1.Now Jacob gets another output.jacob has to add this current output with previous output .This action has to be repeated upto certain times.After this Jacob needs to write those outputs as a series starts from 0,1 and to find out the n th number of that series what john told.Write a code for this.<br>', '#include <stdio.h>\r\nint fibo(int num)\r\n{\r\n    if(num==0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if(num==1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return(fibo(num-1)+fibo(num-2));\r\n    }\r\n}\r\nint main()\r\n{\r\n	int n;\r\n    scanf(\"%d\",&n);\r\n    printf(\"%d\\n\",fibo(n));\r\n    return 0;\r\n}\r\n'),
(27, 'Operators ', 'Q. 27:', 'Null or Not', 'George doesnt have a clear vision to understand whether the number is null or not. If we write a programming language means, it is very easy to understand. Help George to write a C program to check whether the given number is null or not<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n   int num;\r\n   scanf(\"%d\",&num);\r\n   if(num==0)\r\n     printf(\"NULL\");\r\n   else\r\n     printf(\"NOT NULL\");\r\n   return 0;\r\n}\r\n'),
(28, 'Operators ', 'Q. 28:', 'Counting and Summing', 'Return the count of positives numbers and the sum of negative numbers for the given array.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,l,Ar[30],c=0,s=0;\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      scanf(\"%d\",&Ar[i]);\r\n    }\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      if(Ar[i]>0)\r\n        c++;\r\n      else\r\n        s=s+Ar[i];\r\n    }\r\n  	printf(\"%d\\n%d\",c,s);\r\n	return 0;\r\n}\r\n'),
(29, 'Operators ', 'Q. 29:', 'AVERAGE SALE', 'A grocer has a sale of Rs. s1, Rs. s2, Rs. s3, Rs. s4 and Rs. s5 for 5 consecutive months. How much sale must he have in the sixth month so that he gets an average sale of Rs. x?<br>Write a C program to compute the sale in the 6th month.<br>Input Format:<br>Input consists of 5 integers and 1 float. The five integers correspond to s1, s2, s3, s4 and s5. The float input corresponds to x.<br>Output Format:<br>Refer sample input and output for formatting specifications.<br>The float values are displayed correct to 2 decimal places<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int S,s1,s2,s3,s4,s5;\r\n    float avg,s6,sum;\r\n    scanf(\"%d%d%d%d%d%f\",&s1,&s2,&s3,&s4,&s5,&avg);\r\n  	S=s1+s2+s3+s4+s5;\r\n  	sum=avg*6;\r\n  	s6=sum-S;\r\n  	printf(\"The required sale in the sixth month is %.2f\",s6);\r\n	return 0;\r\n}\r\n'),
(30, 'Operators ', 'Q. 30:', 'Sum of Puppy', 'Yesterday, puppy Tuzik learned a magically efficient method to find the sum of the integers from 1 to N. He denotes it as sum(N). But today, as a true explorer, he defined his own new function: sum(D, N), which means the operation sum applied D times: the first time to N, and each subsequent time to the result of the previous operation.<br>For example, if D = 2 and N = 3, then sum(2, 3) equals to sum(sum(3)) = sum(1 + 2 + 3) = sum(6) = 21.<br>Tuzik wants to calculate some values of the sum(D, N) function. Will you help him with that?<br>Input<br>The first line contains a single integer T, the number of test cases. Each test case is described by a single line containing two integers D and N.<br>Output<br>For each testcase, output one integer on a separate line.<br>Constraints<br>1<=T<=16<br>1<=D, N<= 4<br>Input:<br>2<br>1 4<br>2 3<br>Output:<br>10<br>21<br>Explanation:<br>The first test case: sum(1, 4) = sum(4) = 1 + 2 + 3 + 4 = 10.<br>The second test case: sum(2, 3) = sum(sum(3)) = sum(1 + 2 + 3) = sum(6) = 1 + 2 + 3 + 4 + 5 + 6 = 21.<br>', '#include <stdio.h>\r\nint sum1(int N)\r\n{\r\n  int i,s=0;\r\n  for(i=1;i<=N;i++)\r\n    s=s+i;\r\n  return s;\r\n}\r\nvoid sum(int D,int N)\r\n{\r\n  int i,s;\r\n  for(i=1;i<=D;i++)\r\n  {\r\n    if(i==1)\r\n     s=sum1(N);\r\n    else\r\n      s=sum1(s);\r\n  }\r\n  printf(\"%d\\n\",s);\r\n}\r\nint main()\r\n{\r\n	int i,T,D,N;\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%d%d\",&D,&N);\r\n      sum(D,N);\r\n    }\r\n	return 0;\r\n}\r\n'),
(31, 'Control and Looping ', 'Q. 31:', 'For loop processing', 'Program to calculate the sum of first n natural numbers<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n  	int N,s=0,i;\r\n  	scanf(\"%d\",&N);\r\n	for(i=1;i<=N;i++)\r\n    {\r\n      s=s+i;\r\n    }\r\n  	printf(\"%d\",s);\r\n	return 0;\r\n}\r\n'),
(32, 'Control and Looping ', 'Q. 32:', 'Binary from decimal', 'Lydia learn number conversion concept in C. Her teacher gave a homework to convert the number from decimal to binary. Help her to convert the number from decimal to binary.<br>Input should be from 0 to 127<br>64 32 16 8 4 2 1<br>', '#include <stdio.h>\r\nint binary_conversion(int num)\r\n{\r\n    if(num==0)\r\n    {\r\n        return 0;\r\n    }\r\n    else\r\n    {\r\n        return (num%2)+10*binary_conversion(num/2);\r\n    }\r\n}\r\nint main() \r\n{\r\n	int b;\r\n  	scanf(\"%d\",&b);\r\n    printf(\"%07d\",binary_conversion(b));\r\n  	return 0;\r\n}\r\n'),
(33, ' ', 'Q. 33:', 'SESSION: Control and Looping', 'Write a program to generate a following #s triangle:<br># # # # #<br># # # #<br># # #<br># #<br>#<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int n,i,j;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      for(j=n;j>i;j--)\r\n        printf(\"#\");\r\n      printf(\"\\n\");\r\n    }\r\n	return 0;\r\n}\r\n'),
(34, 'Control and Looping ', 'Q. 34:', 'Mikes Work', 'Every day, Mike goes to his job by a bus, where he buys a ticket. On the ticket, there is a letter-code that can be represented as a string of upper-case Latin letters.<br>Mike believes that the day will be successful in case exactly two different letters in the code alternate. Otherwise, he believes that the day will be unlucky. Please see note section for formal definition of alternating code.<br>You are given a ticket code. Please determine, whether the day will be successful for Mike or not. Print \"\"YES\"\" or \"\"NO\"\" (without quotes) corresponding to the situation.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first and only line of each test case contains a single string S denoting the letter code on the ticket.<br>Output<br>For each test case, output a single line containing \"\"YES\"\" (without quotes) in case the day will be successful and \"\"NO\"\" otherwise.<br>Note<br>Two letters x, y where x != y are said to be alternating in a code, if code is of form \"\"xyxyxy...\"\".<br>Constraints<br>1 <= T <= 100<br>S consists only of upper-case Latin letters<br>Subtask 1 (50 points):<br>|S| = 2<br>Subtask 2 (50 points):<br>2 <= |S| <= 100<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	int i,T,j,f=0;\r\n    char Ar[30];\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%s\",Ar);\r\n      for(j=0;j<strlen(Ar)-2;j++)\r\n      {\r\n    	if(Ar[j]==Ar[j+2]&&Ar[j]!=Ar[j+1])\r\n            f=1;\r\n        else\r\n            f=0;\r\n      }\r\n    if(f==1)\r\n      printf(\"YES\\n\");\r\n  	else\r\n      printf(\"NO\\n\");\r\n    }\r\n  	return 0;\r\n}\r\n'),
(35, 'Control and Looping ', 'Q. 35:', 'TRACK THE NUMBER', '\"Given a sorted array of integers. Let N be the number of test cases. Let n be the number of elements of the given array. Destiny value is provided. Check whether the target value is located on the given sorted array, if it is so then return the index of the array else identify the position where the target value needed to be inserted. Print the index of the identified target value else return the index value where the elements to be inserted.<br>INPUT FORMAT: Get the sorted array containing elements and the target value<br>OUTPUT FORMAT: Print the index value of the target element if it exists else return the position where the target element is needed to be inserted.<br>EXPLANATION: Get the sorted array containing elements and the target value. Now check whether the given target values lies on the given array if it so return the index value else return the index value where the target value to be inserted.\"<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int num,i,n,Ar[30];\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n       scanf(\"%d\",&Ar[i]);\r\n  	scanf(\"%d\",&num);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      if(Ar[i]==num)\r\n      {\r\n        printf(\"%d\",i);\r\n        break;\r\n      }\r\n	  else\r\n      {\r\n        if(Ar[i]>num)\r\n        {\r\n          printf(\"%d\",i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n	return 0;\r\n}\r\n'),
(36, 'Control and Looping ', 'Q. 36:', 'PRINT Numbers Within the Range', 'Write a C program to print all numbers between a and b ( a and b inclusive) using a while loop.<br>Input format:<br>Input consists of 2 integers. The first integer corresponds to a and the second integer corresponds to b . Assume a>=b.<br>Output format:<br>Refer sample input and output for formatting specifications.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int a,b,i;\r\n  	scanf(\"%d%d\",&a,&b);\r\n  	for(i=a;i>=b;i--)\r\n    {\r\n      if(a==b)\r\n        printf(\"No Number\");\r\n      else\r\n        printf(\"%d \",i);\r\n    }\r\n	return 0;\r\n}\r\n'),
(37, 'Control and Looping ', 'Q. 37:', 'BINARY ADD AND BINARY SUB', 'Jonnes gave smith two numbers and asked him to find Binary Addition and Binary Subtraction.Write a C code to help smith to find Binary Addition and Binary Subtraction for a given number<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int a,b;\r\n  	scanf(\"%d%d\",&a,&b);\r\n  	printf(\"%d\\n%d\",a+b,a-b);\r\n	return 0;\r\n}\r\n'),
(38, 'Control and Looping ', 'Q. 38:', 'FIND PEAK ELEMENT', 'Take an input array.The array consists of list of numbers, where num[i] is not equal to num[i+1].The mission is to print the peak element and also print its index value.INPUT FORMAT: Get an input array with a list of numbers. OUTPUT FORMAT:Print the peak element (largest element) with its index value. EXPLANATION: Get an input array which must contain a series of numbers. And now,the doer has to find out the peak element in that array. So, finally print the peak element (largest element in the array).Along with its index number as shown in the format.<br>', '#include <stdio.h>\r\n// Recursive function to find peak in the array\r\nint findPeakElement(int A[], int low, int high, int n)\r\n{\r\n	// find mid element\r\n	int mid = (low + high) / 2;\r\n	// check if mid element is greater than its neighbors\r\n	if ((mid == 0 || A[mid - 1] <= A[mid]) &&\r\n		(mid == n - 1 || A[mid + 1] <= A[mid]))\r\n		return mid;\r\n	// If the left neighbor of mid is greater than the mid element,\r\n	// then find the peak recursively in the left sub-array\r\n	if (mid - 1 >= 0 && A[mid - 1] > A[mid])\r\n		return findPeakElement(A, low, mid - 1, n);\r\n	// If the right neighbor of mid is greater than the mid element,\r\n	// then find the peak recursively in the right sub-array\r\n	return findPeakElement(A, mid + 1, high, n);\r\n}\r\n// main function\r\nint main(void)\r\n{\r\n	int A[10],l,i;\r\n    scanf(\"%d\",&l); 	\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&A[i]);\r\n    int index = findPeakElement(A,0,l-1,l);\r\n    printf(\"Peak Element=%d\\n\",A[index]);\r\n    printf(\"Index Value=%d\",index); \r\n	//printf(\"The peak element is %d AND %d\",A[index],index);\r\n	return 0;\r\n}\r\n'),
(39, 'Control and Looping ', 'Q. 39:', 'Biased Chandan', 'Chandan is an extremely biased person, and he dislikes people who fail to solve all the problems in the interview he takes for hiring people. There are n people on a day who came to be interviewed by Chandan. Chandan rates every candidate from 0 to 10. He has to output the total ratings of all the people who came in a day. But, heres the problem: Chandan gets extremely frustrated when someone ends up scoring a 0 in the interview. So in frustration he ends up removing the candidate who scored that 0, and also removes the candidate who came before him. If there is no candidate before the one who scores a 0, he does nothing.Youve to find the summation of all the ratings in a day for Chandan.<br>Input constraints:<br>The first line of input will contain an integer n. The next n lines will contain an integer, where the ith integer represents the rating of the ith person.<br>Output constraints:<br>Print the required sum.<br>Constraints:<br>1 <= n <= 5 * 103<br>0 <= Value of ratings <=10<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int l,i,Ar[30],s=0;\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<l;i++)\r\n    {\r\n		if(Ar[i]==0)\r\n          Ar[i-1]=0;\r\n    }\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      s=s+Ar[i];\r\n    }\r\n    printf(\"%d\",s);  \r\n	return 0;\r\n}\r\n'),
(40, 'Control and Looping ', 'Q. 40:', 'Number game', '\"Alice and Bob are meeting after a long time. As usual they love to play some math games. This times Alice takes the call and decides the game. The game is very simple, Alice says out an integer and Bob has to say whether the number is prime or not. Bob as usual knows the logic but since Alice doesn\'t give Bob much time to think, so Bob decides to write a computer program.<br>Help Bob accomplish this task by writing a computer program which will calculate whether the number is prime or not .<br>Input<br>The first line of the input contains T testcases, T lines follow<br>Each of T line contains an integer N which has to be tested for primality<br>Output<br>For each test case output in a separate line, \"\"yes\"\" if the number is prime else \"\"no\"\"<br>Constraints<br>1<=T<=20<br>1<=N<=10000<br>1<=M<=10000 \"<br>', '#include <stdio.h>\r\nint prime(int n)\r\n{  \r\n    int i,flag=0;\r\n    for (i=2;i<=n/2;++i) \r\n    {\r\n    	if(n%i==0) \r\n        {\r\n            flag = 1;\r\n            break;\r\n        }\r\n    }\r\n    if(flag==0)\r\n        return 1;\r\n    else\r\n    	return 0;\r\n}\r\nint main() \r\n{\r\n	int i,T,num;\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%d\",&num);\r\n      if(prime(num)==1)\r\n        printf(\"yes\\n\");\r\n      else\r\n        printf(\"no\\n\");\r\n    }\r\n	return 0;\r\n}\r\n'),
(41, 'Arrays ', 'Q. 41:', 'Greedy puppy', 'Tuzik is a little dog. But despite the fact he is still a puppy he already knows about the pretty things that coins are. He knows that for every coin he can get very tasty bone from his master. He believes that some day he will find a treasure and have loads of bones.<br>And finally he found something interesting. A wooden chest containing N coins! But as you should remember, Tuzik is just a little dog, and so he cant open it by himself. Actually, the only thing he can really do is barking. He can use his barking to attract nearby people and seek their help. He can set the loudness of his barking very precisely, and therefore you can assume that he can choose to call any number of people, from a minimum of 1, to a maximum of K.<br>When people come and open the chest they divide all the coins between them in such a way that everyone will get the same amount of coins and this amount is maximal possible. If some coins are not used they will leave it on the ground and Tuzik will take them after they go away. Since Tuzik is clearly not a fool, he understands that his profit depends on the number of people he will call. While Tuzik works on his barking, you have to find the maximum possible number of coins he can get.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. Each of next T lines contains 2 space-separated integers: N and K, for this test case.<br>Output<br>For each test case output one integer - the maximum possible number of coins Tuzik can get.<br>Constraints<br>1<=T<=50<br>1<=N, K<=105<br>In the first example he should call two people. Each of them will take 2 coins and they will leave 1 coin for Tuzik.<br>In the second example he should call 3 people<br>EXPLANATION :<br>As the size of the inputs in the problem is very small ( in the order of 10^2 ) , we can simply use brute-forcing ( Brute Forcing ) and test every possible case and print the value of the maximum coins that the dog gets.<br>As the dog only gets what remains after equal spitting , this can be calculated by using the modulo \" % \" ( Modulo ) operation .<br>Example :<br>For 2nd test case : ( 11,3 ) :<br>He can call maximum of 3 people<br>If he calls only 1 person , the person will take all the coins , leaving him with nothing<br>If he calls 2 people , he will be left with only 1 coin , as the two people take 5 , 5 coins each.<br>If he calls 3 people , each one will take 3 coins , leaving him with 2 coins<br>So the best case for him is to call 3 people so he can get 2 coins.<br>The input format is :<br>An integer , to represent the number of test cases ( number of times the user will provide distinct values of N and K)<br>Pair of integers representing N and K values respectively ( this will be the input format for next t cases )<br>The result will be biggest modulo value that a number gives with N , such that the number is less than K.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,T,N,K;\r\n  	scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n  		scanf(\"%d%d\",&N,&K);\r\n      	printf(\"%d\\n\",N%K);\r\n    }\r\n	return 0;\r\n}\r\n'),
(42, 'Arrays ', 'Q. 42:', 'Array Deletion', 'Write a program to delete an element from the array.<br>Input and Output Format:<br>Assume that the maximum number of elements in the array is 20.<br>Refer sample input and output for formatting specifications.<br>All text in bold corresponds to input and the rest corresponds to output.<br>Input:<br>1. The number of inputs to be entered by the user<br>2. The array elements<br>3. The array index to be deleted<br>Example 1:<br>Input 1:<br>4<br>11 12 13 14<br>1<br>Output 1:<br>Array after deletion is<br>11 13 14<br>Explanation:<br>Array Index starts from 0 the user entered array index as 1 so the number 12 is deleted.<br>arr[0]=11<br>arr[1]=12<br>arr[2]=13<br>arr[3]=13<br>Deleted Element=12 a[1]<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,l,Ar[20],del;\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n    	scanf(\"%d\",&Ar[i]);\r\n    scanf(\"%d\",&del);\r\n  	for(i=del;i<l;i++)\r\n         Ar[i]=Ar[i+1];\r\n    l--;\r\n    printf(\"Array after deletion is\\n\");\r\n    for(i=0;i<l;i++)\r\n      printf(\"%d \",Ar[i]);\r\n    return 0;\r\n}\r\n'),
(43, 'Arrays ', 'Q. 43:', 'Simple Array', 'Calculate average of n numbers<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int i,l,s=0,avg;\r\n    int Ar[10];\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      s=s+(int)Ar[i];\r\n    }\r\n  	avg=s/l;\r\n  	printf(\"%d\",avg);\r\n	return 0;\r\n}\r\n'),
(44, 'Arrays ', 'Q. 44:', 'Tri-Hexagonal Puzzle', '\"Little Johnny wants to play with his friends today. But his babysitter won\'t let him go! After a lot of begging, the heartless nanny gives him her brand new electronic puzzle and says: \"\"If you solve the puzzle then you are free to go\"\". Not being aware of Little Johnny\'s IT skills, the nanny leaves the kid alone.<br>Rapidly, Little Johnny sends you an e-mail asking for your help.<br>The puzzle consists of three hexagons as shown in the figure. Each vertex is painted black or white. Some of them belong to just one hexagon and some of them belong to more than one. Exactly four of them are painted black, and the other nine are white. The goal is to make the shared vertexes black by means of allowed moves: rotating a hexagon 60 degrees clockwise or counter-clockwise.<br>Can you help Little Johnny?<br>Input<br>Input starts with an integer T, the number of puzzles to solve (1<=T<=100). T lines follow, each one having 13 binary digits, corresponding to the top-down, left to right labeling of the vertexes in the puzzle. A \'0\' means the i-th vertex is painted white, while a \'1\' means it is painted black.<br>Output<br>For each test case output M on a single line, the minimum number of moves required to solve the puzzle. Then print M lines, each one describing a move in the following manner: two space separated integers H and C, the rotated hexagon (upper left is 0, upper right is 1, lower one is 2) and the direction (0 for counter-clockwise, 1 for clockwise).<br>If there is more than one solution, any will suffice.<br>\"<br>', '#include <stdio.h>\r\nint n;\r\nchar puzzle[14];\r\nint States[715];\r\nint ParentIndex[715];\r\nint ParentMove[715];\r\nconst int BITS[]={1,2,4,8,16,32,64,128,256,512,1024,2048,4096};\r\nconst int Moves[6][7] = {{10,12,9,6,4,7,10},\r\n                 {10,7,4,6,9,12,10},\r\n                 {5,3,6,9,11,8,5},\r\n                 {5,8,11,9,6,3,5},\r\n                 {4,6,3,1,0,2,4},\r\n                 {4,2,0,1,3,6,4}};\r\nconst int GoalState=0x258;\r\nint count;\r\nint GetChild(int move,int parent)\r\n{\r\n    int chld=parent,i;\r\n    for(i=0;i<6;i++)\r\n    {\r\n        if((parent&BITS[Moves[move][i+1]])!=0)\r\n            chld|=BITS[Moves[move][i]];\r\n        else\r\n            chld&=(~BITS[Moves[move][i]]);\r\n    }\r\n    return chld;\r\n}\r\nint FindIndex(int chld)\r\n{\r\n    int i;\r\n    for(i=count-1;i>=0;i--)\r\n        if(chld==States[i])\r\n            return i;\r\n    return -1;\r\n}\r\nvoid GenerateStates()\r\n{\r\n    int ptr,move,chld;\r\n    States[0]=GoalState;\r\n    ptr=0;\r\n    count=1;\r\n    while(ptr<count)\r\n    {\r\n        for(move=0;move<6;move++)\r\n        {\r\n            chld=GetChild(move,States[ptr]);\r\n            if(FindIndex(chld)==-1)\r\n            {\r\n                States[count]=chld;\r\n                ParentIndex[count]=ptr;\r\n                ParentMove[count++]=move^0x1;\r\n            }\r\n        }\r\n        ptr++;\r\n    }\r\n}\r\nint ConvertToInt(char puzzle[])\r\n{\r\n    int i,state = 0;\r\n    for(i=0;i<13;i++)\r\n    {\r\n        if(puzzle[i]==\'1\')\r\n            state|=BITS[13-i-1];\r\n    }\r\n    return state;\r\n}\r\nvoid FindPath(int state)\r\n{\r\n    int i=0,j,path[12],index;\r\n    index=FindIndex(state);\r\n    while(index!=0)\r\n    {\r\n        path[i++]=ParentMove[index];\r\n        index=ParentIndex[index];\r\n    }\r\n    printf(\"%d\\n\",i);\r\n    for(j=0;j<i;j++)\r\n        printf(\"%d %d\\n\",(path[j]>>1),(path[j]%2));\r\n}\r\nint main() \r\n{\r\n	int i,t;\r\n    scanf(\"%d\",&t);\r\n    GenerateStates();\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",puzzle);\r\n        FindPath( ConvertToInt(puzzle) );\r\n    }\r\n	return 0;\r\n}\r\n'),
(45, 'Arrays ', 'Q. 45:', 'Alternate', 'There is a machine in a lab which is working not properly. It displays the alternative elements in a set of input. The lab instructor asked the students to write a C Program for this scenario. i.e. to Print the Alternate Elements in an Array<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,l,Ar[30];\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n    	scanf(\"%d\",&Ar[i]);\r\n    for(i=0;i<l;i+=2)\r\n      printf(\"%d \",Ar[i]);\r\n	return 0;\r\n}\r\n'),
(46, 'Arrays ', 'Q. 46:', 'Occurrence', 'There was a group of elements in which there may be repeated elements. So there was a task to find occurrence of an element in one dimensional array. Write a C program for this scenario<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int l,Ar[30],f,i,c=0;\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	scanf(\"%d\",&f);\r\n  	for(i=0;i<l;i++)\r\n    {\r\n    	if(Ar[i]==f)\r\n          c++;\r\n    }\r\n  	printf(\"%d\",c);\r\n    return 0;\r\n}\r\n');
INSERT INTO `elabdata` VALUES
(47, 'Arrays ', 'Q. 47:', 'Mr Wireless', '\"Mr. Wire Less is not that good at implementing circuit in a breadboard. In his Digital Logic Design course, he has to implement several boolean functions using the breadboard. In a breadboard, inputs are given through the switches and outputs are taken through the LEDs. Each input switch can be either in ground state or in high state. So, if he wishes to implement a boolean function, f(x1, x2, .., xn) that takes n boolean values as input and returns m boolean values as output, he will use n switches and m LEDs.<br>Mr. Wire Less can quickly assemble the necessary ICs and wires, but the key problem is testing. While testing he has to check with all possible input combination, to make sure whether the output of LED corresponds to the expected output or not. This is taking too long for him, as most of the switches are jammed and difficult to toggle.<br>Mr. Wire Less is asking for help to minimize his time of testing. So, your task is to minimize the total number of switch-toggle throughout the testing.<br>For example, if Mr. Wire Less has to test a function f(x0, x1) of two variables, he may choose this switching-sequence for testing 00, 11, 10, 01. In this case, the total number of switch-toggle will be 2+1+2 = 5. But if he tests in this sequence 00, 10, 11, 01 total number of toggle will be 1+1+1 = 3.<br>Given n, you have to output the minimum number of toggle needed for complete testing. Though it seems impractical, he wants you to solve the problem for a very large value of n. But, then the toggle value can be quite big. So, he is completely okay with the toggle value modulo 8589934592 (233).<br>\"<br>', '#include <stdio.h>\r\nint makeans(int N)\r\n{\r\n    int i;\r\n   	int ans=1 ;\r\n    for(i=0;i<N;i++)\r\n      ans = 2*ans ;\r\n    return ans ;\r\n}\r\nint main() \r\n{\r\n	int T, count=1 ;\r\n    scanf(\"%d\",&T) ;\r\n    while(T--)\r\n    {\r\n       int n ;\r\n       scanf(\"%d\",&n) ;\r\n	   if(n==1)\r\n       {\r\n         printf(\"Case %d: 1\\n\",count);\r\n         count++;\r\n       }\r\n       else\r\n       {\r\n           int ans = makeans(n) ;\r\n           printf(\"Case %d: %d\\n\",count,ans-1) ;\r\n           count++ ;\r\n       }\r\n    }\r\n	return 0;\r\n}\r\n'),
(48, 'Arrays ', 'Q. 48:', 'Sort by Select', 'There were group of friends standing in a straight line. But the class teacher asked them to stand in a ascending order. Can you write a program for this scenario using arrays<br>', '#include <stdio.h>\r\nvoid bubbleSort(int Ar[],int n)  \r\n{  \r\n    int i,j,T;  \r\n    for (i=0;i<n-1;i++)      \r\n    {  \r\n    	for(j=0;j<n-i-1;j++)  \r\n        {\r\n        	if(Ar[j]>Ar[j+1])  \r\n            {\r\n             	T=Ar[j];\r\n              	Ar[j]=Ar[j+1];\r\n              	Ar[j+1]=T;\r\n            }\r\n        }\r\n    }\r\n}  \r\nint main()  \r\n{  \r\n    int i,Ar[30],n; \r\n    scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n    bubbleSort(Ar,n);  \r\n    for(i=0;i<n;i++)  \r\n    	printf(\"%d \",Ar[i]);  \r\n    return 0;  \r\n}  \r\n'),
(49, 'Arrays ', 'Q. 49:', 'Sum of positive Numbers', 'Write a program to find the sum of positive numbers in an array.<br>Input Format:<br>Input consists of n+1 integers. The first integer corresponds to n , the size of the array. The next ?n? integers correspond to the elements in the array. Assume that the maximum value of n is 15.<br>Output Format:<br>Refer sample output for details<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int s=0,n,Ar[30],i;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      if(Ar[i]>0)\r\n        s=s+Ar[i];\r\n    }\r\n  	printf(\"sum=%d\",s);\r\n	return 0;\r\n}\r\n'),
(50, 'Arrays ', 'Q. 50:', 'Simple Array', 'Calculate average of n numbers<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int i,l,s=0,avg;\r\n    int Ar[10];\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      s=s+(int)Ar[i];\r\n    }\r\n  	avg=s/l;\r\n  	printf(\"%d\",avg);\r\n	return 0;\r\n}\r\n'),
(51, 'String ', 'Q. 51:', 'Word Index 3', 'Write a C program to search all occurrences of a word in given string using loop<br>Array Index starts from 0<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n  	char str[100],word[100],T[30];\r\n  	int i,j=0,f,d,c=0;;\r\n    scanf(\"%[^\\n]%*c\",str);\r\n    scanf(\"%[^\\n]%*c\",word);\r\n  for(j=0;j<strlen(str);j++)\r\n  {\r\n   for(i=j,c=0;c<strlen(word);i++,c++)\r\n        T[c]=str[i];\r\n  	if(strcmp(T,word)==0)\r\n    {\r\n      d=i-strlen(word);\r\n      printf(\"%d\\n\",d);\r\n    }\r\n  } \r\n  return 0;\r\n}\r\n'),
(52, 'String ', 'Q. 52:', 'Frequency of each', 'Write a C program to count frequency of each character in a string using loop.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    char str[100];\r\n    int i,len;\r\n    int freq[26];\r\n    scanf(\"%s\",str);\r\n    len = strlen(str);\r\n    for(i=0;i<26;i++)\r\n    {\r\n        freq[i]=0;\r\n    }\r\n    for(i=0;i<len;i++)\r\n    {\r\n        if(str[i]>=\'a\'&&str[i]<=\'z\')\r\n        {\r\n            freq[str[i]-97]++;\r\n        }\r\n        else if(str[i]>=\'A\'&&str[i]<=\'Z\')\r\n        {\r\n            freq[str[i]-65]++;\r\n        }\r\n    }\r\n    for(i=0;i<26;i++)\r\n    {\r\n        if(freq[i]!=0)\r\n        {\r\n            printf(\"%c = %d\\n\",(i+97),freq[i]);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n'),
(53, 'String ', 'Q. 53:', 'Printing Next', 'Latha and Trisha are friends. They love to play with words. Ishu gives them a task to replace each characters in a string with its next letter. Can you help them to complete this task?<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	char i,Ar[30];\r\n  	scanf(\"%s\",Ar);\r\n  	for(i=0;Ar[i]!=\'\\0\';i++)\r\n    {\r\n      Ar[i]=Ar[i]+1;\r\n    }\r\n  	printf(\"%s\",Ar);\r\n	return 0;\r\n}\r\n'),
(54, 'String ', 'Q. 54:', 'Remove Index String 1', 'Write a function to remove first occurrence of a word from the string.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	 char str[30],word[30];\r\n  	 int i,j,f=0;	\r\n  	 scanf(\"%[^\\n]%*c\",str);\r\n     scanf(\"%[^\\n]%*c\",word);\r\n   	 for(i=0;i<strlen(str);i++)\r\n     {\r\n        f=1;\r\n        for(j=0;j<strlen(word);j++)\r\n        {\r\n            if(str[i+j]!=word[j])\r\n            {\r\n                f=0;\r\n                break;\r\n            }\r\n        }\r\n     	if(f==1)\r\n        {\r\n          \r\n            for(j=i;j<=strlen(str)-strlen(word);j++)\r\n            {\r\n                str[j]=str[j+strlen(word)];\r\n            }\r\n 	        break;\r\n        }\r\n    }\r\n  	printf(\"%s\",str);\r\n	return 0;\r\n}\r\n'),
(55, 'String ', 'Q. 55:', 'Making Palindrome', 'Chef likes strings a lot but he likes palindromic strings even more. Today he found an old string s in his garage. The string is so old that some of its characters have faded and are unidentifiable now. Faded characters in the string are represented by \'.\' whereas other characters are lower case Latin alphabets i.e [\'a\'-\'z\'].<br>Chef being the palindrome lover decided to construct the lexicographically smallest palindrome by filling each of the faded character (\'.\') with a lower case Latin alphabet. Can you please help him completing the task?<br>Input<br>First and the only line of each case contains string s denoting the old string that chef has found in his garage.<br>Output<br>For each test case, print lexicographically smallest palindrome after filling each faded character - if it possible to construct one. Print -1 otherwise.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint isPal(char str[]) \r\n{ \r\n    int l=0; \r\n    int h=strlen(str)-1; \r\n    while(h>l) \r\n    { \r\n        if(str[l++]!=str[h--]) \r\n        { \r\n            return 0; \r\n        } \r\n    } \r\n    return 1; \r\n} \r\nint main() \r\n{\r\n	char i,Ar[30];\r\n  	int f;\r\n    scanf(\"%s\",Ar);\r\n  	for(i=0;i<strlen(Ar);i++)\r\n    {\r\n      if(Ar[i]==\'.\')\r\n      {\r\n        if(strlen(Ar)%2==0)\r\n            Ar[i]=Ar[i-1]+1;\r\n        else\r\n            Ar[i]=Ar[i-1]-1;\r\n         f=isPal(Ar);\r\n       	 if(f==1)\r\n         	 printf(\"%s\",Ar);\r\n          \r\n      }\r\n    }\r\n	return 0;\r\n}\r\n'),
(56, 'String ', 'Q. 56:', 'Remove Index String 2', 'Write a C program to remove from last word in given string using loop.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	 char str[30],word[30];\r\n  	 int i,j,f=0;	\r\n  	 scanf(\"%[^\\n]%*c\",str);\r\n     scanf(\"%[^\\n]%*c\",word);\r\n   	 for(i=0;i<strlen(str);i++)\r\n     {\r\n        f=1;\r\n        for(j=0;j<strlen(word);j++)\r\n        {\r\n            if(str[i+j]!=word[j])\r\n            {\r\n                f=0;\r\n                break;\r\n            }\r\n        }\r\n     	if(f==1)\r\n        {\r\n          \r\n            for(j=i;j<=strlen(str)-strlen(word);j++)\r\n            {\r\n                str[j]=str[j+strlen(word)];\r\n            }\r\n 	        break;\r\n        }\r\n    }\r\n  	printf(\"%s\",str);\r\n	return 0;\r\n}\r\n'),
(57, 'String ', 'Q. 57:', 'String Pattern', 'Given a string<br>char str[ ] =123456789;<br>Write a program that displays the following:<br>1<br>2 3 2<br>3 4 5 4 3<br>4 5 6 7 6 5 4<br>5 6 7 8 9 8 7 6 5<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,j,n,l,k;\r\n  	char str[]={\"123456789\"};\r\n  	scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    { \r\n      for(j=0,l=i;j<=i;j++,l++)\r\n      {\r\n        printf(\"%c \",str[l]); \r\n      }\r\n      l=l-2; \r\n      for(k=0;k<i;k++,l--) \r\n        printf(\"%c \",str[l]);\r\n      printf(\"\\n\");\r\n    }\r\n    \r\n	return 0;\r\n}\r\n'),
(58, 'String ', 'Q. 58:', 'LAPINDROME', 'Lapindrome is defined as a string which when split in the middle, gives two halves having the same characters and same frequency of each character. If there are odd number of characters in the string, we ignore the middle character and check for lapindrome. For example gaga is a lapindrome, since the two halves ga and ga have the same characters with same frequency. Also, abccab, rotor and xyzxy are a few examples of lapindromes. Note that abbaab is NOT a lapindrome. The two halves contain the same characters but their frequencies do not match.<br>Your task is simple. Given a string, you need to tell if it is a lapindrome.<br>Input:<br>First line of input contains a single integer T, the number of test cases.<br>Each test is a single line containing a string S composed of only lowercase English alphabet.<br>Output:<br>For each test case, output on a separate line: \"YES\" if the string is a lapindrome and \"NO\" if it is not.<br>Constraints:<br>1 <= T <= 100<br>2 <= |S| <= 1000, where |S| denotes the length of S<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint Lap(char s[], int len)\r\n{\r\n  int freq[26]={0},i;\r\n  for(i=0;i<len/2;i++)\r\n    freq[s[i]-\'a\']++;\r\n  for(i=len/2+(len%2!=0);i<len;i++)\r\n	freq[s[i]-\'a\']--;\r\n  for(i=0;i<26;i++)\r\n  {\r\n    if(freq[i]!=0)\r\n		return 0;\r\n  }\r\n	return 1;\r\n}\r\nint main() \r\n{\r\n	int i,T;\r\n    char S[30];\r\n    scanf(\"%d\",&T);\r\n    for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%s\",S);\r\n      if(Lap(S,strlen(S))==1)\r\n        printf(\"YES\\n\");\r\n      else\r\n        printf(\"NO\\n\");\r\n    }\r\n	return 0;\r\n}\r\n'),
(59, 'String ', 'Q. 59:', 'Sereja and Two Strings 2', 'Sereja has a string A consisting of n lower case English letters.<br>Sereja calls two strings X and Y each of length n similar if they can be made equal by applying the following operation at most once in each of them.<br>Chose any two position i, j in the string (i can be equal to j too). Swap the characters at position i with character at position j.<br>For example strings \"abcd\" and \"acbd\" are similar, strings \"ab\" and \"ab\" are similar, but strings \"abcde\" and \"bcdea\" are not similar. Note that strings \"abc\" and \"cab\" are also similar, as you can swap a and c in the first string to get \"cba\" and a and b in the second string to get \"cba\".<br>Now Sereja is interested in finding number of ordered pairs of non similar strings X and Y such that they can be constructed from a given string A by permutation of its characters. As answer could be large, please output your answer modulo (109 + 7).<br>Note<br>A string s (of size n) is said to be constructed from string t (also of size n) by permutation of its characters if there exists a permutation P (of length n), such that s[i] = t[P[i]] for each i from 1 to n.<br>Input<br>First line contain integer T - number of test cases.<br>For each of the next T lines:<br>Each line contains a string A as defined in the problem.<br>Output<br>For each test case, output answer modulo 1000000007 (109 + 7) in separate line.<br>Constraints<br>1<= T <= 10<br>1 <= n <= 10^5<br>Constraints<br>Subtask #1: 1<= n <= 10 (25 points)<br>Subtask #2: 1 <= n <= 100 (25 points)<br>Subtask #3: 1 <= n <= 1000 (25 points)<br>Subtask #4: original constraints (25 points)<br>', '#include <stdio.h>\r\n#include <string.h>\r\nlong f[100009];\r\nlong power(long long a,long long b)\r\n{\r\n    long int ans=1;\r\n    a=a%1000000007;\r\n    while(b!=0)\r\n    {\r\n        if(b%2==1)\r\n          ans=(ans*a)%1000000007;\r\n        a=(a*a)%1000000007;\r\n        b=b/2;\r\n    }\r\n    return ans;\r\n}\r\nlong cal(long long n,long long r)\r\n{\r\n    long ans;\r\n    ans=f[n];\r\n    if(n<r)\r\n      return 0;\r\n    ans = ((ans*power(f[r],1000000007-2))%1000000007);\r\n    ans=((ans*power(f[n-r],1000000007-2))%1000000007);\r\n    ans = (ans%1000000007+1000000007)%1000000007;\r\n    return (ans+1000000007)%1000000007;\r\n}\r\nlong calsingle(int *a,int length)\r\n{\r\n    long ans;\r\n    int i;\r\n    ans=cal(length,2);\r\n    for(i=0;i<26;i++)\r\n        ans = ans- cal(a[i],2);\r\n    return ans;\r\n}\r\nlong caldouble(int *a)\r\n{\r\n    long ans=0,r1,r2,r3,r4;\r\n    int i,j,k,l;\r\n    for(i=0;i<26;i++)\r\n    {\r\n        r1=a[i];\r\n        for(j=i+1;j<26;j++)\r\n        {\r\n            r2=a[j];\r\n            ans = (ans+ cal(r1,2)*cal(r2,2))%1000000007;\r\n            for(k=j+1;k<26;k++)\r\n            {\r\n                r3=a[k];\r\n                ans =(ans+r1*r2*r3*(r1+r2+r3-1))%1000000007;\r\n                for(l=k+1;l<26;l++)\r\n                {\r\n                   r4=a[l];\r\n                   ans=(ans+r1*r2*r3*r4*3)%1000000007;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ans=(ans+1)%1000000007;\r\n    return ans;\r\n}\r\nlong total(int *a,int length)\r\n{\r\n    int i;\r\n    long ans;\r\n    ans=f[length];\r\n    for(i=0;i<26;i++)\r\n    {\r\n      if(a[i]>1)\r\n        ans=(ans*power(f[a[i]],1000000007-2))%1000000007;\r\n    }\r\n    return ans%1000000007;\r\n}\r\nvoid pre()\r\n{\r\n    int i;\r\n    f[0]=1;\r\n    for(i=1;i<100006;i++)\r\n       f[i]=(i*f[i-1])%1000000007;\r\n}\r\nint main() \r\n{\r\n	int t;\r\n    long tot,s,d,ms,ans;\r\n    pre();\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char str[100005];\r\n        int i,a[26];\r\n        for(i=0;i<26;i++)\r\n          a[i]=0;\r\n        scanf(\"%s\",str);\r\n        int length=strlen(str);\r\n        for(i=0;str[i]!=\'\\0\';i++)\r\n          a[str[i]-\'a\']++;\r\n        tot=total(a,length);\r\n        s = calsingle(a,length);\r\n        d = caldouble(a);\r\n        ms= ((tot-s-d)%1000000007+1000000007)%1000000007;\r\n        ans = (ms*tot)%1000000007;\r\n        printf(\"%ld\\n\",ans);\r\n    }\r\n	return 0;\r\n}\r\n'),
(61, 'Functions ', 'Q. 61:', 'Compatible Arrays using Functions', 'Two arrays are said to be compatible if they are of the same size and if the ith element in the first array is greater than or equal to the ith element in the second array for all i.Write a program to find whether 2 arrays are compatible or not.<br>Input Format:<br>Input consists of 2n+1 integers. The first integer corresponds to n , the size of the array. The next n integers correspond to the elements in the first array. The last n integers correspond to the elements in the second array. Assume that the maximum value of n is 15.<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int n,i,A[30],B[30],f;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    	scanf(\"%d\",&A[i]);\r\n    for(i=0;i<n;i++)\r\n        scanf(\"%d\",&B[i]);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      if(A[i]>=B[i])\r\n        f=1;\r\n      else\r\n        f=0;\r\n    }\r\n    if(f==1)\r\n      printf(\"Compatible\");\r\n    else\r\n      printf(\"Incompatible\");\r\n	return 0;\r\n}\r\n'),
(62, 'Functions ', 'Q. 62:', 'Alphabet Game', 'Not everyone probably knows that Chef has younder brother Jeff. Currently Jeff learns to read.<br>He knows some subset of the letter of Latin alphabet. In order to help Jeff to study, Chef gave him a book with the text consisting of N words. Jeff can read a word iff it consists only of the letters he knows.<br>Now Chef is curious about which words his brother will be able to read, and which are not. Please help him!<br>Input<br>The first line of the input contains a lowercase Latin letter string S, consisting of the letters Jeff can read. Every letter will appear in S no more than once.<br>The second line of the input contains an integer N denoting the number of words in the book.<br>Each of the following N lines contains a single lowecase Latin letter string Wi, denoting the ith word in the book.<br>Output<br>For each of the words, output \"Yes\" (without quotes) in case Jeff can read it, and \"No\" (without quotes) otherwise.<br>Constraints<br>1 <= |S| <= 26<br>1 <= N <= 1000<br>1 <= |Wi| <= 12<br>Each letter will appear in S no more than once.<br>S, Wi consist only of lowercase Latin letters.<br>Subtasks<br>Subtask #1 (31 point): |S| = 1, i.e. Jeff knows only one letter.<br>Subtask #2 (69 point) : no additional constraints<br>', '#include <stdio.h>\r\nvoid Alpha(char A[],int n)\r\n{\r\n  int i,j,k,f;\r\n  char B[30];\r\n  for(i=0;i<n;i++)\r\n    {\r\n      f=0;\r\n      scanf(\"%s\",B);\r\n      for(j=0;B[j]!=\'\\0\';j++)\r\n      {\r\n         for(k=0;A[k]!=\'\\0\';k++)\r\n         {\r\n           if(A[k]==B[j])\r\n           {\r\n             f=1;\r\n             break;\r\n           }\r\n           else\r\n             f=0;\r\n         }\r\n         if(f==0)\r\n           break;\r\n      }\r\n    if(f==1)\r\n      printf(\"Yes\\n\");\r\n    else\r\n      printf(\"No\\n\");\r\n    }\r\n}\r\nint main()\r\n{\r\n	int n;\r\n  	char A[30];\r\n  	scanf(\"%s\",A);\r\n	scanf(\"%d\",&n);\r\n  	Alpha(A,n);\r\n	return 0;\r\n}\r\n'),
(63, 'Functions ', 'Q. 63:', 'Recursion 4 : Sum of digits', 'Write a program to find the sum of digits in a number using recursion.<br>Input and Output Format:<br>Input consists of a nonnegative integer.<br>Refer sample input and output for formatting specifications.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint sum(int n) \r\n{ \r\n    if(n==0) \r\n       return 0; \r\n    return(n%10+sum(n/10)); \r\n} \r\nint main()\r\n{\r\n	int i,n;\r\n  	scanf(\"%d\",&n);\r\n  	printf(\"The sum of digits in %d is %d\",n,sum(n));\r\n	return 0;\r\n}\r\n'),
(64, 'Functions ', 'Q. 64:', 'Power of 2', 'Given a number , find whether it is a power of 2 or not<br>NOTE There is a limit in Source code.<br>Input<br>The first Line contains T , the no of test cases followed by T lines.<br>Each line has a integer X<br>Output<br>Output has T lines , with each line indicating whether the number is a power of 2 or not(print 1 if it a power of two else print 0).<br>', '#include <stdio.h>\r\nint Test(int n)\r\n{\r\n  	if(n==0)\r\n      return 0;\r\n    while(n!=1)\r\n    {\r\n        if(n%2!=0)\r\n            return 0;\r\n        n=n/2;\r\n    }\r\n    return 1;\r\n}\r\n \r\nint main()\r\n{\r\n    int T,i,num;\r\n    scanf(\"%d\",&T);\r\n  	for(i=0;i<T;i++)\r\n    {\r\n    	scanf(\"%d\",&num);\r\n  		printf(\"%d\\n\",Test(num));\r\n    }\r\n    return 0;\r\n}\r\n'),
(65, 'Functions ', 'Q. 65:', 'POWER OF 2', 'Ram challenges Ganga to write a code to check whether an Integer Number is power of two (2) or not. Can you help Ganga to come out of this problem.<br>', '#include <stdio.h>\r\n#include <math.h>\r\nvoid Test(int n)\r\n{\r\n if(ceil(log2(n))==floor(log2(n)))\r\n    printf(\"YES\");\r\n else\r\n    printf(\"NO\");\r\n}\r\nint main() \r\n{\r\n	int n;\r\n  	scanf(\"%d\",&n);\r\n  	Test(n);\r\n	return 0;\r\n}\r\n'),
(67, 'Functions ', 'Q. 67:', 'Array Insertion using Function', 'Write a program to insert an element in the array<br>Input 1: Size of the Array<br>Input 2: The number of elements<br>Input 3: The Place index where the elements needs to be inserted<br>Inout 4: The Element to be inserted<br>', '#include <stdio.h>\r\nvoid Array(int Ar[],int num,int ind,int l)\r\n{\r\n  int i;\r\n  if(ind>l)\r\n      printf(\"Sorry Invalid Location\");\r\n  else\r\n  {\r\n    for(i=l;i>=ind;i--)\r\n   	  Ar[i]=Ar[i-1];\r\n 	Ar[ind-1]=num;\r\n  	l++; \r\n  	\r\n    for(i=0;i<l;i++)\r\n    	printf(\"%d\\n\",Ar[i]);\r\n  }\r\n}\r\nint main() \r\n{\r\n	int i,l,num,ind,Ar[30];\r\n  	scanf(\"%d\",&l);\r\n  	for(i=0;i<l;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	scanf(\"%d\",&ind);\r\n  	scanf(\"%d\",&num);\r\n  	Array(Ar,num,ind,l);\r\n	return 0;\r\n}\r\n'),
(68, 'Functions ', 'Q. 68:', 'Raju and Somu Game', 'Raju was playing game with somu. Raju will tell set of positive numbers and negative numbers. Somu need to tell the sum of positive numbers and sum of negative numbers. Kindly help Raju and Somu to complete the task.<br>', '#include <stdio.h>\r\nvoid display(int a,int b)\r\n{\r\n  printf(\"Sum of positive elements is:%d\\n\",a);\r\n  printf(\"Sum of negative elements is:%d\\n\",b);\r\n}\r\nint main() \r\n{\r\n	int n,Ar[30],i,s1=0,s2=0;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      if(Ar[i]>0)\r\n        s1=s1+Ar[i];\r\n      else\r\n        s2=s2+Ar[i];\r\n    }\r\n  	display(s1,s2);\r\n	return 0;\r\n}\r\n'),
(69, 'Functions ', 'Q. 69:', 'Recursive Functions', 'Write a C program for Sum of Natural Numbers Using Recursion.<br>', '#include <stdio.h>\r\nint Numbers(int n) \r\n{\r\n   if(n!=0)\r\n     return (n+Numbers(n-1));\r\n   else\r\n     return n;\r\n}\r\nint main() \r\n{\r\n    int num;\r\n    scanf(\"%d\", &num);\r\n    printf(\"%d\",Numbers(num));\r\n    return 0;\r\n}\r\n'),
(70, 'Functions ', 'Q. 70:', 'Recursion 8 : Maximum Element in Array', 'Write a program to find the maximum element in an array using recursion.<br>Input and Output Format:<br>Input consists of n+1 integers.<br>Refer sample input and output for formatting specifications.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint max(int num1,int num2)\r\n{\r\n    return (num1>num2)?num1:num2;\r\n}\r\nint findMaxRec(int A[],int n) \r\n{ \r\n    if (n==1) \r\n        return A[0]; \r\n    return max(A[n-1],findMaxRec(A, n-1)); \r\n} \r\nint main() \r\n{ \r\n    int i,Ar[10],n;// = sizeof(A)/sizeof(A[0]); \r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    	scanf(\"%d\",&Ar[i]);\r\n    printf(\"Maximum element in the array is %d\",findMaxRec(Ar,n)); \r\n    return 0; \r\n} \r\n'),
(71, 'Structures and Unions ', 'Q. 71:', 'Structure - 1 Students Details', 'Create a structure called Student.<br>struct Student<br>{<br>char name[30];<br>char department[20];<br>int yearOfStudy;<br>float cgpa;<br>};<br>The structure variable should be \"S1\"<br>Write a program to get the details of n students and to display their details, sorted in ascending order based on name.<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>Name, Department, Year of study, CGPA.<br>Students details are sorted based on their \"Names\" in ascending order<br>Mandatory :<br>Note: The structure variables, data members and structure name are CASE Sensitive.<br>Follow the same case mentioned in the mandatory<br>', '#include <stdio.h>\r\n#include <string.h>\r\nstruct Student\r\n{\r\n	char name[30];\r\n	char department[20];\r\n	int yearOfStudy;\r\n	float cgpa;\r\n};\r\nint main() \r\n{\r\n	struct Student S1[10],T;\r\n  	int i,n,j;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n     	scanf(\"%s\",S1[i].name);\r\n      	scanf(\"%s\",S1[i].department);\r\n      	scanf(\"%d\",&S1[i].yearOfStudy);\r\n      	scanf(\"%f\",&S1[i].cgpa);\r\n    }\r\n  	for(i=0;i<n;i++)\r\n  	{\r\n      for(j=i+1;j<n;j++)\r\n      {\r\n      	if(strcmp(S1[i].name,S1[j].name)>0)\r\n      	{\r\n        	T=S1[i];\r\n          	S1[i]=S1[j];\r\n          	S1[j]=T;\r\n        }\r\n      }\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n      printf(\"Name:%s\\n\",S1[i].name);\r\n      printf(\"Department:%s\\n\",S1[i].department);\r\n      printf(\"Year of study:%d\\n\",S1[i].yearOfStudy);\r\n      printf(\"CGPA:%.1f\\n\",S1[i].cgpa);     \r\n    }     \r\n    return 0;\r\n}\r\n'),
(72, 'Structures and Unions ', 'Q. 72:', 'Printing next 5 numbers', 'A new game was introduced in a school for students of 3 standard, In which the student should tel next<br>5 numbers sequence from the telling number. Using union help to the students to solve it.<br>Input Method<br>Integer ranges from 1 to 999<br>Output Method<br>Sequence of next 5 numbers<br>Mandatory:<br>Use union concept<br>', '#include <stdio.h>\r\nunion Game\r\n{\r\n	int num;\r\n};\r\nint main()\r\n{\r\n	union Game G;\r\n  	int i;\r\n  	scanf(\"%d\",&G.num);\r\n	for(i=0;i<5;i++)\r\n      printf(\"%d \",++G.num);\r\n    return 0;\r\n}\r\n'),
(73, 'Structures and Unions ', 'Q. 73:', 'THREE MARKS', 'Mani Working as a professor in ABC college, have<br>to get students three subjects points.<br>so he planned to do one program to implement<br>structure concept.<br>Input<br>3 3 5<br>Output<br>3 3 5<br>', '#include <stdio.h>\r\nstruct Mark\r\n{\r\n  int a,b,c;\r\n};\r\nint main()\r\n{\r\n	struct Mark M;\r\n  	scanf(\"%d%d%d\",&M.a,&M.b,&M.c);\r\n  	printf(\"%d\\n%d\\n%d\",M.a,M.b,M.c);\r\n	return 0;\r\n}\r\n'),
(74, 'Structures and Unions ', 'Q. 74:', 'Multiplication table', 'Veena telling tables to her friend saradha, for every no of saradha veena telling tables upto 5,<br>help to her to write code to solve the task.<br>Input Method<br>Integer ranges from 1 to 999<br>Output Method<br>Multiplication table upto 5<br>', '#include <stdio.h>\r\nstruct Multiply\r\n{\r\n  	int num;\r\n};\r\nint main() \r\n{\r\n	struct Multiply M;\r\n  	scanf(\"%d\",&M.num);\r\n  	int i;\r\n  	for(i=1;i<=5;i++)\r\n    {\r\n     	printf(\"%d*%d=%d\\n\",i,M.num,i*M.num); \r\n    }\r\n	return 0;\r\n}\r\n'),
(75, 'Structures and Unions ', 'Q. 75:', 'Nested Structure - Details of Student', 'Create two structures as follows:<br>Structure 1:<br>Name = student<br>Data members = name(char), rollno(int)<br>Structure 2:<br>Name = dateOfBirth<br>Data members = date(int), month(int), year(int)<br>Create Structure Variable as \"DOB\"<br>In main function:<br>1. Create structure variable for student \"std\"<br>Hint: struct student std;<br>2. Input the values of name and roll number<br>Hint: std.name<br>3. Input the values of date, month and year<br>Hint: std.DOB.date<br>4. Display the name, roll number, Date of Birth.<br>Note: The structure variables, data members and structure name are CASE Sensitive.<br>Follow the same case mentioned in the mandatory<br>', '#include <stdio.h>\r\nstruct student\r\n{\r\n   char name[30];\r\n  	int rollno;\r\n};\r\nstruct dateOfBirth\r\n{\r\n	int date,month,year;\r\n}DOB;\r\nint main() \r\n{\r\n	struct student std;\r\n  	scanf(\"%s%d\",std.name,&std.rollno);\r\n  	scanf(\"%d%d%d\",&DOB.date,&DOB.month,&DOB.year);\r\n  	printf(\"Name=%s\\nRollNo=%d\\nDate of birth=%d/%d/%d\",std.name,std.rollno,DOB.date,DOB.month,DOB.year);\r\n	return 0;\r\n}\r\n'),
(76, 'Structures and Unions ', 'Q. 76:', 'Structure 42', 'Write a program , using a pointer to a structure to initialize the members of the structure to display the students course registration details where details of first student initialized in the program and details of second student get from the user , then display the details of both student 1 and student 2<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>Note:<br>Use structure and union concepts<br>', '#include <stdio.h>\r\nstruct Stud\r\n{\r\n	int roll,fees;\r\n  	char name[30],C[10];\r\n};\r\nint main() \r\n{\r\n	struct Stud *p,S;\r\n  	p=&S;\r\n  	scanf(\"%d\",&p->roll);\r\n    scanf(\"%s\",p->name);\r\n  	scanf(\"%s\",p->C);\r\n  	scanf(\"%d\",&p->fees);\r\n  	printf(\"Roll no:%d\\nName:%s\\nCourse:%s\\nFees:%d\\n\",p->roll,p->name,p->C,p->fees);\r\n	return 0;\r\n}\r\n'),
(77, 'Structures and Unions ', 'Q. 77:', 'Structure 41', 'Write a program to read display add and subtract of two time variables defined using hours , minutes and seconds using typdef and passing structure variable as argument in functions.<br>Input and Output Format:<br>Refer sample input and output for formatting specification<br>', '#include <stdio.h>\r\ntypedef struct Time\r\n{\r\n    int h,m,s;\r\n}T;\r\nvoid ADD(T t1,T t2)\r\n{\r\n  int a,b,c;\r\n  a=t1.h+t2.h;\r\n  b=t1.m+t2.m;\r\n  c=t1.s+t2.s;\r\n  printf(\"%d hrs\\n%d min\\n%d sec\",a,b,c);\r\n}\r\nint main()\r\n{\r\n	T t1,t2;\r\n    scanf(\"%d%d%d\",&t1.h,&t1.m,&t1.s);\r\n  	scanf(\"%d%d%d\",&t2.h,&t2.m,&t2.s);\r\n  	ADD(t1,t2);\r\n	return 0;\r\n}\r\n'),
(78, 'Structures and Unions ', 'Q. 78:', 'Structures Pointers', '1. Create a Structure \"grocery\" with following data members:<br>a. qty - int<br>b. price - float<br>c. amount - float<br>d. itemname - char<br>2. In main method declare structure variable as \"itm\"<br>Hint: struct grocery itm<br>3. Create an another structure pointer variable<br>Hint: struct grocery *pitem<br>4. Assign the pointer assignment of itm to pitem<br>Hint: pitem=&itm;<br>5. Input the values of product name, price, quantity<br>Hint: pitm->itemname<br>6. Calculate the total amount as:<br>pitem->amount =(float)pitem->qty * pitem->price;<br>7. Display the details of itemname, price, quantity and totalamount<br>Note: The structure variables, data members and structure name are CASE Sensitive.<br>Follow the same case mentioned in the mandatory<br>', '#include <stdio.h>\r\nstruct grocery\r\n{\r\n 	int qty;\r\n  	float price,amount;\r\n  	char itemname[10];\r\n};\r\nint main() \r\n{\r\n	struct grocery itm,*pitem;\r\n  	pitem=&itm;\r\n  	scanf(\"%s%f%d\",pitem->itemname,&pitem->price,&pitem->qty);\r\n  	pitem->amount =(float)pitem->qty * pitem->price;\r\n	printf(\"Name=%s\\nPrice=%f\\nQuantity=%d\\nTotal Amount=%.2f\",pitem->itemname,pitem->price,pitem->qty,pitem->amount);\r\n	return 0;\r\n}\r\n'),
(79, 'Structures and Unions ', 'Q. 79:', 'Find no of characters in name', 'Manoj arranged one event to find no of characters in his friends name, your idea is to give your friends name, for that<br>manoj has to answer the no of characters present in it, with the help of sturcuture concept accomplish it.<br>Input Method<br>Name of different friends<br>Output Method<br>No of characters<br>Mandatory:<br>Use Structure Concepts<br>', '#include <stdio.h>\r\n#include <string.h>\r\nstruct Friend\r\n{\r\n  char name[30];\r\n};\r\nint main()\r\n{\r\n	struct Friend F;\r\n  	scanf(\"%s\",F.name);\r\n  	int l=strlen(F.name);\r\n  	printf(\"%d\",l);\r\n	return 0;\r\n}\r\n'),
(80, 'Structures and Unions ', 'Q. 80:', 'AVERAGES', 'Menan Working as a professor in ABC college, have to get students three subjects marks and display average.<br>so he planned to do one program to implement structure concept.<br>Input<br>15 16 39<br>Output<br>15 16 39 23<br>', '#include <stdio.h>\r\nstruct Marks\r\n{\r\n  int a,b,c;\r\n  int avg,s;\r\n};\r\nint main()\r\n{\r\n	struct Marks M;\r\n  	scanf(\"%d%d%d\",&M.a,&M.b,&M.c);\r\n  	M.s=0;\r\n  	M.s=M.a+M.b+M.c;\r\n  	M.avg=M.s/3;\r\n  	printf(\"%d %d %d %d\",M.a,M.b,M.c,M.avg); \r\n	return 0;\r\n}\r\n'),
(81, 'Pointers ', 'Q. 81:', 'Adding two numbers', 'Add two numbers using pointers<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n  	int n1,n2;\r\n	int* a;\r\n  	int* b;\r\n  	scanf(\"%d%d\",&n1,&n2);\r\n  	a=&n1;\r\n  	b=&n2;\r\n  	printf(\"The sum of the entered numbers is=%d\",*a+*b);\r\n	return 0;\r\n}\r\n'),
(82, 'Pointers ', 'Q. 82:', 'REV ARRAY', 'program using pointers to read in an array of integers and print its elements in reverse order<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,n;\r\n  	int Ar[30],*p;\r\n    p=&Ar[0];\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%d\",p);\r\n      p++;\r\n    }\r\n    p=&Ar[n-1];\r\n    for(i=n-1;i>=0;i--)\r\n    {\r\n      printf(\"%d \",*p);\r\n      p--;\r\n    }\r\n	return 0;\r\n}\r\n'),
(83, 'Pointers ', 'Q. 83:', 'Pointers - 48', 'Write a program to reverse a string using pointer<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n	char Ar[30],*p;\r\n    int l,i;\r\n    scanf(\"%[^\\n]%*c\",Ar);\r\n    l=strlen(Ar);\r\n    p=&Ar[l-1];\r\n	for(i=l-1;i>=0;i--)\r\n    {\r\n      printf(\"%c\",*p);\r\n      p--;\r\n    }\r\n	return 0;\r\n}\r\n'),
(84, 'Pointers ', 'Q. 84:', 'Pointers - 30', 'Write a program which takes an input from the user and then checks whether its a number or a character . If its a character ,determine whether it is in upper case or lower case<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	char X,*p;\r\n  	p=&X;\r\n  	scanf(\"%c\",p);\r\n  	if(isalpha(*p))\r\n    {\r\n      if(isupper(*p))\r\n      {\r\n        printf(\"Input is upper case\\n\");\r\n        printf(\"Lower case=%c\",tolower(*p));\r\n      }\r\n      else\r\n      {\r\n        printf(\"Input is lower case\\n\");\r\n        printf(\"Upper case=%c\",toupper(*p));\r\n      }\r\n    }\r\n  	return 0;\r\n}\r\n'),
(85, 'Pointers ', 'Q. 85:', 'Pointer 3', 'Write a program to subtract two double values using pointer<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	double a,b;\r\n  	double *n1,*n2;\r\n  	scanf(\"%lf%lf\",&a,&b);\r\n    n1=&a;\r\n  	n2=&b;\r\n  	printf(\"%.2lf\",*n1-*n2);\r\n	return 0;\r\n}\r\n'),
(86, 'Pointers ', 'Q. 86:', 'NUMBER OF VOWELS AND CONSTANT', 'Count vowels and constants in a given string using pointers<br>', '#include <stdio.h>\r\n#include <string.h> \r\nint main() \r\n{\r\n	char S[20],*p;\r\n  	int l,i,c=0,v=0;\r\n  	scanf(\"%s\",S);\r\n    l=strlen(S);\r\n  	p=&S[0];\r\n  	for(i=0;i<l;i++)\r\n    {\r\n      if(*p==\'a\'||*p==\'e\'||*p==\'i\'||*p==\'o\'||*p==\'u\')\r\n        v++;\r\n      else\r\n        c++;\r\n      p++;\r\n    }\r\n  	printf(\"%d %d\",v,c);\r\n	return 0;\r\n}\r\n'),
(87, 'Pointers ', 'Q. 87:', 'Pointer - 4', 'Write a program to convert floating point values into its integral equivalent using pointer<br>Input and Output Format:<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>Note: In the floating point value mantissa is more equal or more than 0.50 then add one to the equivalent integer value<br>Refer sample input and output for formatting specification<br>Note:<br>If the decimal value is less than 0.50 then print the integer value and if the decimal value is above 0.50 or 0.50 then add one to the integer value.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	float n,*p;\r\n  	int T;\r\n  	scanf(\"%f\",&n);\r\n  	p=&n;\r\n  	T=n*10;\r\n  	if(T%10<5)\r\n  	   printf(\"%d\",T/10);\r\n  	else\r\n       printf(\"%d\",(T/10)+1);\r\n	return 0;\r\n}\r\n'),
(88, 'Pointers ', 'Q. 88:', 'BIGGEST VALUE IN A GIVEN ARRAY', 'Find biggest value in the array using pointers in C<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	int *p,n,i,Ar[10];\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n      scanf(\"%d\",&Ar[i]);\r\n  	p=&Ar[0];\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      if(Ar[i]>*p)\r\n        *p=Ar[i];\r\n    }\r\n  	printf(\"%d\",*p);\r\n  	return 0;\r\n}\r\n'),
(89, 'Pointers ', 'Q. 89:', 'Prime words', 'In the magic land of Mathtopia, the words of the language are written only using two symbols: ones and zeros.<br>A given word w is called \"prime\" if it cannot be written in the form of the concatenation of several copies of some shorter word. So, for example the words 100, 1100, and 001100 are prime, while the words 0101, 100100, 1111, and 101010 are not prime.<br>Your task is to calculate the number of prime words which can be built from exactly a ones and b zeros.<br>Input<br>t - the number of test cases. For each test case, two integers: 1<=a<=109, 1<=b<=109.<br>Output<br>For each test case, output the required answer modulo 531169.<br>Explanation: the 4 words from the example are: \'0011\',\'1100\',\'0110\',\'1001\'.<br>', '#include <stdio.h>\r\n \r\n#define PR 531169\r\n \r\nint fakt[PR];\r\nint inverz[PR];\r\n \r\nint inv(int x)\r\n{\r\n	int y=PR;\r\n	int p0=1,p1=0,t,p2;\r\n	while(y)\r\n	{\r\n		p2=p0-x/y*p1;\r\n		p0=p1;\r\n		p1=p2;\r\n		t=y;\r\n		y=x%y;\r\n		x=t;	\r\n	}\r\n \r\n	p0%=PR;\r\n	if (p0<0)\r\n		return p0+PR;\r\n	return p0;\r\n}\r\n \r\n \r\nvoid racunajfakt()\r\n{\r\n	int i;\r\n	long long temp=1;\r\n	fakt[0]=1;\r\n	inverz[0]=1;\r\n	for(i=1;i<PR;i++)\r\n	{\r\n		temp=(temp*i)%PR;\r\n		fakt[i]=temp;\r\n		inverz[i]=inv(temp);\r\n	}\r\n}\r\n \r\nint ost(int x, int y)\r\n{\r\n	long long temp;\r\n	if ((x+y)/PR>x/PR+y/PR)\r\n		return 0;\r\n	temp=fakt[(x+y)%PR];\r\n	temp=temp*fakt[(x+y)/PR]%PR;\r\n	temp=temp*inverz[x%PR]%PR;\r\n	temp=temp*inverz[y%PR]%PR;\r\n	temp=temp*inverz[x/PR]%PR;\r\n	temp=temp*inverz[y/PR]%PR;\r\n \r\n	return temp;\r\n}\r\n \r\n \r\nint gcd(int a, int b)\r\n{\r\n	int c;\r\n	while (b)\r\n	{\r\n		c=b;\r\n		b=a%b;\r\n		a=c;\r\n	}\r\n	return a;	\r\n}\r\n \r\n \r\nchar x[32000];\r\nint prosti[5000];\r\nint koliko;\r\n \r\n \r\nint elem[10];\r\nint brElem;\r\n \r\nint a,b;\r\n \r\nint ukupno;\r\n \r\nvoid rek(int zadnji, int mu, int prod)\r\n{\r\n	int i;\r\n	ukupno+=mu*ost(a/prod,b/prod);\r\n	\r\n	for(i=zadnji;i<brElem;i++)\r\n		rek(i+1,-mu,prod*elem[i]);\r\n}\r\n \r\n \r\nint main()\r\n{\r\n	int t;\r\n	int i,j,temp;\r\n	\r\n	for(i=2;i*i<31622;i++)\r\n		if (!x[i])\r\n			for(j=i*i;j<31622;j+=i)\r\n				x[j]=1;\r\n	\r\n	for(i=2;i<31622;i++)\r\n		if (!x[i])\r\n			prosti[koliko++]=i;\r\n \r\n	racunajfakt();\r\n \r\n	scanf(\"%d\",&t);\r\n	\r\n	while(t--)\r\n	{\r\n		scanf(\"%d %d\", &a, &b);\r\n \r\n		temp=gcd(a,b);\r\n		brElem=0;\r\n		for(i=0;prosti[i]*prosti[i]<=temp;i++)\r\n			if (temp%prosti[i]==0)\r\n			{\r\n				elem[brElem++]=prosti[i];\r\n				while (temp%prosti[i]==0)	\r\n					temp/=prosti[i];\r\n			}\r\n		if (temp>1)\r\n			elem[brElem++]=temp;\r\n			\r\n		ukupno=0;\r\n		rek(0,1,1);\r\n		ukupno%=PR;\r\n		if (ukupno<0)\r\n			ukupno+=PR;\r\n		printf(\"%d\\n\",ukupno);\r\n	}\r\n		\r\n} \r\n'),
(90, 'Pointers ', 'Q. 90:', 'Pointers - 24', 'Write a function that accepts a string using pointers. In the function ,delete all the occurrences of a given character and display the modified string on the screen<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	int i,f;\r\n    char n,Ar[30],*p;\r\n    scanf(\"%[^\\n]%*c\",Ar);\r\n    scanf(\"%c\",&n);\r\n    p=&Ar[0];\r\n    for(i=0;i<strlen(Ar);i++)\r\n    {\r\n        if(n==*p)\r\n        {\r\n          *p=*(p+1);\r\n          f=1;\r\n          n=\'0\';\r\n        }\r\n        if(f==1)\r\n          *p=*(p+1);\r\n        p++;\r\n    }\r\n    printf(\"%s\",Ar);\r\n	return 0;\r\n}\r\n'),
(91, 'Practice Session ', 'Q. 91:', 'LOWER TRIANGULAR MATRIX', 'A lower triangular matrix is a square matrix in which all the elements above the diagonal are zero.<br>That is, all the non-zero elements are in the lower triangle:<br>Write a C program to find whether a given matrix is a lower triangular matrix or not.<br>Input Format:<br>The input consists of (n*n+1) integers. The first integer corresponds to the number of rows/columns in the matrix. The remaining integers correspond to the elements in the matrix. The elements are read in rowwise order, first row first, then second row and so on. Assume that the maximum value of m and n is 5.<br>Output Format:<br>Print yes if it is a lower triangular matrix . Print no if it is not a lower triangular matrix.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int f=0,r,c,i,j;\r\n  	int Ar[10][10];\r\n  	scanf(\"%d%d\",&r,&c);\r\n  	for(i=0;i<r;i++)\r\n    {\r\n      for(j=0;j<c;j++)\r\n      	scanf(\"%d\",&Ar[i][j]);\r\n    }\r\n    for(i=0;i<r;i++)\r\n    {\r\n      for(j=i+1;j<c;j++)\r\n      {\r\n        if(Ar[i][j]==0)\r\n          f=1;\r\n        else\r\n        {\r\n          f=0;\r\n          break;\r\n        }\r\n      }\r\n      if(f==0)\r\n        break;\r\n    }\r\n  	if(f==1)\r\n  		printf(\"yes\");\r\n  	else if(f==0)\r\n      	printf(\"no\");\r\n	return 0;\r\n}\r\n'),
(92, 'Practice Session ', 'Q. 92:', 'Adding two distances', '1. Create a Structure called \"Distance\"<br>2. Create two data members of \"Distance Structure\" feet(int), inch(float)<br>3. Create three structure variables as d1, d2 and sumOfDistances 4. Get two distances and add the feet and inches.<br>Mandatory:<br>To add the distance using the structure variables as follows<br>1. sumOfDistances.feet=d1.feet+d2.feet<br>2 sumOfDistances.inch=d1.inch+d2.inch<br>', '#include <stdio.h>\r\nstruct Distance\r\n{\r\n  int feet;\r\n  float inch; \r\n};\r\nint main() \r\n{\r\n	struct Distance d1,d2,sumOfDistances;\r\n  	scanf(\"%d%f\",&d1.feet,&d1.inch);\r\n  	scanf(\"%d%f\",&d2.feet,&d2.inch);\r\n  	sumOfDistances.feet=d1.feet+d2.feet;\r\n    sumOfDistances.inch=d1.inch+d2.inch;\r\n  	printf(\"Sum of distances=%d feet and %.2f inches\",sumOfDistances.feet,sumOfDistances.inch);\r\n	return 0;\r\n}\r\n'),
(93, 'Practice Session ', 'Q. 93:', 'Last to first', 'Kanna is a mischievious boy. He always used to keep things in reverse order. One fine morning Kanna chat with his uncle. His uncle gave him set of numbers and he ask him to place numbers in reverse order. Can you help him to come out of this problem?<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int n,Ar[10],i;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n    	scanf(\"%d\",&Ar[i]);\r\n  	for(i=n-1;i>=0;i--)\r\n       printf(\"%d \",Ar[i]);\r\n	return 0;\r\n}\r\n'),
(94, 'Practice Session ', 'Q. 94:', 'FENCING THE GROUND', 'The college ground is rectangular in shape. The Management decides to build a fence around the ground. In order to help the construction workers to build a straight fence, they planned to place a thick rope around the ground. They wanted to buy only the exact length of the rope that is needed. They also wanted to cover the entire ground with a thick carpet during rainy season. They wanted to buy only the exact quantity of carpet that is needed. They requested your help.<br>Can you please help them by writing a C program to find the exact length of the rope and the exact quantity of carper that is required?<br>Input Format:<br>Input consists of 2 integers. The first integer corresponds to the length of the ground and the second integer corresponds to the breadth of the ground.<br>', '#include <stdio.h>\r\nint main()\r\n{\r\n	int l,b;\r\n  	scanf(\"%d%d\",&l,&b);\r\n  	printf(\"Required length is %d m\\nRequired quantity of carpet is %d sqm\",2*(l+b),l*b);\r\n	return 0;\r\n}\r\n'),
(95, 'Practice Session ', 'Q. 95:', 'Pointers - 34', 'Write a function that accepts a string using pointers. In the function ,delete all the occurrences of a given character and display the modified string on the screen (Case Insensitive)<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	int i;\r\n    char N[30],*p,f[2];\r\n  	scanf(\"%s\",N);\r\n    scanf(\"%s\",f);\r\n  	p=&N[0];\r\n  	for(i=0;i<strlen(N);i++)\r\n    {\r\n      if(*p!=f[0])\r\n        printf(\"%c\",*p);\r\n      p++;\r\n    }\r\n	return 0;\r\n}\r\n'),
(96, 'Practice Session ', 'Q. 96:', 'Sum of Negative Numbers', 'Write a program to find the sum of negative numbers in an array.<br>Input Format:<br>Input consists of n+1 integers. The first integer corresponds to n , the size of the array. The next n integers correspond to the elements in the array. Assume that the maximum value of n is 15.<br>Output Format:<br>Refer sample output for details.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int i,n,Ar[15],s=0;\r\n  	scanf(\"%d\",&n);\r\n  	for(i=0;i<n;i++)\r\n 		scanf(\"%d\",&Ar[i]);\r\n  	for(i=0;i<n;i++)\r\n    {\r\n      if(Ar[i]<0)\r\n        s=s+Ar[i];\r\n    }\r\n  	printf(\"sum=%d\",s);\r\n	return 0;\r\n}\r\n'),
(97, 'Practice Session ', 'Q. 97:', 'Back 2 Back', 'Rand has a task to find the sum of first and last digit of number upto given n numbers.Help him in<br>writing C code to enter any number and find the sum of first and last digit of the number using for loop.<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int n,i,t,s;\r\n    scanf(\"%d\",&n);\r\n    t=n;\r\n    s=t%10;\r\n    t=t/1000;\r\n  	s=s+t;\r\n    printf(\"%d\",s);  \r\n	return 0;\r\n}\r\n'),
(98, 'Practice Session ', 'Q. 98:', 'Tick Tick Tick', 'Hemas teacher give one assignment to him. she should write a code to find the time entered in hours,seconds and minutes into seconds. Help him to solve this task<br>', '#include <stdio.h>\r\nint main() \r\n{\r\n	int h,m,s;\r\n    scanf(\"%d%d%d\",&h,&m,&s);\r\n    printf(\"%d\",(h*3600)+(m*60)+s);\r\n	return 0;\r\n}\r\n'),
(99, 'Practice Session ', 'Q. 99:', 'Structures - 39', 'write a program to read and display the information of all the students in the class. THen edit the details of i the student and redisplay the entire information<br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output.<br>', '#include <stdio.h>\r\nstruct Stud\r\n{\r\n  int n,fees;\r\n  char name[30],Date[10];\r\n}S[5];\r\nint main() \r\n{\r\n	int i,T;\r\n    scanf(\"%d\",&T);\r\n    for(i=0;i<T;i++)\r\n    {\r\n      scanf(\"%d\",&S[i].n);\r\n      scanf(\"%s\",S[i].name);\r\n      scanf(\"%s\",S[i].Date);\r\n      scanf(\"%d\",&S[i].fees);\r\n    }\r\n    for(i=0;i<T;i++)\r\n       printf(\"Roll no:%d\\nName:%s\\nDOB:%s\\nFees:%d\\n\",S[i].n,S[i].name,S[i].Date,S[i].fees);\r\n    return 0;\r\n}\r\n'),
(100, 'Practice Session ', 'Q. 100:', 'Printing Next', 'Latha and Trisha are friends. They love to play with words. Ishu gives them a task to replace each characters in a string with its next letter. Can you help them to complete this task?<br>', '#include <stdio.h>\r\n#include <string.h>\r\nint main() \r\n{\r\n	char Ar[10],i;\r\n    scanf(\"%s\",Ar);\r\n    for(i=0;i<strlen(Ar);i++)\r\n    	printf(\"%c\",++Ar[i]);\r\n	return 0;\r\n}\r\n');

-- --------------------------------------------------------

--
-- Table structure for table `elabtestcase`
--

DROP TABLE IF EXISTS `elabtestcase`;
CREATE TABLE IF NOT EXISTS `elabtestcase` (
  `dataid` int(100) DEFAULT NULL,
  `TESTCASE_NO` varchar(100) DEFAULT NULL,
  `INPUT` varchar(500) DEFAULT NULL,
  `OUTPUT` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `elabtestcase`
--

INSERT INTO `elabtestcase` VALUES
(1, 'TEST CASE 1', '34<br>', 'FALSE<br>'),
(1, 'TEST CASE 2', '25<br>', 'TRUE<br>'),
(2, 'TEST CASE 1', 'P<br>', 'p<br>'),
(2, 'TEST CASE 2', 'C<br>', 'c<br>'),
(3, 'TEST CASE 1', '10<br>5<br>6<br>4<br>', 'Third person wins<br>'),
(3, 'TEST CASE 2', '4<br>9<br>6<br>7<br>', 'No person wins<br>'),
(4, 'TEST CASE 1', '3<br>', 'March<br>'),
(4, 'TEST CASE 2', '6<br>', 'June<br>'),
(5, 'TEST CASE 1', '45 45 45<br>', 'The grade is F<br>'),
(5, 'TEST CASE 2', '91 95 100<br>', 'The grade is A<br>'),
(6, 'TEST CASE 1', '25<br>', 'Decimal value:25<br>Octal value:31<br>Hexadecimal value:19<br>'),
(6, 'TEST CASE 2', '29<br>', 'Decimal value:29<br>Octal value:35<br>Hexadecimal value:1d<br>'),
(7, 'TEST CASE 1', '32<br>', 'This balloon can fly to miney<br>'),
(7, 'TEST CASE 2', '4<br>', 'This balloon cannot fly to miney<br>'),
(8, 'TEST CASE 1', 'A<br>5<br>100<br>1<br>200<br>', 'The fee to be paid is Rs=700<br>'),
(8, 'TEST CASE 2', 'B<br>5<br>100<br>1<br>200<br>', 'The fee to be paid is Rs=5700<br>'),
(9, 'TEST CASE 1', '28<br>22<br>', 'widgets=28<br>gizmo=22<br>Total weight=4.564<br>'),
(9, 'TEST CASE 2', '54<br>23<br>', 'widgets=54<br>gizmo=23<br>Total weight=6.626<br>'),
(10, 'TEST CASE 1', 'c<br>', 'ASCII value of c=99<br>'),
(10, 'TEST CASE 2', 'e<br>', 'ASCII value of e=101<br>'),
(12, 'TEST CASE 1', '1234<br>', 'Number of Digits:4<br>'),
(12, 'TEST CASE 2', '874527<br>', 'Number of Digits:6<br>'),
(13, 'TEST CASE 1', '120<br>60<br>60<br>', 'isosceles<br>'),
(13, 'TEST CASE 2', '60<br>60<br>60<br>', 'equilateral<br>'),
(14, 'TEST CASE 1', '2112<br>', 'Mirror Image<br>'),
(16, 'TEST CASE 1', '35<br>', 'NOT<br>'),
(16, 'TEST CASE 2', '34<br>', '34 = 3 + 31<br>34 = 5 + 29<br>34 = 11 + 23<br>34 = 17 + 17<br>'),
(17, 'TEST CASE 1', '3<br>john johanna<br>ira ira<br>kayla jayla<br>', 'YES<br>YES<br>NO<br>'),
(17, 'TEST CASE 2', '3<br>nivi pavi<br>tifu tifk<br>vishu nisha<br>', 'NO<br>NO<br>NO<br>'),
(18, 'TEST CASE 1', '2<br>6<br>1 2 3 4 5 6<br>3<br>2 3 4<br>6<br>22 5 6 33 1 4<br>2<br>4 15<br>', 'Yes<br>No<br>'),
(18, 'TEST CASE 2', '2<br>4<br>1 2 3 4<br>3<br>1 2 3<br>2<br>1 3<br>3<br>1 3 6<br>', 'Yes<br>No<br>'),
(19, 'TEST CASE 1', '4 4<br>', 'I prefer centre 1<br>'),
(19, 'TEST CASE 2', '4 8<br>', 'I prefer centre 2<br>'),
(20, 'TEST CASE 1', '7.2 1.5<br>', 'The Subtraction of two number is:5.700000<br>The Subtraction of two number is:5.70<br>'),
(20, 'TEST CASE 2', '5.0 2.0<br>', 'The Subtraction of two number is:3.000000<br>The Subtraction of two number is:3.00<br>'),
(21, 'TEST CASE 1', '2<br>5 2<br>11 3<br>', '1<br>2<br>'),
(21, 'TEST CASE 2', '3<br>5 3<br>11 2<br>7 2<br>', '2<br>1<br>1<br>'),
(22, 'TEST CASE 1', '16<br>', '1<br>'),
(22, 'TEST CASE 2', '24<br>', '5<br>'),
(23, 'TEST CASE 1', '300<br>', '3<br>'),
(23, 'TEST CASE 2', '16789<br>', '31<br>'),
(24, 'TEST CASE 1', '2<br>1 2<br>100 200<br>', '1<br>100<br>'),
(24, 'TEST CASE 2', '3<br>39 10<br>5 2<br>15 8<br>', '9<br>1<br>7<br>'),
(25, 'TEST CASE 1', '1<br>', '1<br>'),
(25, 'TEST CASE 2', '2<br>', '8<br>'),
(26, 'TEST CASE 1', '8<br>', '21<br>'),
(26, 'TEST CASE 2', '12<br>', '144<br>'),
(27, 'TEST CASE 1', '12<br>', 'NOT NULL<br>'),
(28, 'TEST CASE 1', '15<br>1 2 3 4 5 6 7 8 9 10 -11 -12 -13 -14 -15<br>', '10<br>-65<br>'),
(28, 'TEST CASE 2', '14<br>0 2 3 0 5 6 7 8 9 10 -11 -12 -13 -14<br>', '8<br>-50<br>Problem with Question? Report<br>'),
(29, 'TEST CASE 1', '6435 6927 6855 7230 6562 7000.000<br>', 'The required sale in the sixth month is 7991.00<br>'),
(29, 'TEST CASE 2', '6000 6000 6000 6000 6000 7000.435<br>', 'The required sale in the sixth month is 12002.61<br>'),
(30, 'TEST CASE 1', '2<br>1 4<br>2 3<br>', '10<br>21<br>'),
(30, 'TEST CASE 2', '5<br>1 4<br>2 3<br>3 6<br>3 7<br>1 8<br>', '10<br>21<br>26796<br>82621<br>36<br>'),
(31, 'TEST CASE 1', '10<br>', '55<br>'),
(31, 'TEST CASE 2', '5<br>', '15<br>'),
(32, 'TEST CASE 1', '1<br>', '0000001<br>'),
(32, 'TEST CASE 2', '121<br>', '1111001<br>'),
(33, 'TEST CASE 1', '5<br>', '#####<br>####<br>###<br>##<br>#<br>'),
(34, 'TEST CASE 1', '2<br>ABABAB<br>ABC<br>', 'YES<br>NO<br>'),
(34, 'TEST CASE 2', '3<br>ABAAA<br>AAAAA<br>AAAAA\\\\\\\"<br>', 'NO<br>NO<br>NO<br>'),
(35, 'TEST CASE 1', '5<br>1 4 5 7 9<br>5<br>', '2<br>'),
(35, 'TEST CASE 2', '5<br>1 4 5 7 9<br>1<br>', '0<br>'),
(36, 'TEST CASE 1', '8 1<br>', '8 7 6 5 4 3 2 1<br>'),
(36, 'TEST CASE 2', '9 9<br>', 'No Number<br>'),
(37, 'TEST CASE 1', '30<br>5<br>', '35<br>25<br>'),
(37, 'TEST CASE 2', '10<br>4<br>', '14<br>6<br>'),
(38, 'TEST CASE 1', '4<br>1 2 3 1<br>', 'Peak Element=3<br>Index Value=2<br>'),
(38, 'TEST CASE 2', '6<br>6 2 5 8 9 7<br>', 'Peak Element=9<br>Index Value=4<br>'),
(39, 'TEST CASE 1', '5<br>2 3 0 7 0<br>', '2<br>'),
(39, 'TEST CASE 2', '4<br>4 3 7 6<br>', '20<br>'),
(40, 'TEST CASE 1', '5<br>23<br>13<br>20<br>1000<br>99991<br>', 'yes<br>yes<br>no<br>no<br>yes<br>'),
(40, 'TEST CASE 2', '4<br>45<br>7<br>61<br>23<br>', 'no<br>yes<br>yes<br>yes<br>'),
(41, 'TEST CASE 1', '2<br>5 2<br>11 3<br>', '1<br>2<br>'),
(41, 'TEST CASE 2', '3<br>5 3<br>11 2<br>7 2<br>', '2<br>1<br>1<br>'),
(42, 'TEST CASE 1', '5<br>14 25 13 34 45<br>4<br>', 'Array after deletion is<br>14 25 13 34<br>'),
(42, 'TEST CASE 2', '5<br>1 2 3 4 5<br>2<br>', 'Array after deletion is<br>1 2 4 5<br>'),
(43, 'TEST CASE 1', '5 1 2 3 4 5<br>', '3<br>'),
(43, 'TEST CASE 2', '3 1 2 3<br>', '2<br>'),
(44, 'TEST CASE 1', '1<br>0000000101011<br>', '3<br>2 0<br>2 0<br>1 1<br>'),
(44, 'TEST CASE 2', '1<br>0001000100011<br>', '4<br>2 0<br>2 0<br>0 1<br>1 1<br>'),
(45, 'TEST CASE 1', '5<br>21 8 41 13 15<br>', '21 41 15<br>'),
(45, 'TEST CASE 2', '9<br>2 8 4 1 3 6 8 11 38<br>', '2 4 3 8 38<br>'),
(46, 'TEST CASE 1', '6<br>10 20 30 10 50 60<br>10<br>', '2<br>'),
(46, 'TEST CASE 2', '3<br>1 2 3<br>3<br>', '1<br>'),
(47, 'TEST CASE 1', '2<br>1<br>2<br>', 'Case 1: 1<br>Case 2: 3<br>'),
(47, 'TEST CASE 2', '3<br>2<br>3<br>', 'Case 1: 3<br>Case 2: 7<br>Case 3: 7<br>'),
(48, 'TEST CASE 1', '9<br>9 8 7 6 5 4 3 2 1<br>', '1 2 3 4 5 6 7 8 9<br>'),
(48, 'TEST CASE 2', '4<br>9 19 7 99<br>', '7 9 19 99<br>'),
(49, 'TEST CASE 1', '5<br>2 3 6 8 -1<br>', 'sum=19<br>'),
(49, 'TEST CASE 2', '5<br>-1 -2 -3 -4 -5<br>', 'sum=0<br>'),
(50, 'TEST CASE 1', '5 1 2 3 4 5<br>', '3<br>'),
(50, 'TEST CASE 2', '3 1 2 3<br>', '2<br>'),
(51, 'TEST CASE 1', 'srm university srm university<br>srm<br>', '0<br>15<br>'),
(51, 'TEST CASE 2', 'srm srm srm srm srm<br>srm<br>', '0<br>4<br>8<br>12<br>16<br>'),
(52, 'TEST CASE 1', 'srmuniversitylearningcentre<br>', 'a = 1<br>c = 1<br>e = 4<br>g = 1<br>i = 3<br>l = 1<br>m = 1<br>n = 4<br>r = 4<br>s = 2<br>t = 2<br>u = 1<br>v = 1<br>y = 1<br>'),
(52, 'TEST CASE 2', 'srmapplelab<br>', 'a = 2<br>b = 1<br>e = 1<br>l = 2<br>m = 1<br>p = 2<br>r = 1<br>s = 1<br>'),
(53, 'TEST CASE 1', 'abc<br>', 'bcd<br>'),
(53, 'TEST CASE 2', 'appa<br>', 'bqqb<br>'),
(54, 'TEST CASE 1', 'SRM UNIVERSITY<br>SRM<br>', 'UNIVERSITY<br>'),
(54, 'TEST CASE 2', 'srm university<br>university<br>', 'srm<br>'),
(55, 'TEST CASE 1', 'a.ba<br>', 'abba<br>'),
(55, 'TEST CASE 2', 'cb.bc<br>', 'cbabc<br>'),
(56, 'TEST CASE 1', 'I Love C Programming<br>Programming<br>', 'I Love C<br>'),
(56, 'TEST CASE 2', 'SRM UNIVERSITY IS IN CHENNAI<br>CHENNAI<br>', 'SRM UNIVERSITY IS IN<br>'),
(57, 'TEST CASE 1', '5<br>', '1<br>2 3 2<br>3 4 5 4 3<br>4 5 6 7 6 5 4<br>5 6 7 8 9 8 7 6 5<br>'),
(57, 'TEST CASE 2', '3<br>', '1<br>2 3 2<br>3 4 5 4 3<br>'),
(58, 'TEST CASE 1', '6<br>gaga<br>abcde<br>rotor<br>xyzxy<br>abbaab<br>ababc<br>', 'YES<br>NO<br>YES<br>YES<br>NO<br>NO<br>'),
(58, 'TEST CASE 2', '1<br>gaga<br>', 'YES<br>'),
(59, 'TEST CASE 1', '2<br>z<br>abcd<br>', '0<br>144<br>'),
(59, 'TEST CASE 2', '2<br>w<br>abcde<br>', '0<br>8880<br>'),
(61, 'TEST CASE 1', '5<br>2 3 6 8 1<br>1 1 1 1 1<br>', 'Compatible<br>'),
(61, 'TEST CASE 2', '5<br>2 3 6 8 1<br>1 1 1 2 2<br>', 'Incompatible<br>'),
(62, 'TEST CASE 1', 'eat<br>2<br>tea<br>ate<br>', 'Yes<br>Yes<br>'),
(62, 'TEST CASE 2', 'tiger<br>3<br>get<br>tier<br>great<br>', 'Yes<br>Yes<br>No<br>'),
(63, 'TEST CASE 1', '43<br>', 'The sum of digits in 43 is 7<br>'),
(63, 'TEST CASE 2', '84<br>', 'The sum of digits in 84 is 12<br>'),
(64, 'TEST CASE 1', '4<br>4<br>0<br>6<br>8<br>', '1<br>0<br>0<br>1<br>'),
(64, 'TEST CASE 2', '2<br>6<br>8<br>', '0<br>1<br>'),
(65, 'TEST CASE 1', '32<br>', 'YES<br>'),
(65, 'TEST CASE 2', '36<br>', 'NO<br>'),
(67, 'TEST CASE 1', '5<br>1 2 3 4 5<br>4<br>10<br>', '1<br>2<br>3<br>10<br>4<br>5<br>'),
(67, 'TEST CASE 2', '3<br>1 2 3<br>4<br>1<br>', 'Sorry Invalid Location<br>'),
(68, 'TEST CASE 1', '7<br>-3 -2 1 4 6 -4 9<br>', 'Sum of positive elements is:20<br>Sum of negative elements is:-9<br>'),
(68, 'TEST CASE 2', '5<br>-1 -2 -3 5 4<br>', 'Sum of positive elements is:9<br>Sum of negative elements is:-6<br>'),
(69, 'TEST CASE 1', '2<br>', '3<br>'),
(69, 'TEST CASE 2', '3<br>', '6<br>'),
(70, 'TEST CASE 1', '6<br>2 5 1 7 4 2<br>', 'Maximum element in the array is 7<br>'),
(70, 'TEST CASE 2', '4<br>9 8 7 6<br>', 'Maximum element in the array is 9<br>'),
(71, 'TEST CASE 1', '3<br>raju cse 1 7.8<br>somu IT 2 8.2<br>Jagan swe 3 8.6<br>', 'Name:Jagan<br>Department:swe<br>Year of study:3<br>CGPA:8.6<br>Name:raju<br>Department:cse<br>Year of study:1<br>CGPA:7.8<br>Name:somu<br>Department:IT<br>Year of study:2<br>CGPA:8.2<br>'),
(71, 'TEST CASE 2', '2<br>shujathkhan IT 3 9.1<br>john cse 3 9.3<br>', 'Name:john<br>Department:cse<br>Year of study:3<br>CGPA:9.3<br>Name:shujathkhan<br>Department:IT<br>Year of study:3<br>CGPA:9.1<br>Problem with Question? Report<br>'),
(72, 'TEST CASE 1', '8<br>', '9 10 11 12 13<br>'),
(72, 'TEST CASE 2', '6<br>', '7 8 9 10 11<br>'),
(73, 'TEST CASE 1', '3 3 5<br>', '3<br>3<br>5<br>'),
(73, 'TEST CASE 2', '3 3 6<br>', '3<br>3<br>6<br>Problem with Question? Report<br>'),
(74, 'TEST CASE 1', '5<br>', '1*5=5<br>2*5=10<br>3*5=15<br>4*5=20<br>5*5=25<br>'),
(74, 'TEST CASE 2', '10<br>', '1*10=10<br>2*10=20<br>3*10=30<br>4*10=40<br>5*10=50<br>'),
(75, 'TEST CASE 1', 'Rajesh<br>101<br>25 12 1989<br>', 'Name=Rajesh<br>RollNo=101<br>Date of birth=25/12/1989<br>'),
(75, 'TEST CASE 2', 'Bogar<br>102<br>11 11 1111<br>', 'Name=Bogar<br>RollNo=102<br>Date of birth=11/11/1111<br>'),
(76, 'TEST CASE 1', '12<br>ram<br>it<br>2333<br>', 'Roll no:12<br>Name:ram<br>Course:it<br>Fees:2333<br>'),
(76, 'TEST CASE 2', '15<br>john<br>cse<br>15000<br>', 'Roll no:15<br>Name:john<br>Course:cse<br>Fees:15000<br>'),
(77, 'TEST CASE 1', '12 12 33<br>3 1 3<br>', '15 hrs<br>13 min<br>36 sec<br>'),
(77, 'TEST CASE 2', '0 0 1<br>0 1 1<br>', '0 hrs<br>1 min<br>2 sec<br>'),
(78, 'TEST CASE 1', 'Pen<br>5.5<br>10<br>', 'Name=Pen<br>Price=5.500000<br>Quantity=10<br>Total Amount=55.00<br>'),
(78, 'TEST CASE 2', 'Chocolate<br>15.5<br>102<br>', 'Name=Chocolate<br>Price=15.500000<br>Quantity=102<br>Total Amount=1581.00<br>'),
(79, 'TEST CASE 1', 'raja<br>', '4<br>'),
(79, 'TEST CASE 2', 'rambabu<br>', '7<br>'),
(80, 'TEST CASE 1', '15 16 39<br>', '15 16 39 23<br>'),
(80, 'TEST CASE 2', '56 89 96<br>', '56 89 96 80<br>'),
(81, 'TEST CASE 1', '5<br>4<br>', 'The sum of the entered numbers is=9<br>'),
(81, 'TEST CASE 2', '9<br>10<br>', 'The sum of the entered numbers is=19<br>'),
(82, 'TEST CASE 1', '2<br>1 2<br>', '2 1<br>'),
(82, 'TEST CASE 2', '5<br>1 2 6 8 5<br>', '5 8 6 2 1<br>'),
(83, 'TEST CASE 1', 'SRM university<br>', 'ytisrevinu MRS<br>'),
(83, 'TEST CASE 2', 'asdfghjk<br>', 'kjhgfdsa<br>'),
(84, 'TEST CASE 1', 'S<br>', 'Input is upper case<br>Lower case=s<br>'),
(84, 'TEST CASE 2', 'c<br>', 'Input is lower case<br>Upper case=C<br>'),
(85, 'TEST CASE 1', '4<br>5<br>', '-1.00<br>'),
(85, 'TEST CASE 2', '10<br>6<br>', '4.00<br>'),
(86, 'TEST CASE 1', 'welcome<br>', '3 4<br>'),
(86, 'TEST CASE 2', 'hello<br>', '2 3<br>'),
(87, 'TEST CASE 1', '3.49<br>', '3<br>'),
(87, 'TEST CASE 2', '3.50<br>', '4<br>'),
(88, 'TEST CASE 1', '2 58 98<br>', '98<br>'),
(88, 'TEST CASE 2', '3 100 80 10<br>', '100<br>'),
(89, 'TEST CASE 1', '1<br>2 2<br>', '4<br>'),
(89, 'TEST CASE 2', '2<br>4 4<br>', '64<br>64<br>'),
(90, 'TEST CASE 1', 'SRM University<br>S<br>', 'RM University<br>'),
(90, 'TEST CASE 2', 'SRM University<br>R<br>', 'SM University<br>'),
(91, 'TEST CASE 1', '3 3<br>1 0 0<br>2 1 0<br>1 1 1<br>', 'yes<br>'),
(91, 'TEST CASE 2', '3 3<br>1 1 0<br>2 2 0<br>1 2 1<br>', 'no<br>Problem with Question? Report<br>'),
(92, 'TEST CASE 1', '23 8.6<br>34 2.4<br>', 'Sum of distances=57 feet and 11.00 inches<br>'),
(92, 'TEST CASE 2', '25 11.9<br>34 2.5<br>', 'Sum of distances=59 feet and 14.40 inches<br>'),
(93, 'TEST CASE 1', '3<br>15 82 91<br>', '91 82 15<br>'),
(93, 'TEST CASE 2', '5<br>16 15 18 88 53<br>', '53 88 18 15 16<br>'),
(94, 'TEST CASE 1', '50 20<br>', 'Required length is 140 m<br>Required quantity of carpet is 1000 sqm<br>'),
(94, 'TEST CASE 2', '121 23<br>', 'Required length is 288 m<br>Required quantity of carpet is 2783 sqm<br>'),
(95, 'TEST CASE 1', 'SRMUniversity<br>i<br>', 'SRMUnversty<br>'),
(95, 'TEST CASE 2', 'SRMUniversity<br>t<br>', 'SRMUniversiy<br>'),
(96, 'TEST CASE 1', '5<br>2 3 6 8 -1<br>', 'sum=-1<br>'),
(96, 'TEST CASE 2', '5<br>-1 -2 -3 -4 4<br>', 'sum=-10<br>'),
(97, 'TEST CASE 1', '1234<br>', '5<br>'),
(97, 'TEST CASE 2', '8231<br>', '9<br>'),
(98, 'TEST CASE 1', '2 30 4<br>', '9004<br>'),
(98, 'TEST CASE 2', '10 5 60<br>', '36360<br>'),
(99, 'TEST CASE 1', '2<br>1101<br>Ramesh<br>25dec1990<br>15000<br>1102<br>Suresh<br>09sep1989<br>30000<br>', 'Roll no:1101<br>Name:Ramesh<br>DOB:25dec1990<br>Fees:15000<br>Roll no:1102<br>Name:Suresh<br>DOB:09sep1989<br>Fees:30000<br>'),
(99, 'TEST CASE 2', '3<br>1101<br>Ramesh<br>25dec1990<br>15000<br>1102<br>Suresh<br>09sep1989<br>30000<br>1103<br>Ganesh<br>12oct2011<br>40000<br>', 'Roll no:1101<br>Name:Ramesh<br>DOB:25dec1990<br>Fees:15000<br>Roll no:1102<br>Name:Suresh<br>DOB:09sep1989<br>Fees:30000<br>Roll no:1103<br>Name:Ganesh<br>DOB:12oct2011<br>Fees:40000<br>'),
(100, 'TEST CASE 1', 'abc<br>', 'bcd<br>'),
(100, 'TEST CASE 2', 'Appa<br>', 'Bqqb<br>');
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
