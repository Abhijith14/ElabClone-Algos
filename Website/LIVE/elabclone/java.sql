-- phpMyAdmin SQL Dump
-- version 5.0.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Oct 19, 2020 at 09:24 PM
-- Server version: 10.4.14-MariaDB
-- PHP Version: 7.4.11

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `java`
--

-- --------------------------------------------------------

--
-- Table structure for table `elabdata`
--

CREATE TABLE `elabdata` (
  `id` int(100) DEFAULT NULL,
  `SESSION` varchar(255) DEFAULT NULL,
  `QUESTION_NO` varchar(100) DEFAULT NULL,
  `QUESTION_NAME` varchar(255) DEFAULT NULL,
  `QUESTION_DESC` varchar(3000) DEFAULT NULL,
  `CODE` varchar(5000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `elabdata`
--

INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(1, 'Input and Output Statemen', 'Q. 1:', 'Java Output Formatting', 'Java\'s System.out.printf function can be used to print formatted output. The purpose of this exercise is to test your understanding of formatting output using printf.<br>To get you started, a portion of the solution is provided for you in the editor; you must format and print the input to complete the solution.<br>Input Format<br>Every line of input will contain a String followed by an integer. <br>Each String will have a maximum of  alphabetic characters, and each integer will be in the inclusive range from to .<br>Output Format<br>In each line of output there should be two columns: <br>The first column contains the String and is left justified using exactly  characters. <br>The second column contains the integer, expressed in exactly  digits; if the original input has less than three digits, you must pad your output\'s leading digits with zeroes.<br>Each String is left-justified with trailing whitespace through the first  characters. The leading digit of the integer is the  character, and each integer that was less than  digits now has leading zeroes.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n       \r\n       Scanner sc = new Scanner(System.in);\r\n       for(int i=0;i<3;i++)\r\n        {\r\n            String str = sc.next();\r\n            int x = sc.nextInt();\r\n            System.out.printf(\"%s 0%d%n\", str, x);\r\n        }\r\n       \r\n	}\r\n}'),
(2, 'Input and Output Statemen', 'Q. 2:', 'Units of Time - Reversed', 'Develop a program that begins by reading a number of seconds from the user.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n       \r\n		Scanner sc = new Scanner(System.in);\r\n       	int time = sc.nextInt();\r\n       //	System.out.println(time);\r\n        \r\n       	int days = time / 86400;\r\n        double d1 = time / 86400.0;\r\n       	double d2 = (d1 - days) * 86400;\r\n       \r\n        int hours = (int)d2 / 3600;\r\n        double h1 = d2 / 3600.0;\r\n        double h2 = (h1 - hours) * 3600;\r\n       \r\n        int minutes = (int)h2 / 60;\r\n        double m1 = h2 / 60.0;\r\n        double m2 = (m1 - minutes) * 60;\r\n       \r\n        int seconds = (int) Math.round(m2);\r\n       \r\n       \r\n        System.out.println(\"Duration\");\r\n        System.out.printf(\"%d days\\n\",days);\r\n        System.out.printf(\"%d hours\\n\",hours);\r\n        System.out.printf(\"%d minutes\\n\",minutes);\r\n       	System.out.printf(\"%d seconds\", seconds);\r\n       }\r\n}'),
(3, 'Input and Output Statemen', 'Q. 3:', 'Sum of all digits', 'You\'re given an integer N. Write a program to calculate the sum of all the digits of N.<br>Input<br>The input integer N<br>Output<br>Calculate the sum of digits of N.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int N = sc.nextInt();\r\n       //System.out.println(N);\r\n       \r\n       //int len = String.valueOf(N).length();\r\n       \r\n       int i = N, rem = 0, s = 0;\r\n       \r\n       while (i != 0){\r\n        \r\n         rem = i % 10;\r\n         i = i / 10;\r\n         s = s + rem;\r\n       }\r\n       \r\n       System.out.println(s);\r\n       \r\n       \r\n	}\r\n}'),
(4, 'Input and Output Statemen', 'Q. 4:', 'Points in triangle', 'Suppose a right triangle is placed in a plane as shown below. <br>The right-angle point is placed at (0, 0), and the other two points are placed at (200, 0), and (0, 100). Write a program that prompts the user to enter a point with x- and y-coordinates and determines whether the point is inside the triangle.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int x = sc.nextInt();\r\n       int y = sc.nextInt();\r\n       \r\n       int temp = 0;\r\n       \r\n       if (x > 0 && x < 200) {\r\n        	\r\n         if (y > 0 && y < 100){\r\n          System.out.println(\"The point is in the triangle\"); \r\n         }\r\n         else {\r\n           temp = 1;\r\n         } \r\n       }\r\n       else {\r\n        	temp = 1; \r\n       }\r\n       \r\n       if (temp == 1) {\r\n         \r\n            System.out.println(\"The point is not in the triangle\");\r\n       }\r\n       \r\n	}\r\n}'),
(5, 'Input and Output Statemen', 'Q. 5:', 'Solve me  First', 'Welcome to HackerRank! The purpose of this challenge is to familiarize you with reading input from stdin (the standard input stream) and writing output to stdout (the standard output stream) using our environment.<br>Review the code provided in the editor below, then complete the solveMeFirst function so that it returns the sum of two integers read from stdin. Take some time to understand this code so you\'re prepared to write it yourself in future challenges.<br>Select a language below, and start coding!<br>Input Format<br>Code that reads input from stdin is provided for you in the editor. There are  lines of input, and each line contains a single integer.<br>Output Format<br>Code that prints the sum calculated and returned by solveMeFirst is provided for you in the editor.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n1 = sc.nextInt();\r\n       int n2 = sc.nextInt();\r\n       \r\n       System.out.println(n1 + n2);\r\n       \r\n	}\r\n}'),
(6, 'Input and Output Statemen', 'Q. 6:', 'Simple Interest', 'Write a program to find the simple interest for given principal amount P, time T(in years) and rate R.<br>Input:<br>Each test case should contain three values P,T,R.<br>Output:<br>Print the simple interest<br>Constraints:<br>1<=T<=100<br>1<=P<=1000<br>1<=T<=20<br>1<=R<=20', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int P = sc.nextInt();\r\n       float R = sc.nextFloat();\r\n       int T = sc.nextInt();\r\n       \r\n       float m = P * R * T;\r\n       \r\n       System.out.println(m / 100);\r\n	}\r\n}'),
(7, 'Input and Output Statemen', 'Q. 7:', 'Units of Time', 'Create a program that reads a duration from the user as a number of days, hours, minutes, and seconds. Compute and display the total number of seconds represented<br>by this duration.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int days = sc.nextInt();\r\n       int hours = sc.nextInt();\r\n       int minutes = sc.nextInt();\r\n       int seconds = sc.nextInt();\r\n       \r\n       \r\n       int Total = (days * 86400) + (hours * 3600) + (minutes * 60) + seconds;\r\n       \r\n       System.out.printf(\"The Total Seconds for %d days %d hours %d minutes %d seconds is %d\",days, hours, minutes, seconds, Total);\r\n	}\r\n}'),
(8, 'Input and Output Statemen', 'Q. 8:', 'Area of Triangle', 'Write a program in java to find the Area of a triangle.<br>First you create a method for calculating the area.<br>Read or get the value of base width and height of  triangle from user.<br>then calculate the area of triangle and then print the triangle value.<br>Area of Triangle = (base width * height)/2<br>Note: input values may have decimal values<br>          output values should print with decimal values.<br>Sample Input<br>5 7<br>Sample Output<br>Base Width: 5.0<br>Enter Height: 7.0<br>Area of Triangle: 17.5', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n 		\r\n         Scanner sc= new Scanner(System.in);\r\n         double b= sc.nextDouble();\r\n         double h= sc.nextDouble();\r\n         double area=(b*h)/2;\r\n         System.out.println(\"Base Width: \"+b);\r\n       	 System.out.println(\"Height: \"+h);\r\n         System.out.println(\"Area of Triangle: \" + area);     \r\n       \r\n	}\r\n}'),
(9, 'Input and Output Statemen', 'Q. 9:', 'Salary Calculator', 'Help Raja to calculate a first salary that he got from the organization , he was confused with an salary credited in hs account . He asked his friend ritu to identify how salary pay got calculated by giving the format of salary .<br>His basic pay (to be entered by user) and<br>Ritu developed a software to calculate the salary pay,with format given as below<br>HRA=80% of the basic pay,<br>dA=40% of basic pay .<br>bonus = 25 % of hra <br>Input and Output Format:<br>Refer sample input and output for formatting specification.<br>All float values are displayed correct to 2 decimal places.<br>All text in bold corresponds to input and the rest corresponds to output', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int BP = sc.nextInt();\r\n       \r\n       float HRA = (80*(float)BP)/100;\r\n       float dA = (40*(float)BP)/100;\r\n       float bonus = (25*HRA)/100;\r\n       \r\n       float total = BP + HRA + dA + bonus;\r\n       \r\n       System.out.printf(\"Total Salary= %.1f\", total);\r\n	}\r\n}'),
(10, 'Input and Output Statemen', 'Q. 10:', 'Add Two Integers', 'Write a java program to declare two integer variables and get input from user. Add the two input variables and display the answer as output', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n1 = sc.nextInt();\r\n       int n2 = sc.nextInt();\r\n       \r\n       System.out.println(n1+n2);\r\n       \r\n     }\r\n  \r\n}'),
(11, 'Data types and Operators', 'Q. 11:', 'Type Casting problem', 'Get an integer as input and convert it to float via long data type.<br>Output Values:<br>1. Integer type<br>2. Long Type<br>3. Float Data type', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int num = sc.nextInt();\r\n     \r\n       System.out.println(\"Int value \" + num);\r\n       System.out.println(\"Long value \" + (long)num);\r\n       System.out.println(\"Float value \" + (float)num);\r\n       \r\n     }\r\n  \r\n}'),
(12, 'Data types and Operators', 'Q. 12:', 'Area of Circle', 'Java Program to find area of circle<br>Note:<br>Use Double Data Type<br>and Use the following statements in the output<br> String.format(\"%.02f\",area)', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       double r = sc.nextDouble();\r\n       \r\n       double area = 3.14159265 * r * r;\r\n       \r\n       String str = String.format(\"%.02f\",area);\r\n       \r\n       System.out.println(str);\r\n       \r\n     }\r\n  \r\n}'),
(13, 'Data types and Operators', 'Q. 13:', 'Perfect Number', 'Java program to check for perfect number', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int num = sc.nextInt();\r\n       int s = 0;	\r\n       for (int i = 1; i < num; i++){\r\n           if (num % i == 0) {\r\n            	\r\n             s = s + i;	\r\n             \r\n           }\r\n       }\r\n       if (s == num){\r\n         	System.out.println(\"Perfect number\");\r\n       }\r\n       else{\r\n         	System.out.println(\"Not Perfect number\");\r\n       }\r\n	}\r\n}'),
(14, 'Data types and Operators', 'Q. 14:', 'Swapping two numbers without using third variable', 'Java Program to swap two numbers without third variables', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n1 = sc.nextInt();\r\n       int n2 = sc.nextInt();\r\n       \r\n       n1 = n1 + n2;\r\n       n2 = n1 - n2;\r\n       n1 = n1 - n2;\r\n       \r\n       System.out.println(n1 + \" \" + n2);\r\n       \r\n     }\r\n  \r\n}'),
(15, 'Data types and Operators', 'Q. 15:', 'ID and SHIP', 'Write a program that takes in a letter class ID of a ship and display the equivalent string class description of the given ID. Use the table below.<br>Class ID         Ship Class<br>B or b              BattleShip<br>C or c              Cruiser<br>D or d              Destroyer<br>F or f               Frigate<br>The first line corresponds to number of inputs followed by the Class ID<br>Output should corresponds to Ship Class', 'import java.io.*;\r\nimport java.util.Scanner; \r\npublic class TestClass \r\n{ \r\n    public static void main(String[] args) \r\n    { \r\n        Scanner sc = new Scanner(System.in); \r\n      	int n = sc.nextInt();\r\n        for (int i = 0;i < n;i++) {\r\n          char c = sc.next().charAt(0); \r\n          if (c == \'B\' || c == \'b\') {\r\n         	 System.out.println(\"BattleShip\"); \r\n          }\r\n          else if(c == \'C\' || c == \'c\') {\r\n            System.out.println(\"Cruiser\"); \r\n          }\r\n          else if(c == \'D\' || c == \'d\'){\r\n           	System.out.println(\"Destroyer\"); \r\n          }\r\n          else if(c == \'F\' || c == \'f\'){\r\n           	System.out.println(\"Frigate\"); \r\n          }\r\n        }\r\n    } \r\n}'),
(16, 'Data types and Operators', 'Q. 16:', 'Complementary DNA', 'Deoxyribonucleic acid (DNA) is a chemical found in the nucleus of cells and carries the \"instructions\" for the development and functioning of living organisms.<br>In DNA strings, symbols \"A\" and \"T\" are complements of each other, as \"C\" and \"G\". <br>You have function with one side of the DNA, you need to get the other complementary side. DNA strand is never empty or there is no DNA at all.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String str = sc.nextLine();\r\n       char[] ch = new char[str.length()];\r\n 		for (int i = 0; i < str.length(); i++) { \r\n            ch[i] = str.charAt(i);\r\n            if (ch[i] == \'T\')\r\n              	ch[i] = \'A\';\r\n          	else if(ch[i] == \'C\')\r\n              	ch[i] = \'G\';\r\n          	else if(ch[i] == \'A\')\r\n              	ch[i] = \'T\';\r\n          	else if(ch[i] == \'G\')\r\n              	ch[i] = \'C\';\r\n        } \r\n       	for (char c : ch) { \r\n            System.out.print(c); \r\n        } \r\n  		\r\n        \r\n     }\r\n  \r\n}'),
(17, 'Data types and Operators', 'Q. 17:', 'calculate area of rectangle', 'Write a program for object and class in java.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int l = sc.nextInt();\r\n       int b = sc.nextInt();\r\n       \r\n       int area = l * b;\r\n       \r\n       System.out.println(\"Area=\"+area);\r\n       \r\n	}\r\n}'),
(18, 'Data types and Operators', 'Q. 18:', 'Jewels and Stones', 'Soma is a fashionable girl. She absolutely loves shiny stones that she can put on as jewellery accessories. <br>She has been collecting stones since her childhood - now she has become really good with identifying which ones are fake and which ones are not. Her King requested for her help in mining precious stones, so she has told him which all stones are jewels and which are not. <br>Given her description, your task is to count the number of jewel stones. <br>More formally, you\'re given a string J composed of latin characters where each character is a jewel. <br>You are also given a string S composed of latin characters where each character is a mined stone. You have to find out how many characters of S are in J as well.<br>First line contains an integer T denoting the number of test cases. <br>Then follow T test cases. Each test case consists of two lines, each of which contains a string composed of English lower case and upper characters. <br>First of these is the jewel string J and the second one is stone string S.<br>You can assume that 1 <= T <= 100, 1 <= |J|, |S| <= 100<br>Output<br>Output for each test case, a single integer, the number of jewels mined.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		Scanner scan = new Scanner(System.in);\r\n		int t = scan.nextInt();\r\n		scan.nextLine();\r\n		for(int i=0; i < t; i++) {\r\n		        int counter = 0;\r\n			String j = scan.nextLine();\r\n			String s = scan.nextLine();\r\n			for(int k=0; k < s.length(); k++) {\r\n			    for(int r=0; r < j.length(); r++) {\r\n			        if(s.charAt(k) == j.charAt(r)) {\r\n			            counter += 1;\r\n			            break;\r\n			        }\r\n			     }\r\n			}\r\n			System.out.println(counter);\r\n		}\r\n        \r\n     }\r\n  \r\n}'),
(19, 'Data types and Operators', 'Q. 19:', 'counting number of digits', 'Java program to count the number of digits in a number', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n	\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int num = sc.nextInt();\r\n       int length = String.valueOf(num).length();\r\n\r\n       System.out.print(length);\r\n       \r\n	}\r\n}'),
(20, 'Data types and Operators', 'Q. 20:', 'Finding Second Largest number', 'Write a java program to find second largest number in an array of numbers using Exception Handling.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int max = 0, pos=0;\r\n       int l = sc.nextInt();\r\n       int[] arr = new int[l];\r\n       for (int i = 0; i < l; i++){ \r\n         arr[i] = sc.nextInt();\r\n       }\r\n       max = arr[0];\r\n       pos = 0;\r\n       for (int i = 0;i < l;i++){\r\n        	if (arr[i] > max){\r\n             	max = arr[i]; \r\n              	pos = i;\r\n            }\r\n       }\r\n       arr[pos] = -1;\r\n       max = arr[0];\r\n       for (int i = 0;i < l;i++){\r\n        	if (arr[i] > max){\r\n             	max = arr[i]; \r\n            }\r\n       }\r\n       System.out.println(max);\r\n       \r\n	}\r\n}'),
(21, 'Control and Looping', 'Q. 21:', 'Save the Prisoner!', 'A jail has N prisoners, and each prisoner has a unique id number,S , ranging from 1 to N. There are M sweets that must be distributed to the prisoners.<br>The jailer decides the fairest way to do this is by sitting the prisoners down in a circle (ordered by ascending S ), and then, starting with some random , distribute one candy at a time to each sequentially numbered prisoner until all M candies are distributed. <br>For example, if the jailer picks prisoner S=2, then his distribution order would be (2,3,4,5,...,n-1,n,1,2,3,4,..) until all M sweets are distributed.<br>But wait - there\'s a catch - the very last sweet is poisoned! Can you find and print the ID number of the last prisoner to receive a sweet so he can be warned?<br>Input Format<br>The first line contains an integer,T , denoting the number of test cases. <br>The T subsequent lines each contain 3 space-separated integers: <br> N (the number of prisoners), M  (the number of sweets), and  S(the prisoner ID), respectively.<br>Constraints<br> 1<=T<=100<br> 1<=N<=10 power 9<br> 1<=M<=109 power 9<br> 1<=S<=109 power 9<br>Output Format<br>For each test case, print the ID number of the prisoner who receives the poisoned sweet on a new line.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int T = sc.nextInt();\r\n       int N,M,S;\r\n       while(T > 0){\r\n         N = sc.nextInt();\r\n         M = sc.nextInt();\r\n         S = sc.nextInt();\r\n         int ans = (M - 1 + S - 1) % N + 1;\r\n         System.out.println(ans);\r\n         T--;\r\n       }\r\n	}\r\n}'),
(22, 'Control and Looping', 'Q. 22:', 'Evil Number', 'In number theory, an evil number is a non-negative number that has an even number of 1s in its binary expansion.<br>The first evil numbers are:<br>0, 3, 5, 6, 9, 10, 12, 15<br>These numbers give the positions of the zero values in the ThueMorse sequence.<br>Numbers that are not evil are called odious numbers.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args){\r\n       \r\n       	Scanner sc = new Scanner(System.in);\r\n		int num, a, count , c, i;\r\n        int binNum[] = new int[20];\r\n        num = sc.nextInt();\r\n        count = 0;\r\n        c = 0;    \r\n        while(num!=0)\r\n        {\r\n            a = num % 2;\r\n            binNum[c] = a;\r\n            if(a == 1)\r\n             count++;\r\n            num = num / 2;\r\n            c++;\r\n        }\r\n        if(count % 2 == 0)\r\n        {\r\n            System.out.println(\"Yes\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"No\");\r\n        }\r\n	}\r\n}'),
(23, 'Control and Looping', 'Q. 23:', 'Library Fine', 'Your local library needs your help! Given the expected and actual return dates for a library book, create a program that calculates the fine (if any). The fee structure is as follows:<br>1. If the book is returned on or before the expected return date, no fine will be charged (i.e. Fine = 0)<br>2. If the book is returned after the expected return day, but still within the same calendar month and year as the expected return date, (Fine = 15 Hackos * Number of Days Late)<br>3. If the book is returned after the expected return month but still within the same calendar year as the expected return date, the (Fine = 500 Hackos * Number of Months Late)<br>4. If the book is returned after the calendar year in which it was expected, there is a fixed fine of (Fine 10000 Hackos )<br>Input Format<br>The first line contains  space-separated integers denoting the respective , , and  on which the book was actually returned. <br>The second line contains  space-separated integers denoting the respective , , and  on which the book was expected to be returned (due date)<br>Constraints<br>Output Format<br>Print a single integer denoting the library fine for the book received as input', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int fine = 0, diff;\r\n       \r\n       int d1 = sc.nextInt();\r\n       int m1 = sc.nextInt();\r\n       int y1 = sc.nextInt();\r\n       \r\n       int d2 = sc.nextInt();\r\n       int m2 = sc.nextInt();\r\n       int y2 = sc.nextInt();\r\n       \r\n       if (y1 > y2)\r\n         	fine = 10000;\r\n       \r\n       else if (y1 == y2){\r\n         \r\n        	if (m1 > m2) {\r\n              	\r\n              diff = m1 - m2;\r\n              fine = 500 * diff;\r\n             	 \r\n            }\r\n         \r\n         	else if (m1 == m2){\r\n              \r\n             	if (d1 > d2){\r\n                 \r\n                  diff = d1 - d2;\r\n                  fine = 15 * diff;\r\n                  \r\n                }\r\n              	else{\r\n                  \r\n                  	fine = 0;\r\n                 	 \r\n                }\r\n              \r\n            }\r\n         \r\n       }\r\n       \r\n       System.out.println(fine);\r\n       \r\n       \r\n	}\r\n}'),
(24, 'Control and Looping', 'Q. 24:', 'Radius of Earth', 'Write a Java program to compute the distance between two points on the surface of earth.<br>        x1 = Math.toRadians(lat1)<br>        y1 = Math.toRadians(lon1)<br>        x2 = Math.toRadians(lat2)<br>        x3 = Math.toRadians(lon2)<br>Distance between the two points [ (x1,y1) & (x2,y2)]<br>d = radius * arccos(sin(x1) * sin(x2) + cos(x1) * cos(x2) * cos(y1 - y2))<br>Radius of the earth r = 6371.01 Kilometers<br>Mandatory:<br>1. Create a new class \"Sample\"  and a method named \"distanceBetweenTwoPoints()\"  of type double<br>2. The method should take four arguments with double data type<br>public double distanceBetweenTwoPoints(double lat1, double lon1, double lat2, double lon2)<br>Methodname = distanceBetweenTwoPoints<br>Argument = Four Arguments - double lat1, double lon1, double lat2, double lon2 of type double with variable names mentioned in the argument<br>Access Specifier = public<br>Return Type = double<br>3. Access the method \"public double distanceBetweenTwoPoints(double lat1,double lon1,double lat2,double lon2)\"  inside the main method under main class (TestClass)<br>4. Use return to pass the final value computed in distanceBetweenTwoPoints to the main method <br>5. The final answer should be rounded using String.format(\"%.02f\", variablename)', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample{\r\n 	\r\n  public double distanceBetweenTwoPoints(double lat1, double lon1, double lat2, double lon2){\r\n    \r\n    lat1 = Math.toRadians(lat1);\r\n    lon1 = Math.toRadians(lon1);\r\n    lat2 = Math.toRadians(lat2);\r\n    lon2 = Math.toRadians(lon2);\r\n    double earthRadius = 6371.01; //Kilometers\r\n    return earthRadius * Math.acos(Math.sin(lat1)*Math.sin(lat2) + Math.cos(lat1)*Math.cos(lat2)*Math.cos(lon1 - lon2));\r\n\r\n  }\r\n  \r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       Sample obj = new Sample();\r\n       double l1,l2,l3,l4;\r\n       l1 = sc.nextDouble();\r\n       l2 = sc.nextDouble();\r\n       l3 = sc.nextDouble();\r\n       l4 = sc.nextDouble();\r\n       double ans = obj.distanceBetweenTwoPoints(l1,l2,l3,l4);\r\n       System.out.printf(\"%.2f\",ans);\r\n	}\r\n}'),
(25, 'Control and Looping', 'Q. 25:', 'List the numbers', 'Even numbers can be divided evenly into groups of two. The number four can be divided into two groups of two.<br>Odd numbers can NOT be divided evenly into groups of two. The number five can be divided into two groups of two and one group of one.<br>Even numbers always end with a digit of 0, 2, 4, 6 or 8. <br>2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 are even numbers.<br>Odd numbers always end with a digit of 1, 3, 5, 7, or 9. <br>1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31 are odd numbers.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n = sc.nextInt();\r\n       \r\n       for (int i = 2; i <= n;i+=2) {\r\n       \r\n         if (i == n || i == n-1)\r\n       		System.out.print(i);\r\n         else\r\n            System.out.print(i + \" \");\r\n       	\r\n       }\r\n       \r\n       \r\n	}\r\n}'),
(26, 'Control and Looping', 'Q. 26:', 'Product of Odd Integers', 'Java Program to find the product of odd integers within the range', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n = sc.nextInt();\r\n       int s = 1;\r\n       \r\n       for (int i = 1; i <= n; i+=2)\r\n         s = s * i;\r\n       \r\n		System.out.println(s);\r\n     }\r\n}'),
(27, 'Control and Looping', 'Q. 27:', 'PATTERNS - L8', 'Write a java program to display the following patterns', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int n = sc.nextInt();\r\n       \r\n       //Part 1\r\n       \r\n       for (int i = n; i > 0;i--){\r\n        	\r\n         for (int j = 1; j <= i;j++)\r\n           System.out.print(j + \" \");\r\n         System.out.println();\r\n       }\r\n       \r\n       //Part 2\r\n       \r\n       \r\n       for (int i = 2; i <= n;i++){\r\n        	\r\n         for (int j = 1; j <= i;j++){\r\n           System.out.print(j + \" \");\r\n        }\r\n         System.out.println();\r\n       }\r\n     \r\n       \r\n       \r\n	}\r\n}'),
(28, 'Control and Looping', 'Q. 28:', 'Pronic Number', 'A pronic number is a number which is the product of two consecutive integers, that is, a number of the form n(n + 1). The study of these numbers dates back to Aristotle. They are also called oblong numbers, heteromecic numbers, or rectangular numbers;  however, the \"rectangular number\" name has also been applied to the composite numbers.[4][5]<br>The first few pronic numbers are:<br>0, 2, 6, 12, 20, 30, 42, 56, 72, 90, 110, 132, 156, 182, 210, 240, 272, 306, 342, 380, 420, 462  (sequence A002378 in the OEIS).', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass { \r\n \r\n    public static void main(String args[]) { \r\n        \r\n        Scanner sc = new Scanner(System.in);\r\n        \r\n        int num = sc.nextInt();        \r\n        int sqrtnum = (int) Math.sqrt(num);\r\n        int product = sqrtnum * (sqrtnum + 1);\r\n        \r\n        if (product == num)\r\n            System.out.println(\"Yes\");\r\n        else\r\n            System.out.println(\"No\"); \r\n \r\n   }\r\n}'),
(29, 'Control and Looping', 'Q. 29:', 'PATTERNS - L7', 'Write a java program to display the following patterns', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int n = sc.nextInt();\r\n       \r\n       for (int i = n; i > 0;i--){\r\n        	\r\n         for (int j = i; j > 0;j--)\r\n           System.out.print(j + \" \");\r\n         System.out.println();\r\n       }\r\n       \r\n	}\r\n}'),
(30, 'Control and Looping', 'Q. 30:', 'Compare two strings lexicographically', 'Write a java program to compare two strings lexicographically<br>If the strings are equal then mentions as follows:<br>Input 1:<br>SRM<br>SRM<br>Output:<br>SRM is equal to SRM', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       String s1 = sc.nextLine();\r\n       String s2 = sc.nextLine();\r\n       \r\n       int ans = s1.compareTo(s2);\r\n       \r\n       if (ans > 0){\r\n        	System.out.println(s1+\" is greater than \"+s2); \r\n       }\r\n       else if(ans < 0){\r\n        	System.out.println(s1+\" is less than \"+s2); \r\n       }\r\n       else\r\n       {\r\n        	System.out.println(s1+\" is equal to \"+s2); \r\n       }\r\n       \r\n	}\r\n}'),
(31, 'Arrays', 'Q. 31:', 'COMMON ELEMENTS', 'Write a java program to find common elements between two arrays<br>Input: Length of arrays and elements of the array.             <br>Output:Common Elements', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int l1 = sc.nextInt();\r\n       int l2 = sc.nextInt();\r\n       \r\n       int[] arr1 = new int[l1];\r\n       int[] arr2 = new int[l2];\r\n       \r\n       \r\n       for (int i = 0;i < l1;i++)\r\n         	arr1[i] = sc.nextInt();\r\n       for (int i = 0;i < l2;i++)\r\n         	arr2[i] = sc.nextInt();\r\n       \r\n       \r\n       for (int i = 0;i < l1;i++) {\r\n         \r\n        	for (int j = 0;j < l2;j++){\r\n              \r\n             	if (arr1[i] == arr2[j])\r\n                  System.out.print(arr1[i] + \" \");\r\n                  \r\n            }\r\n       }\r\n       \r\n	}\r\n}'),
(32, 'Array', 'Q. 32:', 'Check Multiplicability', 'Write Program to Check Multiplicability of Two Matrices', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n        Scanner sc = new Scanner(System.in);\r\n \r\n        int rowA = sc.nextInt();\r\n        int colA = sc.nextInt();\r\n \r\n       \r\n        int rowB = sc.nextInt();\r\n        int colB = sc.nextInt();\r\n \r\n        if(colA == rowB)\r\n        {\r\n            System.out.println(\"Matrices are multipilcable\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Matrices are not multipilcable\");\r\n        }\r\n        sc.close();\r\n	}\r\n}'),
(33, 'Arrays', 'Q. 33:', 'Sorting', 'Write a Java program to sort the array in an ascending order', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.util.Arrays;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int l = sc.nextInt();\r\n       int[] arr = new int[l];\r\n       \r\n       for (int i = 0; i < l; i++){\r\n        	 arr[i] = sc.nextInt();\r\n       }\r\n       \r\n       Arrays.sort(arr);\r\n       \r\n       for (int i = 0;i < l;i++)\r\n         System.out.print(arr[i]+ \" \");\r\n       \r\n       \r\n	}\r\n}'),
(34, 'Arrays', 'Q. 34:', 'Bucket Sort', 'To Sort an Integer array with Bucket Sort <br>Input:Elements of the array(Size of array and number of elements of the array should be 10)<br>Output:Sorted Array', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n\r\n  static int[] sort(int[] nums, int max_value) \r\n  {\r\n        int[] Bucket = new int[max_value + 1];\r\n        int[] sorted_nums = new int[nums.length];\r\n         for (int i = 0; i < nums.length; i++)\r\n          Bucket[nums[i]]++;\r\n          int outPos = 0;\r\n         for (int i = 0; i < Bucket.length; i++)\r\n              for (int j = 0; j < Bucket[i]; j++)\r\n                  sorted_nums[outPos++] = i;\r\n          return sorted_nums;\r\n    }\r\n \r\n    static int max_value(int[] nums) \r\n    {\r\n        int max_value = 0;\r\n        for (int i = 0; i < nums.length; i++)\r\n            if (nums[i] > max_value)\r\n                max_value = nums[i];\r\n        return max_value;\r\n    } \r\n  \r\n  \r\n	 public static void main(String[] args) { \r\n	   \r\n       Scanner sc= new Scanner(System.in);\r\n       int[] nums = new int[10];\r\n       for (int i = 0;i < 10;i++)\r\n         	nums[i] = sc.nextInt();\r\n       \r\n       int max_value = max_value(nums);\r\n       nums = sort(nums, max_value);\r\n       for (int i = 0;i < nums.length;i++)\r\n         	System.out.print(nums[i]+\" \");\r\n	}\r\n}'),
(35, 'Arrays', 'Q. 35:', 'Sales Person Problem', 'Java program that prompts for and reads in the sales for each of 5 salespeople in a company. <br>It then prints the total sales done by the sales person.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int n, s = 0;\r\n       for (int i = 0; i < 5;i++){\r\n        \r\n         n = sc.nextInt();\r\n         s = s + n;\r\n         \r\n       }\r\n       System.out.println(s);\r\n       \r\n	}\r\n}'),
(36, 'Arrays', 'Q. 36:', 'Binary Addition', 'Write a Java program to add two binary numbers', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n          long b1, b2;\r\n          int i = 0, carry = 0;\r\n		 \r\n          int[] sum = new int[10];\r\n\r\n          Scanner sc = new Scanner(System.in);\r\n\r\n          b1 = sc.nextLong();\r\n          b2 = sc.nextLong();\r\n\r\n          while (b1 != 0 || b2 != 0) \r\n          {\r\n              sum[i++] = (int)((b1 % 10 + b2 % 10 + carry) % 2);\r\n              carry = (int)((b1 % 10 + b2 % 10 + carry) / 2);\r\n              b1 = b1 / 10;\r\n              b2 = b2 / 10;\r\n          }\r\n          if (carry != 0) {\r\n              sum[i++] = carry;\r\n          }\r\n          --i;\r\n          while (i >= 0) {\r\n              System.out.print(sum[i--]);\r\n          }\r\n          System.out.println(); \r\n       \r\n	}\r\n}'),
(37, 'Arrays', 'Q. 37:', 'Number of pairs', 'Given two arrays X[ ] and Y[ ] of positive integers, find number of pairs such that x^y > y^x where x is an element from X[ ] and y is an element from Y[ ].<br>Input:<br>The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test consists of three lines. The first line of each test case consists of two space separated M and N denoting size of arrays X[ ] and Y[ ] respectively.<br>The second line of each test case contains M space separated integers denoting the elements of array X[ ].<br>The third line of each test case contains N space separated integers denoting elements of array Y[ ].<br>Output:<br>Corresponding to each test case, print in a new line, the number of pairs such that x^y > y^x.<br>Constraints:<br>1<=T <=100<br>1<=M,N  200<br>1<=X[i],Y[i]  500', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.math.BigDecimal;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int T = sc.nextInt();\r\n      // int s = 0;\r\n       while(T > 0){\r\n         int s=0; \r\n         int M = sc.nextInt();\r\n         int N = sc.nextInt();\r\n         \r\n         int[] X = new int[M];\r\n         int[] Y = new int[N];\r\n         \r\n         for (int i = 0;i < M;i++)\r\n           X[i] = sc.nextInt();\r\n         \r\n         for (int i = 0;i < N;i++)\r\n           Y[i] = sc.nextInt();\r\n         \r\n         double a,b;\r\n        \r\n         for (int i = 0;i < M;i++){\r\n           \r\n          	for (int j = 0;j < N;j++){\r\n              \r\n             	a = (double)Math.pow(X[i],Y[j]);\r\n              	b = (double)Math.pow(Y[j],X[i]);\r\n              \r\n           //   	String s1 = BigDecimal.valueOf(a).toPlainString();\r\n            //  	String s2 = BigDecimal.valueOf(b).toPlainString();\r\n\r\n              	//System.out.println(\"a = \"+s1+\" b = \"+s2);\r\n              	if (a > b)\r\n                  s = s + 1;\r\n              \r\n            }\r\n           \r\n         }\r\n         System.out.println(s);\r\n         \r\n        T--; \r\n       }\r\n       \r\n	}\r\n}'),
(38, 'Arrays', 'Q. 38:', 'Alex Birthday', 'Alex is attending a Halloween party with his girlfriend, Silvia. At the party, Silvia spots the corner of an infinite chocolate bar (two dimensional, infinitely long in width and length).<br>If the chocolate can be served as only 1 x 1 sized pieces and Alex can cut the chocolate bar exactly K times, what is the maximum number of chocolate pieces Alex can cut and give Silvia?<br>Input Format <br>The first line contains an integer T, the number of test cases. T lines follow.<br>Each line contains an integer K.<br>Output Format<br>T lines; each line should contain an integer that denotes the maximum number of pieces that can be obtained for each test case.<br>Constraints<br>1<=T<=10<br>2<=K<=107<br>Note: Chocolate must be served in 1 x 1 sized pieces. Alex can\'t relocate any of the pieces, nor can he place any piece on top of another.<br>Explanation<br>The explanation below is for the first two test cases. The rest of them follow a similar logic.<br>For the first test-case where K=5, you need 3 horizontal and 2 vertical cuts.<br>For the second test case, where K=6, you need 3 horizontal and 3 vertical cuts.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int T = sc.nextInt();\r\n       int k,mid,diff;\r\n       \r\n       while(T>0){\r\n         \r\n         k = sc.nextInt();\r\n         mid = k/2;\r\n         if (k % 2 == 0)\r\n           System.out.println(mid*mid);\r\n         else {\r\n          diff = k - mid;\r\n          System.out.println(diff*mid); \r\n         }\r\n         \r\n        T--; \r\n       }\r\n       \r\n	}\r\n}'),
(39, 'Arrays', 'Q. 39:', 'Average Value', 'Calculate the average value of array element', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int s = 0;\r\n       int l = sc.nextInt();\r\n       int[] arr = new int[l];\r\n       \r\n       for(int i = 0;i < l;i++)\r\n         	arr[i] = sc.nextInt();\r\n       \r\n       for(int i = 0;i < l;i++)\r\n         	s = s + arr[i];\r\n       \r\n       System.out.println(s/l);\r\n	}\r\n}'),
(40, 'Arrays', 'Q. 40:', '2D matrix', 'Create a simple two dimensional array program and print the array value <br>The first input corresponds to row value of the matrix and the second value denotes to the column value of the matrix', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       int r = sc.nextInt();\r\n       int c = sc.nextInt();\r\n       \r\n       int[][] arr = new int[r][c];\r\n       int k = 0;\r\n       for (int i = 0;i < r;i++){\r\n         \r\n        	for (int j = 0;j < c;j++) {\r\n              	arr[i][j] = k;\r\n         		k++;\r\n            }\r\n       }\r\n       \r\n       \r\n       for (int i = 0;i < r;i++){\r\n         \r\n        	for (int j = 0;j < c;j++)\r\n              	System.out.print(arr[i][j]+\" \");\r\n         	System.out.println();\r\n       }\r\n       \r\n       \r\n	}\r\n}'),
(41, 'Classes and Objects', 'Q. 41:', 'Arithmetic mean', 'Java program to find arithmetic mean<br>Mandatory:<br>1. Create a new class \"Mean\" and the object name for the class should be \"obj\"<br>2. Create two methods as follows:<br>a. Method name = getMean()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>a. Method name = calculateMean()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>3. Access the methods getMean() and displayMean() using the object name \"obj\" from the main method<br>4. The input details are promoted in getMean() and the transpose is calculated and printed in displayMean()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Mean {\r\n \r\n  Scanner sc = new Scanner(System.in);\r\n  int l, ans;\r\n  int[] arr;\r\n  \r\npublic void getMean(){\r\n \r\n  l = sc.nextInt();\r\n  arr = new int[l];\r\n  for (int i = 0;i < l;i++)\r\n    arr[i] = sc.nextInt();\r\n  \r\n}\r\npublic void calculateMean(){\r\n  \r\n   int s = 0;\r\n   for (int i = 0; i < l;i++)\r\n     	s = s + arr[i];\r\n  \r\n   ans = s/l;\r\n  \r\n}\r\npublic void displayMean(){\r\n\r\n   System.out.println(ans);\r\n  \r\n}\r\n}\r\npublic class TestClass {\r\n  \r\n	 public static void main(String[] args) { \r\n		\r\n       Mean obj = new Mean();\r\n       \r\n       obj.getMean();\r\n       obj.calculateMean();\r\n       obj.displayMean();\r\n       \r\n	}\r\n}'),
(42, 'Classes and Objects', 'Q. 42:', 'Votes by Static method', 'An election is contested by 5 candidates which are numbered from 1 to 5 and voting is done by marking the candidate number on ballet paper .<br>WAP to count the number of votes obtained by all the candidates.<br>(Note: Enter candidate number s input FROM 1- 5) and if the input is more than 5 then it is considered to be disqualified vote <br>Mandatory:<br>1. Create a new class \"Election\" <br>2. Create a methods as follows:<br>a. Method name = getVotes()<br>b. Type = void<br>c. Access Specifier = static<br>d. Argument Type = no arguments<br>3. Access the methods displayResults()  using classname.methodname<br>4. The input details are promoted in getVotes() and the result were printed in the main class', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Election {\r\n  \r\n  	static int[] res = new int[5];\r\n  	static int display = 0;\r\n  \r\n 	  static void getVotes() \r\n      {\r\n        Scanner sc = new Scanner(System.in);\r\n        int l;\r\n  		int[] arr = new int[30];\r\n        l = sc.nextInt();\r\n        for (int i = 0;i < l;i++)\r\n              arr[i] = sc.nextInt();\r\n\r\n        for (int i = 0;i < 5;i++)\r\n        {\r\n          int s = 0;\r\n          for (int j = 0;j < l;j++){\r\n              if (arr[j] == i+1)\r\n                s = s + 1;\r\n          }\r\n          res[i] = s;\r\n        }\r\n        for (int i = 0;i < l;i++){\r\n          if (arr[i] > 5)\r\n              display = display + 1;\r\n\r\n        }\r\n      \r\n    }\r\n  \r\n  	 public static void displayResults() {\r\n      \r\n      for (int i = 0;i < 5;i++)\r\n        	System.out.println(\"Candidate \"+(i+1)+\" are: \"+res[i]);\r\n      System.out.println(\"Disqualified=\"+display);\r\n      \r\n    }\r\n  \r\n}\r\n  	\r\n  \r\n\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n	\r\n       Election.getVotes();\r\n       Election.displayResults();\r\n       \r\n	}\r\n    \r\n\r\n}'),
(43, 'Classes and Objects', 'Q. 43:', 'Student grade', 'Java program to find student grade<br>Mandatory:<br>1. Create a new class \"Student\" and the object name for the class should be \"obj\"<br>2. Create two methods as follows:<br>a. Method name = getMarks()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>a. Method name = studentGrade()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>3. Access the methods getMarks() and studentGrade() using the object name \"obj\" from the main method<br>4. The input details are promoted in getMarks() and the Grade of the student based on the cumulative average  is printed in studentGrade()', 'import java.io.*;\r\nimport java.util.*;\r\nclass Student {\r\n   int s=0;\r\n   int arr[] = new int[5];\r\n  	public void getMarks()\r\n    {\r\n      	 Scanner read = new Scanner(System.in);\r\n        // BufferedReader rd =new BufferedReader(new InputStreamReader(System.in));\r\n      	\r\n      for(int i=0;i<5;i++)\r\n                 	arr[i]=read.nextInt();//Integer.parseInt(rd.readLine());\r\n        \r\n              \r\n      \r\n    }\r\n  	 public void studentGrade()\r\n    {\r\n      \r\n     	    	 for(int i=0;i<5;i++)\r\n  		       	s = s + arr[i];\r\n     			s=s/5; 	 \r\n      	 if(s>=90)\r\n        	System.out.println(\"A\");\r\n         else if((s>=80) && (s<90))\r\n            System.out.println(\"B\");\r\n        else if((s>=70) && (s<80))\r\n            System.out.println(\"C\");\r\n         else if((s>=60) && (s<70))\r\n            System.out.println(\"D\");\r\n         else if((s>=50) && (s<60))\r\n            System.out.println(\"E\");\r\n      	else if((s>=40)&&(s<50))\r\n              System.out.println(\"Nograde\");\r\n        else\r\n              System.out.println(\"Fail\");\r\n    }\r\n}\r\npublic class TestClass {\r\n  \r\n 	public static void main(String args[])throws IOException\r\n    {\r\n        Student obj = new Student();\r\n      try\r\n      {\r\n                   obj.getMarks(); 		\r\n      }\r\n      catch(Exception e)\r\n      {\r\n      }\r\n                   obj.studentGrade();\r\n      	\r\n    }\r\n}');
INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(44, 'Classes and Objects', 'Q. 44:', 'TAX CALCULATOR', 'Declare the following in the TestClass with the following private data members : <br>int basicSalary; <br>int daPercentage; <br>int hraPercentage; <br>float taxAmount; <br>float takeHomeSalary; <br>Include the following functions initializeData() --- 3 arguments are passed. <br>The order of the arguments is values for the basicSalary, daPercentage and hra Percentage. <br>calculateTaxAmount() --- 1 argument which corresponds to taxPercentage(int) is passed. <br>The default value for taxPercentage is 5%. <br>calculate takeHomeSalary() and display all the details using displayData() <br> TestCase 1:<br>10000 = Basic Pay<br>DA = 10 Percentage of Basic Pay<br>HRA = 20 Percentage of Basic Pay<br>Tax to be paid 5 % of Total pay (Basic + HRA + DA)<br>Take home salary = Total pay - Tax<br>55000 = Basic Pay<br>DA = 15 Percentage of Basic Pay<br>HRA = 10 Percentage of Basic Pay<br>Tax to be paid 5 % of Total pay (Basic + HRA + DA)<br>Take home salary = Total pay - Tax<br>Note: Only for Second employee the Tax percentage needs to be given by the user and for the first employee the Tax Percentage id 5% and use DecimalFormat class to round of values to two digits', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.text.DecimalFormat;\r\npublic class TestClass {\r\n  \r\n  	  private int basicSalary;\r\n      private int daPercentage;\r\n      private int hraPercentage;\r\n      private float taxAmount;\r\n      private float takeHomeSalary;\r\n  	  private float TS;\r\n  	  private float t1;\r\n  	  private float t2;\r\n      \r\n  \r\n  	  public void initializeData(int a, int b, int c){\r\n        \r\n        basicSalary = a;\r\n        daPercentage = b;\r\n        hraPercentage = c;\r\n             \r\n      }\r\n  	  public void calculateTaxAmount(int P)	{\r\n        \r\n        //int TP;\r\n        daPercentage = (basicSalary * daPercentage)/100;\r\n        t1 = (float)daPercentage;\r\n        hraPercentage = (basicSalary * hraPercentage)/100;\r\n        t2 = (float)hraPercentage;\r\n        TS = basicSalary + daPercentage + hraPercentage;\r\n        taxAmount = (TS * P)/100;\r\n        \r\n        \r\n      }\r\n       public void takeHomeSalary()\r\n       {\r\n         takeHomeSalary = TS - taxAmount;\r\n       }\r\n      public void displayData() {\r\n        System.out.println(\"Basic Salary is \"+basicSalary);\r\n        System.out.format(\"DA amount is %.2f\\n\", t1);\r\n        System.out.format(\"HRA amount is %.2f\\n\",t2);\r\n        System.out.format(\"Total Salary is %.2f\\n\",TS);\r\n        System.out.format(\"Tax to be paid is %.2f\\n\",taxAmount);\r\n        System.out.format(\"Take Home Salary is %.2f\\n\",takeHomeSalary);\r\n        \r\n      }\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int bp = sc.nextInt();\r\n       int da = sc.nextInt();\r\n       int hra = sc.nextInt();\r\n       TestClass t1 = new TestClass();\r\n       t1.initializeData(bp, da, hra);\r\n       t1.calculateTaxAmount(5);\r\n       t1.takeHomeSalary();\r\n       t1.displayData();\r\n       bp = sc.nextInt();\r\n       da = sc.nextInt();\r\n       hra = sc.nextInt();\r\n       int p = sc.nextInt();\r\n       TestClass t2 = new TestClass();\r\n       t2.initializeData(bp, da, hra);\r\n       t2.calculateTaxAmount(p);\r\n       t2.takeHomeSalary();\r\n       t2.displayData();\r\n	}\r\n}'),
(45, 'Classes and Objects', 'Q. 45:', 'Even and odd elements in array', 'Java program to print even and odd element in array<br>Mandatory:<br>1. Create a new class EvenOdd and the object name for the class should be \"obj\"<br>2. Create two methods as follows:<br>a. Method name = getInput()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>a. Method name = findOddEven()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>3. Access the methods getInput() and findOddEven() using the object name \"obj\" from the main method<br>4. The input details are promoted in getInput() and the ood and even numbers were is printed in findOddEven()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass EvenOdd {\r\n \r\n  Scanner sc = new Scanner(System.in);\r\n  int l;\r\n  int[] arr = new int[30]; \r\n  int[] even;\r\n  int[] odd;\r\n  \r\npublic void getInput(){\r\n \r\n  l = sc.nextInt();\r\n  for (int i = 0;i < l;i++)\r\n    arr[i] = sc.nextInt();\r\n  \r\n}\r\npublic void findOddEven(){\r\n   int j = 0, k = 0;\r\n   int o = 0,e = 0;\r\n   for (int i = 0;i < l;i++){\r\n    	if (arr[i] % 2 == 0)\r\n          	e++;\r\n     	else\r\n          	o++;\r\n   }\r\n  	even = new int[e];\r\n  	odd = new int[o];\r\n   for (int i = 0; i < l;i++) {\r\n     \r\n    	if (arr[i] % 2 == 0) {\r\n          even[j] = arr[i];\r\n     	  j++;\r\n        }\r\n     	else if (arr[i] % 2 != 0){\r\n         	odd[k] = arr[i];\r\n          	k++;\r\n        }\r\n     \r\n   }\r\n   System.out.print(\"Odd :\");\r\n   for (int i = 0;i < odd.length;i++)\r\n     	System.out.print(odd[i]+\" \");\r\n  	System.out.println();\r\n  	System.out.print(\"Even :\");\r\n  	for (int i = 0;i < even.length;i++)\r\n      	System.out.print(even[i]+\" \");\r\n  \r\n}\r\n}\r\npublic class TestClass {\r\n  \r\n	 public static void main(String[] args) { \r\n		\r\n       EvenOdd obj = new EvenOdd();\r\n       \r\n       obj.getInput();\r\n       obj.findOddEven();\r\n       \r\n	}\r\n}'),
(46, 'Classes and Objects', 'Q. 46:', 'Most Occurance', 'kamal is a data analyst in a lottery management organization<br>One of the tasks assigned to kamal is to find the most frequently occurring digit in a series of input number. Below are a couple of examples to illustrates how to find the most frequently occurring digit in a series of <br>Input numbers<br> Example 1<br>            if the series of input number are[1236,262,666,121]<br>            we notice that<br>            0 occurs 0 time<br>            1 occurs 3 times<br>            2 occurs 4 times<br>            3 occurs 1 time<br>            4 occurs 0 time<br>            5 occurs 0 time<br>            6 occurs 5 times<br>            7 occurs 0 time<br>            8 occurs 0 time<br>            9 occurs 0 time<br>-6 is the digit that occur 5 times<br> NOTE1:if more than one digit occur the most frequently time then the highest of the digits should be chosen as the answer see below example for clarity on this part<br> Example 2-<br>            if the series of input number are[1237,202,666,140]<br>            we notice that<br>            0 occurs 2 times<br>            1 occurs 2 times<br>            2 occurs 3 times<br>            3 occurs 1 time<br>            4 occurs 1 time<br>            5 occurs 0 time<br>            6 occurs 3 times<br>            7 occurs 1 time<br>            8 occurs 0 time<br>            9 occurs 0 time<br>we observe that<br>2,6 are the digits that occur 3 times<br>The highest of these two digits (2,6)thus the most frequently occurring digit in this series is 6.<br>Kamal decides to write the logic in the below method for finding the most Frequently occurring Digit in the protocol input series of numbers<br>Mandatory:<br>1. Create a Class \"MostOccurance\" with method name as \"check\"<br>a.  Methodname - check()<br>b.  Return Type = void<br>c. Access specifier = public<br>d. Argument = No argument<br>2. Create instance for the class \"MostOccurance\"  and access \"check\" method. The instance name is \"m\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass MostOccurance{\r\n\r\n  public void check()\r\n  {\r\n      int num[] = new int[4];\r\n  	  int store[];\r\n  	  int digits[] = new int[10];\r\n    \r\n     Scanner sc = new Scanner(System.in);\r\n   	 for(int i = 0;i < 4;i++)\r\n    	num[i] = sc.nextInt();\r\n     int l = 0;\r\n     for(int i = 0;i < 4;i++)\r\n          l = l + String.valueOf(num[i]).length();\r\n     store = new int[l];\r\n     int k = 0;\r\n     for(int i = 0;i < 4;i++)\r\n     {\r\n       \r\n      	  int temp = num[i];\r\n       	  int rem; \r\n       	  while(temp > 0)\r\n          { \r\n           	rem = temp%10;\r\n            temp = temp/10;\r\n            store[k] = rem;\r\n            k++;	\r\n          }   \r\n       \r\n     }\r\n    \r\n     for(int i = 0;i < 10;i++)\r\n    	digits[i] = 0; 			\r\n    \r\n     for(int i = 0;i < store.length;i++) \r\n     {  	\r\n     		switch(store[i])\r\n            {\r\n              case 0:\r\n                	 digits[0]++;\r\n                	 break;\r\n              case 1:\r\n                	 digits[1]++;\r\n                	 break;\r\n              case 2:\r\n                	 digits[2]++;\r\n                	 break;\r\n              case 3:\r\n                	 digits[3]++;\r\n                	 break;\r\n              case 4: \r\n                	 digits[4]++;\r\n                	 break;\r\n              case 5: \r\n                	 digits[5]++;\r\n                   	 break;\r\n              case 6:\r\n                	 digits[6]++;\r\n                	 break;\r\n              case 7:\r\n                	 digits[7]++;\r\n                	 break;\r\n              case 8:\r\n                	 digits[8]++;\r\n                 	 break;\r\n              case 9:\r\n                	 digits[9]++;\r\n                	 break; \r\n            }\r\n     }\r\n     int max = digits[0];\r\n     int pos = 0;\r\n     for(int i = 0;i < 10;i++)\r\n     {\r\n      	if(digits[i] > max)\r\n        {\r\n          	max = digits[i];\r\n          	pos = i;\r\n        }\r\n     }\r\n     System.out.println(pos);	\r\n  }\r\n  \r\n}\r\npublic class TestClass{\r\n	 public static void main(String[] args){ \r\n		\r\n       MostOccurance m = new MostOccurance();\r\n       m.check();\r\n	}\r\n}'),
(47, 'Classes and Objects', 'Q. 47:', 'Prime number in an array', 'Java program to find prime numbers in an array<br>Mandatory:<br>1. Create a new class \"Prime\" and the object name for the class should be \"obj\"<br>2. Create two methods as follows:<br>a. Method name = getPrime()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>a. Method name = calculatePrime()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>3. Access the methods getPrime() and displayPrime() using the object name \"obj\" from the main method<br>4. The input details are promoted in getPrime() and the transpose is calculated and printed in displayPrime', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Prime{\r\n  \r\n  	Scanner sc = new Scanner(System.in);\r\n    private int l;\r\n  	private int arr[];\r\n  	private int transpose[] = new int[30];\r\n  	\r\n  	public void getPrime(){\r\n      \r\n      l = sc.nextInt();\r\n      arr = new int[l];\r\n      for (int i = 0;i < l;i++)\r\n      		arr[i] = sc.nextInt();\r\n            \r\n     \r\n    }\r\n  	public void calculatePrime() {\r\n      \r\n      int c = 0;\r\n	  transpose = new int[arr.length-c];\r\n      int k = 0;\r\n      for (int i = 0;i < l;i++){\r\n        c = 0;\r\n      	for (int j = 2; j <= arr[i]/2; j++) {\r\n         	\r\n          		if (arr[i] % j == 0)  {\r\n	               	c = 1;  \r\n                }\r\n        }\r\n        if (c == 0){\r\n          	transpose[k] = arr[i];\r\n          	k++;\r\n        }\r\n      }\r\n      \r\n    }\r\n  	public void displayPrime() {\r\n      \r\n      for (int i = 0;i < transpose.length;i++)\r\n        if (transpose[i] != 0)\r\n          System.out.println(transpose[i]);\r\n      \r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Prime obj = new Prime();\r\n       obj.getPrime(); \r\n       obj.calculatePrime();\r\n       obj.displayPrime();\r\n	}\r\n}'),
(48, 'Classes and Objects', 'Q. 48:', 'BUILDING', 'Create a class called Building with instance \"objname\" with the following private data members or member variables <br>length, width and ratePerSqFeet (all of type int).<br>Include the following public member functions or methods:<br>initializeData() that accepts 3 arguments and its return type is void. This function is used to set the values for length, width and ratePerSqFeet. The arguments are passed to this function in the<br>same order.<br>getLength() --- to return the length of the building<br>getWidth() --- to return the width of the building<br>getRatePerSqFeet() --- to return the ratePerSqft of the building<br>calculateCost() --- to calculate and return the cost of the building<br>determineSuitability() --- to determine and return the type of the building. <br>Mandatory:<br>You should call the following methods from the main class (TestClass)<br>getRatePerSqFeet and determineSuitability as follows<br>objname.getRatePerSqFeet()<br>objname.determineSuitability()<br>We are interested in Buildings that are almost in the shape of a square. If the length and width of the building differ by atmost 10, then the building is suitable. If the difference between the length and width of the building is more than 10, then it is not suitable. In the main function / method, create an object of type buiding and invoke the corresponding methods.', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Building {\r\n  \r\n  private int length;\r\n  private int width;\r\n  private int ratePerSqFeet;\r\n  \r\n  \r\n  public void initializeData(int l, int w, int r){\r\n    \r\n    length = l;\r\n    width = w;\r\n    ratePerSqFeet = r;\r\n    \r\n  }\r\n  \r\n  public int getLength(){\r\n   		return length; \r\n  }\r\n  public int getWidth() {\r\n   		return width; \r\n  }\r\n  public int getRatePerSqFeet() {\r\n   		return ratePerSqFeet;\r\n  }\r\n  public int calculateCost() {\r\n  		\r\n    	return length*width*ratePerSqFeet;\r\n    	\r\n  }\r\n  public String determineSuitability() {\r\n    \r\n    	int diff = Math.abs(length-width);\r\n    \r\n    	if (diff < 10)\r\n          	return \"Suitable\";\r\n    	else\r\n          	return \"Not Suitable\";\r\n    \r\n    \r\n  }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		Scanner sc = new Scanner(System.in);\r\n       	Building objname = new Building();\r\n        int l = sc.nextInt();\r\n       	int w = sc.nextInt();\r\n       	int r = sc.nextInt();\r\n       	\r\n        objname.initializeData(l, w, r);\r\n        \r\n       	System.out.println(\"Length : \"+objname.getLength());\r\n       	System.out.println(\"Width : \"+objname.getWidth());\r\n       	System.out.println(\"Rate Per SqFt : \"+objname.getRatePerSqFeet());\r\n        System.out.println(\"Cost of the Building : \"+objname.calculateCost());\r\n        System.out.println(\"Suitability : \"+objname.determineSuitability());\r\n	}\r\n}'),
(49, 'Classes and Objects', 'Q. 49:', 'Rotating Single word', 'Write a java program to reverse each word of a given string. <br>For example, <br>If Java Concept Of The Day is input string then output should be avaJ tpecnoC fO ehT yaD<br>Mandatory:<br>1. Create a class \"Rotate\" with one method as follows<br>a. Method Name = reverseEachWordOfString<br>b. Return type = void<br>c. Access Specifier = public<br>d. Argument = One Argument of type String and actual argument variable name as \"inputString\"<br>2. Access the method from the main method using \"objname\".methodname that takes one argument in String and the variable name is  \"inputstring\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Rotate {\r\n \r\n  	public void reverseEachWordOfString(String inputString) {\r\n      \r\n      String words[] = inputString.split(\" \");\r\n      for (int i = 0;i < words.length;i++)\r\n      {\r\n        	StringBuilder temp = new StringBuilder(words[i]);\r\n        	System.out.print(temp.reverse()+\" \");\r\n        	\r\n      }\r\n      \r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Rotate objname = new Rotate();\r\n       Scanner sc = new Scanner(System.in);\r\n       String inputstring = sc.nextLine();\r\n       objname.reverseEachWordOfString(inputstring);\r\n       \r\n	}\r\n}'),
(50, 'Classes and Objects', 'Q. 50:', 'Calculate Number of Votes Received By All Candidates', 'An election is contested by 5 candidates which are numbered from 1 to 5 and voting is done by marking the candidate number on ballet paper .<br>WAP to count the number of votes obtained by all the candidates.<br>(Note: Enter candidate number s input FROM 1- 5) and if the input is more than 5 then it is considered to be disqualified vote <br>Mandatory:<br>1. Create a new class \"Election\" and the objectname for the class should be \"obj\"<br>2. Create a methods as follows:<br>a. Method name = getVotes()<br>b. Type = void<br>c. Access Specifier = public<br>d. Argument Type = no arguments<br>3. Access the methods displayResults() using the object name \"obj\" from the main method<br>4. The input details are promoted in getVotes() and the result were printed in the main class', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Election {\r\n  \r\n  	private Scanner sc = new Scanner(System.in);\r\n  	private int l;\r\n  	private int[] arr = new int[30];\r\n  	private int[] res = new int[5];\r\n  	private int display = 0;\r\n  \r\n 	  public void getVotes() {\r\n      \r\n      l = sc.nextInt();\r\n      for (int i = 0;i < l;i++)\r\n        	arr[i] = sc.nextInt();\r\n      \r\n      for (int i = 0;i < 5;i++)\r\n      {\r\n        int s = 0;\r\n       	for (int j = 0;j < l;j++){\r\n        	if (arr[j] == i+1)\r\n              s = s + 1;\r\n        }\r\n        res[i] = s;\r\n      }\r\n      for (int i = 0;i < l;i++){\r\n       	if (arr[i] > 5)\r\n          	display = display + 1;\r\n          	\r\n      }\r\n      \r\n    }\r\n  \r\n  	public void displayResults () {\r\n      \r\n      for (int i = 0;i < 5;i++)\r\n        	System.out.println(\"Candidate \"+(i+1)+\" are: \"+res[i]);\r\n      System.out.println(\"Disqualified=\"+display);\r\n      \r\n    }\r\n  \r\n}\r\n  	\r\n  \r\n\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n	\r\n       Election obj = new Election();\r\n       obj.getVotes();\r\n       obj.displayResults();\r\n       \r\n	}\r\n    \r\n\r\n}'),
(51, 'Methods', 'Q. 51:', 'Chef and Keyboard', 'Chef is a well known programmer. He owns a brand new Android phone of screen size of dimension n  m (n denotes the height of the phone and m denotes the width). Chef wants to design a program for painting the screen. He figured out c colors, which he will use to paint the screen. He wants to paint some rectangular section of pixels of the screen each with different color. Also Chef would like to use all of his c colors in painting.<br>Can you help Chef in finding number of different dimensions of rectangular section he can paint? In other words, find number of pairs x, y such that Chef can paint a rectangular section of dimension x  y (x denotes height, y denotes width) on the screen. Please note that Chef uses a fix orientation of his phone and is not allowed to rotate it, i.e. height always stays n and width always stays m and not the other way around.<br>Input<br>First line of the input contains an integer T denoting the number of test cases. T test cases follow.<br>Only line of each test case contains three space separated integers n, m, c.<br>Output<br>For each test case, output a single line containing the answer for the test case.<br>Mandatory:<br>1. Create a class and a method named \"public void keyboard\" with takes no arguments and the method type is void<br>Methodname = keyboard<br>Argument = None<br>Access Specifier = public<br>Return Type = void<br>2. Access the method \"public void keyboard()\" from the main method and the instance name for access the  keyboard method is \"objname\"<br>objname.keyboard()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.lang.Math;\r\nclass Sample {\r\n 	\r\n  	public void keyboard()\r\n    {\r\n     	 Scanner sc = new Scanner(System.in);\r\n      	 int T = sc.nextInt();\r\n      	 int m = 0,n = 0,c = 0;\r\n      	 while(T > 0)\r\n         {\r\n           	int sum = 0;\r\n           	n = sc.nextInt();\r\n           	m = sc.nextInt();\r\n           	c = sc.nextInt();\r\n      		\r\n           	int[][] arr = new int[n][m];\r\n           \r\n           	for(int i = 0;i < n;i++)\r\n            {\r\n             	for(int j = 0;j < m;j++)\r\n                {\r\n                 	 arr[i][j] = (int)Math.floor(n/(i+1)) * (int)Math.floor(m/(j+1));\r\n                }\r\n            }\r\n           	\r\n           	for(int i = 0;i < n;i++)\r\n            {\r\n             	for(int j = 0;j < m;j++)\r\n                {\r\n                 	if(arr[i][j] >= c)\r\n                      sum = sum + 1;\r\n                }\r\n            }\r\n           	System.out.println(sum);\r\n           	T--;\r\n         }\r\n    }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample objname = new Sample();\r\n       objname.keyboard();\r\n       \r\n	}\r\n}'),
(52, 'Methods', 'Q. 52:', 'Equal or Unequal', 'Override equals method to compare two complex numbers are equal or not.<br>Input Format : two complex numbers<br>Output Format : print \"Equal\" if they are equal otherwise \"Not Equal\". <br>Mandatory:<br>1.Create a Class named \"Complex\" <br>2.Then create a method with the following details to get real and imaginary part of the complex number.<br>Method name = Complex<br>Arguments = Two arguments of type double<br>Access specifier - public<br>public Complex(double re, double im)<br>Method name = equals<br>Arguments = One argument (Instance variable \"o\" of type Object)<br>Return type - boolean<br>Access specifier - public<br> public boolean equals(Object o)<br>3.Override the method equals to compare two complex objects<br>              Conditions to check inside the equals method <br>                         If the variable \"o\" is an instance of  itself and return true<br>                         if the variable \"o\" is a instance of complex or null return false<br>4.Typecast \"o\" to compare two data members<br>       Complex c = (Complex) o;<br>5.Compare the data members and return accordingly<br>               return Double.compare(re, c.re) == 0 && Double.compare(im, c.im) == 0;<br>6. Get four inputs from the user in the main method with variable names as \"a\" , \"b\", \"x\" and \"y\" of type integer<br>7. Create two object named c1 and c2 for the class Complex from the main method of the main class(TestClass) to get two complex numbers.<br>8.Then compare two complex numbers.If it is equal then print \"Equal\" else print \"Not Equal\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\n\r\nclass Complex {\r\n \r\n  	private double re,im;\r\n  \r\n  	public Complex(double re, double im)\r\n    {\r\n      	this.re = re;\r\n      	this.im = im;\r\n    }\r\n  \r\n  	@Override\r\n    public boolean equals(Object o) { \r\n     \r\n        if (o == this) { \r\n            return true; \r\n        } \r\n  \r\n        if (!(o instanceof Complex)) { \r\n            return false; \r\n        } \r\n       \r\n        Complex c = (Complex) o; \r\n          \r\n        return Double.compare(re, c.re) == 0 && Double.compare(im, c.im) == 0; \r\n    } \r\n  	\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int a = sc.nextInt();\r\n       int b = sc.nextInt();\r\n       int x = sc.nextInt();\r\n       int y = sc.nextInt();\r\n       \r\n       Complex c1 = new Complex(a,b);\r\n       Complex c2 = new Complex(x,y);\r\n       if (c1.equals(c2)) { \r\n            System.out.println(\"Equal\"); \r\n        } else { \r\n            System.out.println(\"Not Equal\"); \r\n        } \r\n	}\r\n}'),
(53, 'Methods', 'Q. 53:', 'Average', 'Design a class Average with a method findAverage() which computes average of 3 numbers<br>Mandatory:<br>1. Create a class \"Average\" with two static methods and four static variables \"static int num1,num2,num3,total\"<br>2. Method 1 <br>a. Method Name = getInput()<br>b.Access Specifier = static<br>c. Argument = No Arguments<br>d. Method Return type = void<br>e. Usage = To get the three numbers and call findAverage() method<br>3. Method 2<br>a. Method Name = findAverage()<br>b.Access Specifier = static<br>c. Argument = No argument<br>d. Method Return type = void<br>4. Access the method getInput() under class \"Average\" from the main method using classname.methodname  <br>5. Access the method findAverage() from the getInput() method<br>Note: Do not access findAverage() from the main method, it needs to be accessed only from getInput() .', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Average {\r\n  \r\n 	 static int num1,num2,num3,total;\r\n  	 public static void getInput()\r\n     {\r\n       Scanner sc = new Scanner(System.in);\r\n       num1 = sc.nextInt();\r\n       num2 = sc.nextInt();\r\n       num3 = sc.nextInt();\r\n       findAverage();\r\n     }\r\n  	 public static void findAverage()\r\n     {\r\n       total = num1 + num2 + num3;\r\n       System.out.println(total/3);\r\n       \r\n     }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Average.getInput();\r\n       \r\n	}\r\n}'),
(54, 'Methods', 'Q. 54:', 'PrintThird', 'Write a java method to print all the third characters in a given string <br>Mandatory:<br>1. Create a class and method as follows:<br>a. Method name = getInput()<br>b. Argument = No argument<br>c. Return Type = void<br>d. Access specifier = public<br>e. Usuage = To get the string input and access the method calculateThird()<br>a. Method name = calculateThird()<br>b. Argument = One Argument that take String input and variable name as \"s\" - Method Definition <br>c. Return type = void<br>d. Access Specifier = public<br> Hint : public void calculateThird(String s)<br>2. Call the method getInput() from the main method by creating an instance of the class.<br>3. Call the method calculateThird(input) from the getInput() method and the formal argument variable name should be \"input\" and actual arguments should be  \"s\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample {\r\n \r\n  	public void getInput()\r\n    {\r\n      Scanner sc = new Scanner(System.in);\r\n      String input = sc.nextLine();\r\n      calculateThird(input);\r\n    }\r\n  	public void calculateThird(String s)\r\n    {\r\n      \r\n      System.out.println(s.charAt(2));\r\n      \r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample obj = new Sample();\r\n       obj.getInput();\r\n       \r\n	}\r\n}'),
(55, 'Methods', 'Q. 55:', 'Determinant', 'Write a java method to find the determinant of given matrix.<br>Mandatory:<br>1.Under the Main Class(TestClass) create the following methods to get the input values and to calculate the determinant respectively.<br>2. Method Details:<br>a. Method Name = input ()<br>b. Access Specifier = public<br>c. Argument = No argument<br>d. Return type = void<br>public void input()<br>a. Method Name =determinant ()<br>b. Access Specifier = public<br>c. Argument = Two Arguments of type integer<br>d. Return type = void<br>public int determinant(int A[][],int N)<br>3.Create an object \"d\" for the main class in the main method and access input() and determinant() method from the main method to print the result of the determinant calculation using System.out.println class.<br>Note:<br>If all the above conditions are not satisfied then it wont show 100%', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n  \r\n  	private int l;\r\n  	private int[][] mat;\r\n  \r\n  	public void input()\r\n    {\r\n      Scanner sc = new Scanner(System.in);\r\n      l = sc.nextInt();\r\n      mat = new int[l][l];\r\n	  for(int i=0;i < mat.length;i++)\r\n      {\r\n            for(int j=0;j < mat[i].length;j++)\r\n                mat[i][j]=sc.nextInt();\r\n      }\r\n    }\r\n  \r\n  	public int determinant(int A[][],int N)\r\n    {\r\n      int x,y,z;\r\n      if (N == 3)\r\n      {\r\n        x=(A[0][0]*(A[1][1]*A[2][2]-A[1][2]*A[2][1]));\r\n        y=(A[0][1]*(A[1][0]*A[2][2]-A[1][2]*A[2][0]));\r\n        z=(A[0][2]*(A[1][0]*A[2][1]-A[1][1]*A[2][0]));\r\n      }\r\n      else\r\n      {\r\n       	x = A[0][0]*A[1][1];\r\n        y = A[0][1]*A[1][0]; \r\n        z = 0;\r\n      }\r\n     \r\n      return x-y+z;\r\n    }\r\n    public static void main(String[] args) { \r\n		\r\n       TestClass d = new TestClass();\r\n       d.input();\r\n       System.out.println(d.determinant(d.mat, d.l));\r\n       \r\n	}\r\n}'),
(56, 'Methods', 'Q. 56:', 'SUM of all integers', 'Yesterday,  puppy Tuzik learned a magically efficient method to find the sum of the integers from 1 to N. <br>He denotes it as sum(N). But today, as a true explorer, he defined his own new function: sum(D, N), which means the operation sum applied D times: the first time to N, and each subsequent time to the result of the previous operation.<br>For example, if D = 2 and N = 3, then sum(2, 3) equals to sum(sum(3)) = sum(1 + 2 + 3) = sum(6) = 21.<br>Tuzik wants to calculate some values of the sum(D, N) function. Will you help him with that?<br>Mandatory:<br>1. Create a new class and a method in the class  as follows:<br>Methodname = sumOfAllIntegers<br>Argument = None<br>Access Specifier = public<br>Return Type = void<br>2. Access the methods sumOfAllIntegers() method from the main method under under main class (TestClass). <br>The object-name or instance to access the sumOfAllIntegers is \"objname\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample {\r\n  \r\n  public void sumOfAllIntegers()\r\n  {\r\n    Scanner sc = new Scanner(System.in);\r\n    int T = sc.nextInt();\r\n    int d,n;\r\n    while(T>0)\r\n    {\r\n      \r\n      d = sc.nextInt();\r\n      n = sc.nextInt();\r\n	  System.out.println(sum(d,n));\r\n      T--;\r\n    }\r\n  }\r\n  public int sum1(int N)\r\n  {\r\n    int s=0,i;\r\n    {\r\n        for(i=1;i<=N;i++)\r\n        s=s+i;\r\n    }\r\n   return s; \r\n    \r\n  }\r\n  public int sum(int D, int N)\r\n  {\r\n    int p=0;\r\n    while(D>0)\r\n    {\r\n        p=sum1(N);\r\n        D--;\r\n        N=p;\r\n    }\r\n    return p;\r\n  }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample objname = new Sample();\r\n       objname.sumOfAllIntegers();\r\n       \r\n	}\r\n}'),
(57, 'Methods', 'Q. 57:', 'FrontBack', 'Given 2 integer a and b, return true if one of them is 10 or if their sum is 10.<br>Mandatory:<br>1. Create a class \"Sample\" and a method named \"public void getNumbers()\" with no arguments . This is used only to get two integer numbers<br>2. Create an another method inside \"Sample\"  class titled as makes10() with two arguments and the type of the method is boolean<br>3 Print the final answer in the main method under main class (TestClass) as follows:<br> <br>            boolean output=objectname.makes10()<br>            System.out.println(output)', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample {\r\n \r\n  public int num1;\r\n  public int num2;\r\n  \r\n  public void getNumbers()\r\n  {\r\n    Scanner sc = new Scanner(System.in);\r\n    num1 = sc.nextInt();\r\n    num2 = sc.nextInt();\r\n  }\r\n  public boolean makes10(int a, int b)\r\n  {\r\n    if (a == 10 || b == 10 || a+b == 10)\r\n    	return true;\r\n    else\r\n      	return false;\r\n  }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample objectname = new Sample();\r\n       objectname.getNumbers();\r\n       boolean output=objectname.makes10(objectname.num1, objectname.num2);\r\n	   System.out.println(output);\r\n	}\r\n}'),
(58, 'Methods', 'Q. 58:', 'Fibonacci sequence with static method', 'The Fibonacci  sequence is defined by the following rule. The first 2 values in the sequence are 1, 1. Every  subsequent value is the sum of the 2 values preceding it. <br>Write a Java program that uses both recursive and non recursive functions to print the n th value of the Fibonacci sequence.<br>Mandatory :<br>1.Create a new class called \"Sample\" and two static methods as follows<br>a. Method name =  getInput()<br>b. Type = void<br>c. Access specifiers = static<br>d. Arguments = No argument<br>a. a. Method name =  displayFib()<br>b. Type = void<br>c. Access specifiers = static<br>d. Arguments = No argument<br>2. Access the methods (getInput() and displayFib()) using classname.methodname  <br>Example: Sample.displayFib()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample {\r\n \r\n  	private static int num;\r\n  	static void getInput()\r\n    {\r\n      Scanner sc = new Scanner(System.in);\r\n      num = sc.nextInt();\r\n    }\r\n  	static void displayFib()\r\n    {\r\n        int a = 0;\r\n      	int b = 1;\r\n      	int c;\r\n		for (int i = 1;i <= num;i++)\r\n        {\r\n          	c = a + b;\r\n            a = b;\r\n          	b = c;\r\n          	System.out.print(a+\" \");\r\n        }\r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample.getInput();\r\n       Sample.displayFib();\r\n	}\r\n}'),
(59, 'Methods', 'Q. 59:', 'Shapes', 'Write a program that computes the amount of paint needed to paint different objects. The hierarchy will consist of a parent class Shape with three derived classes - Sphere, Rectangle, and Cylinder. <br>For the purposes of this problem, the only attribute a shape will have is a name and the method of interest will be the one that computes the area of the shape (surface area in the case of three-dimensional shapes). <br>Do the following. <br>1.Write an abstract class \"Shape\" with the following properties:  <br>An instance variable \"shapeName\" of type String  <br>An abstract method area()  <br>A toString method that returns the name of the shape<br>2. Create a class \"sphere\" which is a descendant of Shape. <br>A sphere has a radius and its area (surface area) is given by the formula <br>     4*PI*radius^2<br>Define similar classes for a rectangle and a cylinder. Both the Rectangle class and the Cylinder class are descendants of the Shape class.<br> <br>A rectangle is defined by its length and width and its area is length times width.<br>A cylinder is defined by a radius and height and its area (surface area) is PI*radius^2*height. Define the toString method in a way similar to that for the Sphere class.<br>3. Create a class \"Paint\" (which has a \"coverage\" and a method to compute the amount of paint needed to paint a shape). <br>Correct the return statement in the amount method so the correct amount will be returned. <br>Use the fact that the amount of paint needed is the area of the shape divided by the coverage for the paint.<br>4. Create a class with main method that computes the amount of paint needed to paint various shapes. A paint object has been instantiated. <br>Add the following to complete the program: <br>Instantiate the three shape objects: <br>deck to be a 20 by 35 foot rectangle,<br>bigBall to be a sphere of radius 15, and <br>tank to be a cylinder of radius 10 and height 30. <br>Make the appropriate method calls to assign the correct values to the three amount variables. <br>You should see polymorphism in action as the amount method computes the amount of paint for various shapes.', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.text.DecimalFormat;\r\nabstract class Shape {\r\n  \r\n 	 protected String shapeName;\r\n     \r\n     public Shape (String shapeName)\r\n     {\r\n        this.shapeName = shapeName;\r\n     }\r\n\r\n  	 abstract double area();\r\n  	 public String toString()\r\n     {\r\n      	return shapeName; \r\n     }\r\n  \r\n}\r\nclass sphere extends Shape {\r\n  \r\n 	private double radius;\r\n  	sphere()\r\n    { \r\n      super(\"Sphere\"); \r\n      radius = 15.0; \r\n    }\r\n  	double area()\r\n    {\r\n      	\r\n      	return 4*Math.PI*radius*radius;\r\n    } \r\n}\r\nclass rectangle extends Shape {\r\n  \r\n  	private double length;\r\n    private double width;\r\n\r\n  	rectangle() \r\n    { \r\n      super(\"Rectangle\"); \r\n      length = 20.0;\r\n      width = 35.0;\r\n    }\r\n   	double area()\r\n    {\r\n      	\r\n      	return length*width;\r\n    } \r\n}\r\nclass cylinder extends Shape {\r\n   \r\n  	private double radius;\r\n    private double height;\r\n\r\n  	cylinder() \r\n    { \r\n      super(\"Cylinder\");\r\n      radius = 10.0;\r\n      height = 30.0;\r\n    }\r\n  	double area()\r\n    {\r\n      	return Math.PI*radius*radius*height;\r\n    } \r\n}\r\nclass Paint {\r\n \r\n  	public int coverage;\r\n  	DecimalFormat d = new DecimalFormat(\"0.00\");\r\n  	public void computeRect()\r\n    {\r\n        rectangle obj1 = new rectangle();\r\n      	System.out.println(\"Amount for \"+obj1.toString()+ \" of length 20.0 and width 35.0 is \"+ d.format(obj1.area()/coverage));\r\n\r\n      	sphere obj2 = new sphere();\r\n        System.out.println(\"Amount for \"+obj2.toString()+\" of radius 15.0 is \"+d.format(obj2.area()/coverage));  \r\n\r\n     	cylinder obj3 = new cylinder();\r\n      	System.out.println(\"Amount for \"+obj3.toString()+\" of radius 10.0 and height 30.0 is \"+d.format(obj3.area()/coverage));\r\n    }\r\n  	\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       	Paint object = new Paint();\r\n       	Scanner sc = new Scanner(System.in);\r\n       	object.coverage = sc.nextInt();\r\n       	object.computeRect();\r\n	}\r\n}'),
(60, 'Methods', 'Q. 60:', 'Fibonacci sequence', 'The Fibonacci  sequence is defined by the following rule. The first 2 values in the sequence are 1, 1. Every  subsequent value is the sum of the 2 values preceding it. <br>Write a Java program that uses both recursive and non recursive functions to print the n th value of the Fibonacci sequence.<br>Mandatory :<br>1.Create a new class and two methods as follows<br>a. Method name =  getInput()<br>b. Type = void<br>c. Access specifiers = public<br>d. Arguments = No argument<br>a. a. Method name =  displayFib()<br>b. Type = void<br>c. Access specifiers = public<br>d. Arguments = No argument<br>2. Create object for above mentioned class in the main method and access the methods getInput() and displayFib()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Sample {\r\n \r\n  	private  int num;\r\n  	public void getInput()\r\n    {\r\n      Scanner sc = new Scanner(System.in);\r\n      num = sc.nextInt();\r\n    }\r\n  	public void displayFib()\r\n    {\r\n        int a = 0;\r\n      	int b = 1;\r\n      	int c;\r\n		for (int i = 1;i <= num;i++)\r\n        {\r\n          	c = a + b;\r\n            a = b;\r\n          	b = c;\r\n          	System.out.print(a+\" \");\r\n        }\r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Sample obj = new Sample();\r\n       obj.getInput();\r\n       obj.displayFib();\r\n	}\r\n}'),
(61, 'Strings', 'Q. 61:', 'MAXand Min', 'Find the min and max value of given string<br>Input: 34#2a3<br>Output:<br>4<br>3', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) \r\n     { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String temp = sc.nextLine();\r\n       String[] str = temp.split(\"\");\r\n       int max = 0,min = 0;\r\n\r\n           max = Integer.parseInt(str[0]);\r\n           for (int i = 0;i < str.length;i++)\r\n           {\r\n             try {\r\n                if (Integer.parseInt(str[i]) > max)\r\n                  max = Integer.parseInt(str[i]);\r\n             }\r\n             catch (Exception e){}\r\n           } \r\n           min = Integer.parseInt(str[0]);\r\n           for (int i = 0;i < str.length;i++)\r\n           {\r\n             try{\r\n                if (Integer.parseInt(str[i]) < min)\r\n                    min = Integer.parseInt(str[i]);\r\n             }\r\n             catch (Exception e){}\r\n           }\r\n\r\n       \r\n       System.out.println(max);\r\n       System.out.println(min);\r\n	}\r\n}'),
(62, 'Strings', 'Q. 62:', 'program count', 'Write a java program to count the number of words in a string?<br>Input:<br>Program count<br>Output<br>2', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String str = sc.nextLine();\r\n       String words[] = str.split(\" \");\r\n       System.out.println(words.length);\r\n	}\r\n}'),
(63, 'Strings', 'Q. 63:', 'STRING CONVERSION  9', 'Write a program to convert string to number without using Integer.parseInt() method .', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n  \r\n  	public static int convert(String S)\r\n    {\r\n      \r\n      char ch[] = S.toCharArray();\r\n      int sum = 0;\r\n      int a = (int)\'0\';\r\n      for(char c:ch){\r\n            int temp = (int)c;\r\n            sum = (sum*10)+(temp-a);\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int l = sc.nextInt();\r\n       String str[] = new String[l];\r\n       String abc = sc.nextLine();\r\n       for (int i = 0;i < l;i++)\r\n       {\r\n       		str[i] = sc.nextLine();\r\n       		System.out.println(convert(str[i]));\r\n       }\r\n	}\r\n}'),
(64, 'Strings', 'Q. 64:', 'CatDog', 'Return true if the string \"cat\" and \"dog\" appear the same number of times in the given string.', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n  \r\n  	public static boolean check(String str) \r\n    {\r\n      int cat = 0 ;\r\n      int dog = 0 ;\r\n      for(int s  = 0 ; s < str.length()-2; s++)\r\n      {\r\n        String temp = str.substring(s,s+3);\r\n        \r\n        if(temp.compareTo(\"cat\")==0)\r\n        	  cat++;\r\n        if(temp.compareTo(\"dog\")==0)\r\n         	  dog++;\r\n      }\r\n  		return cat==dog?true:false;\r\n    \r\n	}\r\n	public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String str = sc.nextLine();\r\n       System.out.println(check(str));\r\n	}\r\n}'),
(65, 'Strings', 'Q. 65:', 'Length of Last Word', 'Given a string s consists of upper/lower-case alphabets and empty space characters \' \', return the length of last word in the string. If the last word does not exist, return 0', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String str = sc.nextLine();\r\n       String words[] = str.split(\" \");\r\n       System.out.println(words[words.length-1].length());\r\n	}\r\n}'),
(66, 'Strings', 'Q. 66:', 'Next higher number in one swap', 'Given a non-negative number N in the form of string. The task is to apply at most one swap operation on the number N so that the resultant is the next higher number.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains a number N as input.<br>Output:<br>For each test case, print the next higher number possible. if it is not possible to make next higher number then print \"-1\".<br>Constraints:<br>1<=T<=100<br>2<=|Number length |<=104', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	public static void main(String[] args) { \r\n		\r\n      Scanner sc = new Scanner(System.in);\r\n      \r\n      int T = sc.nextInt();\r\n      String abc = sc.nextLine();\r\n      while(T > 0)\r\n      {\r\n          String str = sc.nextLine();\r\n          System.out.println(Swaper(str));\r\n        	T--;\r\n      }\r\n      \r\n	}\r\n  \r\n  	static String Swaper(String st) \r\n    { \r\n        char num[] = st.toCharArray(); \r\n        int l = num.length; \r\n        \r\n        int posRMax = l - 1; \r\n           \r\n        int index = -1; \r\n        for (int i = l - 2; i >= 0; i--) \r\n        { \r\n            if (num[i] >= num[posRMax]) \r\n                posRMax = i; \r\n           \r\n          	else\r\n            { \r\n                index = i; \r\n                break; \r\n            }     \r\n        } \r\n           \r\n        if (index == -1) \r\n            return \"-1\"; \r\n           \r\n        int greatSmallDgt = -1; \r\n           \r\n        for (int i = l - 1; i > index; i--)     \r\n        { \r\n            if (num[i] > num[index]) \r\n            { \r\n                if (greatSmallDgt == -1) \r\n                    greatSmallDgt = i; \r\n                else if (num[i] <= num[greatSmallDgt])     \r\n                    greatSmallDgt = i; \r\n            } \r\n        } \r\n           \r\n        char temp = num[index]; \r\n         num[index] = num[greatSmallDgt]; \r\n        num[greatSmallDgt] = temp; \r\n           \r\n        return (String.valueOf(num)); \r\n    }\r\n  \r\n}'),
(67, 'Strings', 'Q. 67:', 'Reverse order of words', 'Given a sentence, Write a java program to Reverse order of words in a Sentence', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String str = sc.nextLine();\r\n       String words[] = str.split(\" \");\r\n       for (int i = words.length-1;i >= 0 ;i--)\r\n         if (i == 0)\r\n           System.out.print(words[i]);\r\n       	 else\r\n       		System.out.print(words[i]+\" \");\r\n	}\r\n}'),
(68, 'Strings', 'Q. 68:', 'Chef and His Apartment Dues', 'Chef lives in a big apartment in Chefland. The apartment charges maintenance fees that he is supposed to pay monthly on time. But Chef is a lazy person and sometimes misses the deadlines. The apartment charges 1000 Rs per month as maintenance fees. Also, they also charge a one-time fine of 100 Rs for each of the late payments. It does not matter how late the payment is done, the fine is fixed to be Rs.100.<br>Chef has been living in the apartment for N months. Now, he wants to switch the apartment, so he has to pay the entire dues to the apartment. The deadline for the N-th month is also over. From his bank statement, he finds the information whether he paid apartment rent for a particular month for not. You are given this information by an array A of size N, where Ai (can be either 0 or 1) specifies whether he has paid the 1000Rs in the i-th month or not. Assume that Chef paid the fees in the i-th month, then this fees will be considered for the earliest month for which Chef has not yet paid the fees.<br>For example, assume Chef did not pay any money in first month and 1000Rs in the second month. Then this rent of 1000Rs will be considered for 1st month. But this counts as late payment for the first month\'s fees, and hence he will have to pay Rs. 100 for that. And since the payment he made in the second month is not accounted for the second month, but rather for the first month, he will incur a fine of Rs.100 even for the second month.<br>He has not paid any of the fines so far. Can you please help in finding Chef total due (all the fines, plus all the unpaid maintenance fees) that he has to pay to apartment?<br>Input<br>First line of the input contains an integer T denoting number of test cases. The description of T test cases follows.<br>The first line of each test cases contains an integer N denoting the number of months for which you have to calculate the total amount of money that Chef has to pay at the end of the n month to clear all of his dues.<br>Next line of each test case contains N space separated integers (each of them can be either 0 or 1) denoting whether Chef paid the 1000Rs fees in the corresponding month or not. If the corresponding integer is 1, it means that Chef paid the maintenance fees for that month, whereas 0 will mean that Chef did not pay the maintenance fees that month.<br>Output<br>For each test case, output a single integer denoting the total amount including fine that Chef has to pay.<br>1<=T<=25<br>0<=Ai<=1<br>Subtasks<br>Subtask #1 (30 points)<br>1<=N<=103<br>Subtask #2 (70 points)<br>1<=N<=105<br>Example<br>Input<br>4<br>2<br>1 1<br>2<br>0 0<br>3<br>0 1 0<br>2<br>0 1<br>Output<br>0<br>2200<br>2300<br>1200<br>Explanation<br>Example case 1. Chef paid maintenance fees for both the months. So, he does not have any dues left.<br>Example case 2. Chef did not pay the maintenance fees for any of the months. For the first month, he has to pay 1000Rs, and 100Rs fine as a late payment. For second month payments, he just ha', 'import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass TestClass\r\n{\r\n	public static void main (String[] args) throws java.lang.Exception\r\n	{\r\n	  Scanner sc= new Scanner(System.in);\r\n		int T=sc.nextInt();\r\n		for( int test=0; test < T ; test++)\r\n		{\r\n			int N=sc.nextInt();\r\n		    int a[]=new int[N];\r\n			int minDueMonth = -1;\r\n			int sumZeros=0;\r\n			for(int i=0; i < N ; i++)\r\n			{\r\n			a[i]=sc.nextInt();\r\n				if(a[i]==0)\r\n				{\r\n					sumZeros++;\r\n					if(sumZeros==1)\r\n						minDueMonth=i;\r\n				}\r\n			}\r\n			if(minDueMonth==-1)\r\n				minDueMonth=N;\r\n			System.out.println(sumZeros*1000+(N-minDueMonth)*100);			\r\n		}		\r\n	}\r\n} ');
INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(69, 'Strings', 'Q. 69:', 'Encrypt the string', 'Bingu was testing all the strings he had at his place, and found that most of them were prone to vicious attack by Banju, his arch enemy. Bingu decided to encrypt all the strings he had, by the following method. Every substring of identical letters is replaced by a single instance of that letter followed by the number of occurences of that letter. Then, the string thus obtained is further encrypted by reversing it.<br> <br>Input:<br>The first line contains T, the number of test cases. Then T lines follow, each containing a string S ( |S| <= 1000), consisting of lower case English alphabets<br>Output:<br>For each test case in a new line print the required encrypted string.<br>', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int T = sc.nextInt();\r\n       String abc = sc.nextLine();\r\n       while(T > 0)\r\n       {\r\n       		String str = sc.nextLine();\r\n         	encrypt(str);\r\n       		T--;\r\n       }\r\n	}\r\n  \r\n  	public static void encrypt(String S)\r\n    {\r\n     \r\n      	char orig[] = S.toCharArray();\r\n      	String arr[] = new String[orig.length*2];\r\n        int s = 0,j = 0,k = 0;\r\n        char st = \'n\';\r\n      	for (int i = 0;i < orig.length;i++)\r\n        {\r\n          	s = 0;         	\r\n            for (;j < orig.length;j++)\r\n            {\r\n             	if (orig[j] == orig[i])\r\n                {\r\n                  s = s + 1;\r\n                  st = orig[j];\r\n                }\r\n              	else           \r\n                	break;\r\n              \r\n            }\r\n          	arr[k] = String.valueOf(st);\r\n          	k++;\r\n          	arr[k] = String.valueOf(s);\r\n          	k++;\r\n        }\r\n\r\n      	for (int i = 0;i < arr.length; i++)\r\n        {\r\n          try\r\n          {\r\n         	if (Integer.parseInt(arr[i]) == 0)\r\n            {\r\n             	arr = delete_ele(arr,i,i-1);\r\n              	\r\n                i = -1;\r\n            }\r\n          }\r\n          catch (Exception e) {}\r\n        }\r\n      	for (int i = arr.length-1;i >= 0;i--)\r\n        	System.out.print(arr[i]);\r\n      	System.out.println();\r\n    }\r\n  	public static String[] delete_ele(String arr[], int f, int s)\r\n    {\r\n     	String temp[] = new String[arr.length-2];\r\n      	String ans[] = new String[temp.length];\r\n        int j = 0;\r\n      	for (int i = 0;i < arr.length;i++)\r\n        {\r\n         	if (i != f && i != s)\r\n            {\r\n              temp[j] = arr[i];\r\n              j++;\r\n            }\r\n        }\r\n      	for (int i = 0;i < temp.length;i++)\r\n        {\r\n          ans[i] = temp[i];\r\n        }\r\n      	return ans;\r\n    }\r\n}'),
(70, 'Strings', 'Q. 70:', 'Counting elements', 'Write a program to count no, of alphabets, digits, special symbols', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int l = 0,d = 0,s = 0, space = 0;\r\n       String str = sc.nextLine();\r\n       char[] ch = str.toCharArray();\r\n       \r\n       for (char let : ch)\r\n       {\r\n        	if (Character.isLetter(let))\r\n              	l++;\r\n         	else if(Character.isDigit(let))\r\n              	d++;\r\n         	else if(Character.isSpaceChar(let))\r\n              	space++;\r\n         	else\r\n              	s++;\r\n       }\r\n       \r\n       System.out.println(\"Letter=\"+l);\r\n       System.out.println(\"Digit=\"+d);\r\n       System.out.println(\"Spaces=\"+space);\r\n       System.out.println(\"Symbol=\"+s);\r\n       \r\n	}\r\n}'),
(71, 'Inheritance and Interface', 'Q. 71:', 'Multilevel Inheritance for Student Marklist', 'Write a java program to perform Multilevel Inheritance<br>1. Create a Class \"Student\" with following data members and methods:<br>Data members:<br>a. Declare rollno of type integer and access specifier as private<br>b. Declare name of type String and access specifier as private<br>Methods:<br> Method name = getRollNo<br>a. Method name = getRollNo()<br>b. Return type = void<br>c. Access Specifier = public<br>d. Argument = No argument<br>e. Get the input of student roll number and name<br>Method name = putRollNo<br>a. Method name = putRollNo()<br>b. Return type = void<br>c. Access Specifier = public<br>d. Argument = No argument<br>e. Display the rollno and name<br>2. Create a class \"Marks\" that extends \"Student\" class<br>Data-members:<br>Declare three variable as  Mark 1, Mark 2, Mark 3 of type integer and protected<br>a. Method name = getMarks()<br>b. Return type = void<br>c. Argument = No argument<br>d. Get the marks of students (Mark1, Mark 2 and Mark 3)<br>a. Method name = putMarks()<br>b. Return type = void<br>c. Argument = No argument<br>. Display the marks of students (Mark1, Mark 2 and Mark 3)<br>3. Create a class \"Result\" that extends \"Marks\" class<br>Data-members:<br>Declare one variable as  total of type float and private<br>a. Method name = computeDisplay()<br>b. Return type = void<br>c. Argument = No argument<br>d. Add the marks and display the result<br>a. Method name = putMarks()<br>b. Return type = void<br>c. Argument = No argument<br>e. Display the marks of students (Mark1, Mark 2 and Mark 3)<br>4. In Main method create an instance for \"Result\" class with instance name \"r\"<br>5. Invoke methods such as getRollNo(), getMarks(), putRollNo(), putMarks() and computeDisplay()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Student {\r\n  \r\n 	private int rollno;\r\n  	private String name;\r\n  	\r\n    Scanner sc = new Scanner(System.in);\r\n  	\r\n    public void getRollNo()\r\n    {\r\n     \r\n      name = sc.nextLine();\r\n      rollno = sc.nextInt();\r\n      \r\n    }\r\n  	public void putRollNo()\r\n    {\r\n      System.out.println(\"Name=\"+name);\r\n      System.out.println(\"Regno=\"+rollno);\r\n    }\r\n  \r\n}\r\nclass Marks extends Student {\r\n  \r\n 	protected int Mark1, Mark2, Mark3;\r\n  	public void getMarks()\r\n    {\r\n      	Mark1 = sc.nextInt();\r\n      	Mark2 = sc.nextInt();\r\n      	Mark3 = sc.nextInt();\r\n     	 \r\n    }\r\n  	public void putMarks()\r\n    {\r\n     	System.out.println(\"Mark1=\"+Mark1);\r\n      	System.out.println(\"Mark2=\"+Mark2);\r\n      	System.out.println(\"Mark3=\"+Mark3);\r\n    }\r\n}\r\nclass Result extends Marks{\r\n  \r\n  private float total;\r\n  \r\n  public void computeDisplay()\r\n  {\r\n   		total = Mark1+Mark2+Mark3;\r\n    	System.out.println(\"Total=\"+(int)total);\r\n  }\r\n  public void putMarks()\r\n  {\r\n   		System.out.println(\"Mark1=\"+Mark1);\r\n    	System.out.println(\"Mark2=\"+Mark2);\r\n    	System.out.println(\"Mark3=\"+Mark3);\r\n  }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Result r = new Result();\r\n       r.getRollNo();\r\n       r.getMarks();\r\n       r.putRollNo();\r\n       r.putMarks();\r\n       r.computeDisplay();\r\n       \r\n	}\r\n}'),
(72, 'Inheritance and Interface', 'Q. 72:', 'Multilevel Inheritance for Student Marklist', 'Write a java program to perform Multilevel Inheritance<br>1. Create a Class \"Student\" with following data members and methods:<br>Data members:<br>a. Declare rollno of type integer and access specifier as private<br>b. Declare name of type String and access specifier as private<br>Methods:<br> Method name = getRollNo<br>a. Method name = getRollNo()<br>b. Return type = void<br>c. Access Specifier = public<br>d. Argument = No argument<br>e. Get the input of student roll number and name<br>Method name = putRollNo<br>a. Method name = putRollNo()<br>b. Return type = void<br>c. Access Specifier = public<br>d. Argument = No argument<br>e. Display the rollno and name<br>2. Create a class \"Marks\" that extends \"Student\" class<br>Data-members:<br>Declare three variable as  Mark 1, Mark 2, Mark 3 of type integer and protected<br>a. Method name = getMarks()<br>b. Return type = void<br>c. Argument = No argument<br>d. Get the marks of students (Mark1, Mark 2 and Mark 3)<br>a. Method name = putMarks()<br>b. Return type = void<br>c. Argument = No argument<br>. Display the marks of students (Mark1, Mark 2 and Mark 3)<br>3. Create a class \"Result\" that extends \"Marks\" class<br>Data-members:<br>Declare one variable as  total of type float and private<br>a. Method name = computeDisplay()<br>b. Return type = void<br>c. Argument = No argument<br>d. Add the marks and display the result<br>a. Method name = putMarks()<br>b. Return type = void<br>c. Argument = No argument<br>e. Display the marks of students (Mark1, Mark 2 and Mark 3)<br>4. In Main method create an instance for \"Result\" class with instance name \"r\"<br>5. Invoke methods such as getRollNo(), getMarks(), putRollNo(), putMarks() and computeDisplay()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Student {\r\n  \r\n 	private int rollno;\r\n  	private String name;\r\n  	\r\n    Scanner sc = new Scanner(System.in);\r\n  	\r\n    public void getRollNo()\r\n    {\r\n     \r\n      name = sc.nextLine();\r\n      rollno = sc.nextInt();\r\n      \r\n    }\r\n  	public void putRollNo()\r\n    {\r\n      System.out.println(\"Name=\"+name);\r\n      System.out.println(\"Regno=\"+rollno);\r\n    }\r\n  \r\n}\r\nclass Marks extends Student {\r\n  \r\n 	protected int Mark1, Mark2, Mark3;\r\n  	public void getMarks()\r\n    {\r\n      	Mark1 = sc.nextInt();\r\n      	Mark2 = sc.nextInt();\r\n      	Mark3 = sc.nextInt();\r\n     	 \r\n    }\r\n  	public void putMarks()\r\n    {\r\n     	System.out.println(\"Mark1=\"+Mark1);\r\n      	System.out.println(\"Mark2=\"+Mark2);\r\n      	System.out.println(\"Mark3=\"+Mark3);\r\n    }\r\n}\r\nclass Result extends Marks{\r\n  \r\n  private float total;\r\n  \r\n  public void computeDisplay()\r\n  {\r\n   		total = Mark1+Mark2+Mark3;\r\n    	System.out.println(\"Total=\"+(int)total);\r\n  }\r\n  public void putMarks()\r\n  {\r\n   		System.out.println(\"Mark1=\"+Mark1);\r\n    	System.out.println(\"Mark2=\"+Mark2);\r\n    	System.out.println(\"Mark3=\"+Mark3);\r\n  }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Result r = new Result();\r\n       r.getRollNo();\r\n       r.getMarks();\r\n       r.putRollNo();\r\n       r.putMarks();\r\n       r.computeDisplay();\r\n       \r\n	}\r\n}'),
(73, 'Inheritance and Interface', 'Q. 73:', 'Sum of two numbers in single level inheritance', 'Addition of two numbers using the concept single level inheritance.<br>Mandatory:<br>Create two classes and methods as follows<br>1. Class name = \"Base\" withe one method<br>     a. Declare two variable in \"Base\"<br>     b. Create a method getInput()<br>     c. Method name = getInput()<br>     d. Arguments = No argument<br>     e. Access Specifier = public<br>     f. Return Type = void<br>     g. Use Scanner class and get the inputs of two values<br>2. Class name = \"Derived\"  [Inherited from Base Class] with two methods      <br>[ Derived d1 = new Derived()]<br> <br>     a. Declare one variable in \"Derived\" class<br>     b. Method name = sum()<br>     c. Arguments = No argument<br>     d. Access Specifier = public<br>     e. Return Type = void<br>     f. Add two values and store in the variable declared in \"Derived\" class<br>     g. Method name  = display()<br>     h. Arguments = No argument<br>     i. Access Specifier = public<br>     j. Return Type = void and print the answer in the method<br>3. Create instance for \"Derived\" class in main class (TestClass) and the instance for Derived class  should be \"d1\"<br>4. Access the methods getInput(), sum() and display() using the Derived class object \"d1\"<br>', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Base {\r\n  \r\n 	public int a;\r\n  	public int b;\r\n  	\r\n    Scanner sc = new Scanner(System.in);\r\n  	\r\n    public void getInput()\r\n    {\r\n     \r\n      a = sc.nextInt();\r\n      b = sc.nextInt();\r\n      \r\n    }  \r\n}\r\nclass Derived extends Base {\r\n  \r\n 	private int result;\r\n  	public void sum()\r\n    {\r\n      result = a + b;\r\n    }\r\n  	public void display()\r\n    {\r\n     	System.out.println(result);\r\n    }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Derived d1 = new Derived();\r\n       d1.getInput();\r\n       d1.sum();\r\n       d1.display();\r\n       \r\n	}\r\n}'),
(74, 'Inheritance and Interface', 'Q. 74:', 'Multiple Inheritance', 'Write a java program to implement Multiple Inheritance for Banking application<br>1.Create an interface with name \"Bank\"<br>a. Declare data member as \"rate\" and assign the value to 12.0f<br>b. Declare data member as \"no_of_years\" and assign the value to 3<br>c. Declare the method show() with type void and takes no arguments<br>2. Create a class named \"Customer\" with following data-members and methods<br>Data members:<br>a. Customer name as \"String\"<br>b. Customer id as integer<br>Method:<br>a. Create a parameterized constructor  for \"Customer\" class that takes two arguments (String and integer)<br>b. Assign the value to Customer name and Customer id<br>c. Create a method display() with return type as void and takes no arguments. Display the customer name and customer id<br>3. Create a class \"Account\" that extends \"Customer\" class and implements \"Bank\" interface<br>Data members:<br>a. Account number as integer<br>b. Account balance as float<br>Method:<br>a. Create a parameterized constructor  for \"Account\" class that takes four arguments (String, integer, integer and float)<br>b. Assign the value to account number and account balance<br>c. Call the super class method using super keyword <br>class Account extends Customer implements Bank {<br> <br> int acc_no;<br> float acc_bal;<br> Account(String n,int b,int x,float y) {<br> <br>  super(n,b);<br>  acc_no=x;<br>  acc_bal=y;<br> }<br>d. Create a method show() of return type void that takes no arguments<br>e. Invoke the display() method and then print the account number and account<br>f. Create a method interest() of return type void that takes no arguments<br>g. Invoke show() method and calculate the interest using<br>(rate*acc_bal*no_of_years)/100<br>and print the interest<br> <br> 4. In main method of TestClass create an instance for Account class that take four parameters as:<br>Name, customer id, account number and account balance.<br>5. And call the interest() method to calculate interest', 'import java.io.*;\r\nimport java.util.Scanner;\r\ninterface Bank {\r\n  \r\n 	float rate = 12.0f;\r\n  	int no_of_years = 3;\r\n 	\r\n 	void show();  \r\n}\r\nclass Customer {\r\n  \r\n 	private String name;\r\n  	private int id;\r\n  	\r\n  	public Customer(String a, int b)\r\n    {\r\n     	name = a;\r\n      	id = b;\r\n    }\r\n  	public void display()\r\n    {\r\n     	System.out.println(\"Customer Name=\"+name);\r\n      	System.out.println(\"Customer Id=\"+id);\r\n    }\r\n}\r\nclass Account extends Customer implements Bank \r\n{\r\n	int acc_no;\r\n	float acc_bal;\r\n	Account(String n,int b,int x,float y) \r\n    {	\r\n		super(n,b);\r\n		acc_no=x;\r\n		acc_bal=y;\r\n	}\r\n    public void show()\r\n    {\r\n    	display();\r\n        System.out.println(\"Account No=\"+acc_no);\r\n        System.out.println(\"Account Balance=\"+acc_bal);\r\n    }\r\n    public void interest()\r\n    {\r\n    	show();\r\n        System.out.println(\"Interest=\"+(double)((rate*acc_bal*no_of_years)/100));\r\n    }\r\n }\r\n\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n\r\n       Scanner sc = new Scanner(System.in);\r\n       String name = sc.nextLine();\r\n       int id = sc.nextInt();\r\n       int acc_no = sc.nextInt();\r\n       int acc_bal = sc.nextInt();\r\n       Account obj = new Account(name, id, acc_no, acc_bal);\r\n       obj.interest();\r\n	}\r\n}'),
(75, 'Inheritance and Interface', 'Q. 75:', 'Single Level Inheritance - Rectangle', 'Write a java program to find Area of Rectangle using Single Level Inheritance<br>1. Create a class \"Shape\" and do the following in the data-members and method<br>Data members<br>a. length and breadth of type integer<br>2. In Main class(TestClass) extend the base class \"Shape\" and declare the variable name as \"area\" of type integer.<br>3. Create a method \"calculateArea()\" of type void that takes no argument. The return type is void.<br>4. Calculate the area in the calculateArea() method [area= length*breadth] <br>5. In the main method create a instance for main class (TestClass) as \"r\"<br>6. Get the input of length and breadth using instancename.variablename<br>Hint:<br>r.length=scannerclassobject.nextInt()<br>7. Invoked the calculateArea() method<br>Note:<br>The final answer must be printed in the Mainmethod using instancename (r.area)', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Shape {\r\n  \r\n 	public int length;\r\n  	public int breadth;\r\n  	\r\n}\r\npublic class TestClass extends Shape{\r\n  \r\n  	 private int area;\r\n  \r\n  	 public void calculateArea()\r\n     {\r\n      	area = length*breadth; \r\n     }\r\n	 public static void main(String[] args) { \r\n		\r\n      TestClass r = new TestClass();\r\n      Scanner sc = new Scanner(System.in);\r\n      r.length = sc.nextInt();\r\n      r.breadth = sc.nextInt();\r\n      r.calculateArea();\r\n       \r\n      System.out.println(\"Area=\"+r.area);\r\n	}\r\n}'),
(76, 'Inheritance and Interface', 'Q. 76:', 'Payslip Generation', '1. Create an interface as \"Gross\"<br>Declare TA and DA as type double and initialize to \"800.0\" and \"1500.0\" respectively<br>Declare a method as \"gross_sal\" with type void that takes no arguments in the interface<br>2. Create a class \"Employee\" with data-member as \"name\" in String and basic_cal as \"float\"<br> <br>class Employee  {<br> String name; <br> float basic_sal;<br>Declare Parameterized Constructor that takes two arguments (String n, and float b)  and assign the values to name and basic_sal respectively.<br>Create a method display() and print the name and the basic salary of the employee<br>3. Create a class \"Salary\" that extends \"Employee\" class and implements \"Gross\" interfaces<br>Declare a variable \"hra\" of type float<br>Create a Parematerized Constructor \"Salary\" that takes three arguments  and call the super class <br>Salary(String n, float b, float h)<br> {<br>  super(n,b);<br>  hra=h;<br> }<br> <br>Create a method disp() with no arguments and call the display() method and print the HRA of the employee<br>Create an another method and gross_sal() method and calculate the gross salary of the employee by adding basic salary, TA, DA, HRA<br> <br> 4. Create instance in the main class for \"Salary\" class with instance name as \"s\" that takes three arguments<br>Call the disp() and the gross_sal() using the \"Salary\" class instance  \"s\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\ninterface Gross {\r\n  \r\n 	double TA = 800.0;\r\n  	double DA = 1500.0;\r\n 	\r\n 	void gross_sal();  \r\n}\r\nclass Employee {\r\n  \r\n 	String name;\r\n  	float basic_sal;\r\n  	\r\n  	public Employee(String n, float b)\r\n    {\r\n     	name = n;\r\n      	basic_sal = b;\r\n    }\r\n  	public void display()\r\n    {\r\n     	System.out.println(\"Name of Employee=\"+name);\r\n      	System.out.println(\"Basic Salary of Employee=\"+basic_sal);\r\n    }\r\n}\r\nclass Salary extends Employee implements Gross \r\n{\r\n	float hra;\r\n	Salary(String n,float b,float h) \r\n    {	\r\n		super(n,b);\r\n		hra=h;\r\n	}\r\n    public void disp()\r\n    {\r\n    	display();\r\n        System.out.println(\"HRA of Employee=\"+hra);\r\n    }\r\n    public void gross_sal()\r\n    {\r\n    	System.out.println(\"TA of Employee=\"+TA);\r\n        System.out.println(\"DA of Employee=\"+DA);\r\n        System.out.println(\"Gross Salary of Employee=\"+(basic_sal+TA+DA+hra));\r\n    }\r\n }\r\n\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n\r\n       Scanner sc = new Scanner(System.in);\r\n       String name = sc.nextLine();\r\n       int b = sc.nextInt();\r\n       int h = sc.nextInt();\r\n\r\n       Salary s = new Salary(name, b, h);\r\n       s.disp();\r\n       s.gross_sal();\r\n	}\r\n}'),
(77, 'Inheritance and Interface', 'Q. 77:', 'Summer Mango', '1. Create an Interface with name \"Mango\"<br>2. Declare a method in the interface as \"display\" with no arguments and return type as void<br>3. Create a class \"Summer\" that implements \"Mango\" class<br>4.  Create a method display() of return type void that tales no arguments<br>Display the message \"Summer is famous for Mango Season\"<br>5. Create a class \"Winter\" that implements \"Mango\" class<br>6.  Create a method display() of return type void that tales no arguments<br>Display the message \"Winter is famous for Apple Season\"<br> 7. In the main class create instance for Mango class as \"m\" for Summer class and Winter class as \"w\" for Winter Class<br>8. Invoke the display method as \"m.display()\" first and the assign the instance of m to n using m=n<br>9. Now invoke the same display method using \"m.display()\"', 'interface Mango {\r\n\r\n 	   public void display();  \r\n}\r\nclass Summer implements Mango {\r\n  \r\n    public void display()\r\n    {\r\n     	System.out.println(\"Summer is famous for Mango Season\");\r\n    }\r\n}\r\nclass Winter implements Mango \r\n{\r\n	public void display()\r\n    {\r\n        System.out.println(\"Winter is famous for Apple Season\");\r\n    }\r\n}\r\n\r\n public class TestClass \r\n{\r\n	 public static void main(String[] args) { \r\n\r\nMango m=new Summer();\r\n       m.display();\r\n    Mango n=new Winter();\r\n       m=n;\r\n       m.display();\r\n      // System.out.println(\"Hello World..\");\r\n	}\r\n}'),
(78, 'Inheritance and Interface', 'Q. 78:', 'Hybrid Inheritance for Student MarkList - Total', 'Java program to implement Hybrid Inheritance program<br>1. Create an Interface with name \"Exam\"<br>2. Create a method in the interface as percent_cal() with method return type as \"void\" that takes no arguments<br>3. Create a class \"Student\" and declare data members and methods as follows<br>a. name = String<br>b. roll_no, mark1,mark2,mark2,mark4,mark5 as Integer<br>c. Create a Constructor Parameterised for Student class that takes four arguments as \"n\" of type String, \"r\" , \"m1\" ,\"m2,\" \",m3\", \"m4\" ,\"m5\" of types integer<br>d. Assign the parameterised argument to dataMembers of \"Student\" class<br>4. Create an another method in \"Student\" class as follows<br>a. Method name= display<br>b. Argument = None<br>c. Return Type = void<br>d. Usage = Print the name, roll_no, mark1,mark2,mark2,mark4,mark5<br>5. Create a class  \"Result\" that extends \"Student\" class and implements \"Exam\" interface<br>6. Create a Constructor Parameterised for Result class that takes four arguments as \"n\" of type String, \"r\" , \"m1\", \"m2\", \"m3\", \"m4\", \"m5\" of types \"integer\"<br>7. Use super(n,r,m1,m2,m3,m4,m5) so that it access the Base Class constructor<br>Note: super keyword in \"Result\" class will call \"Student\" class (Base class for Result class).<br>8. Implement the percent_cal method and calculate the total and percentage<br>Note: Declare variable \"total\" and print the total result<br>9. Implement the \"display\" follows<br>a. Method name= display<br>b. Argument = None<br>c. Return Type = void<br>Note:<br>Call the Base class method display using super keyword (super.display())<br>10. In main class get the input of \"name\" as String, \"regno\", \"mark1\" ,\"mark2\",  \"mark3\" ,\"mark4\", \"mark5\" as Integer<br>11. Create an instance for Result Class \"R\" with parameterised constructor that takes four arguments [name,regno,mark1,mark2,mark3,mark4,mark5] <br>12. Invoke display method first and percent_cal method second', 'import java.io.*;\r\nimport java.util.Scanner;\r\ninterface Exam {\r\n  \r\n 	void percent_cal(); \r\n}\r\nclass Student {\r\n 	\r\n  	String name;\r\n  	int roll_no,mark1,mark2,mark3,mark4,mark5;\r\n  \r\n  	public Student(String n, int r, int m1, int m2, int m3, int m4, int m5)\r\n    {\r\n      	name = n;\r\n      	roll_no = r;\r\n      	mark1 = m1;\r\n      	mark2 = m2;\r\n      	mark3 = m3;\r\n      	mark4 = m4;\r\n      	mark5 = m5;\r\n    }\r\n  	public void display()\r\n    {\r\n     	System.out.println(\"Name of Student=\"+name);\r\n      	System.out.println(\"Roll No of Student=\"+roll_no);\r\n      	System.out.println(\"Marks of Subject 1=\"+mark1);\r\n      	System.out.println(\"Marks of Subject 2=\"+mark2);\r\n      	System.out.println(\"Marks of Subject 3=\"+mark3);\r\n      	System.out.println(\"Marks of Subject 4=\"+mark4);\r\n      	System.out.println(\"Marks of Subject 5=\"+mark5);\r\n      \r\n    }\r\n}\r\nclass Result extends Student implements Exam {\r\n 	\r\n  	public Result(String n, int r, int m1, int m2, int m3, int m4, int m5)\r\n    {\r\n      	super(n,r,m1,m2,m3,m4,m5);\r\n    }\r\n  	public void percent_cal()\r\n    {\r\n     	int total;\r\n      	total = mark1+mark2+mark3+mark4+mark5;\r\n      	System.out.println(\"Total=\"+total);\r\n    }\r\n  	public void display()\r\n    {\r\n     	super.display(); \r\n    }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       \r\n       String name = sc.nextLine();\r\n       int regno = sc.nextInt();\r\n       int mark1 = sc.nextInt();\r\n       int mark2 = sc.nextInt();\r\n       int mark3 = sc.nextInt();\r\n       int mark4 = sc.nextInt();\r\n       int mark5 = sc.nextInt();\r\n       \r\n       Result R = new Result(name, regno, mark1, mark2, mark3, mark4, mark5);\r\n       \r\n       R.display();\r\n       R.percent_cal();\r\n	}\r\n}'),
(79, 'Inheritance and Interface', 'Q. 79:', 'Override - Method', 'Java program to implement Interface using override method<br>Hint:<br>1. Create an Interface with name \"interfaceone\"<br>2. Create a method inside interface with following parameters<br>a. Access specifier = public<br>b. Method name = disp()<br>c. Return type = void<br>d. Argument = public<br>3. Create an Interface with name \"interfacetwo\"<br>4. Create a method inside interface with following parameters<br>a. Access specifier = public<br>b. Method name = disp()<br>c. Return type = void<br>d. Argument = public<br>5. In the main class(TestClass) implement both the interfaces <br>Hint:<br>public class TestClass implements interfaceone,interfacetwo<br>6. Use Override keyword and declare same disp() with same parameters mentioned above<br>7. Print \"This is disp() method implementation using override method\" inside overridden method<br>8. Create a Instance for TestClass as \"tc\" and access the disp method', 'import java.io.*;\r\ninterface interfaceone\r\n{\r\n    public static void disp(int x);\r\n}\r\ninterface interfacetwo \r\n{\r\n  public void disp( int x);\r\n}\r\n   public class TestClass implements interfaceone,interfacetwo\r\n{\r\n@Override\r\npublic void disp(int x)\r\n{\r\nSystem.out.println(\"This is disp() method implementation using override method\");\r\n}\r\n	 public static void main(String args[])\r\n     {\r\n     TestClass tc=new TestClass();\r\n     tc.disp(0);\r\n	}\r\n}'),
(80, 'Inheritance and Interface', 'Q. 80:', 'Sum of two numbers in single level inheritance', 'Addition of two numbers using the concept single level inheritance.<br>Mandatory:<br>Create two classes and methods as follows<br>1. Class name = \"Base\" withe one method<br>     a. Declare two variable in \"Base\"<br>     b. Create a method getInput()<br>     c. Method name = getInput()<br>     d. Arguments = No argument<br>     e. Access Specifier = public<br>     f. Return Type = void<br>     g. Use Scanner class and get the inputs of two values<br>2. Class name = \"Derived\"  [Inherited from Base Class] with two methods      [ Derived d1 = new Derived()]<br> <br>     a. Declare one variable in \"Derived\" class<br>     b. Method name = sum()<br>     c. Arguments = No argument<br>     d. Access Specifier = public<br>     e. Return Type = void<br>     f. Add two values and store in the variable declared in \"Derived\" class<br>     g. Method name  = display()<br>     h. Arguments = No argument<br>     i. Access Specifier = public<br>     j. Return Type = void and print the answer in the method<br>3. Create instance for \"Derived\" class in main class (TestClass) and the instance for Derived class  should be \"d1\"<br>4. Access the methods getInput(), sum() and display() using the Derived class object \"d1\"<br>', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass Base {\r\n  \r\n 	public int a;\r\n  	public int b;\r\n  	\r\n    Scanner sc = new Scanner(System.in);\r\n  	\r\n    public void getInput()\r\n    {\r\n     \r\n      a = sc.nextInt();\r\n      b = sc.nextInt();\r\n      \r\n    }  \r\n}\r\nclass Derived extends Base {\r\n  \r\n 	private int result;\r\n  	public void sum()\r\n    {\r\n      result = a + b;\r\n    }\r\n  	public void display()\r\n    {\r\n     	System.out.println(result);\r\n    }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Derived d1 = new Derived();\r\n       d1.getInput();\r\n       d1.sum();\r\n       d1.display();\r\n       \r\n	}\r\n}'),
(81, 'Exceptional Handling', 'Q. 81:', 'Test Scores using Exceptional Handing', 'Do the following in the TestClass<br>1. Create a Class Constructor and the class constructor should accept an array of test scores as its argument. <br>2. The class should have a method that returns the average of the test scores. <br>3. If any test score in the array is negative or greater than 100, the class should throw an \"IllegalArgumentException\".  Demonstrate the class in a program.<br>4. The class in catch block is \"IllegalArgumentException\" with exception instance as \"e\"<br>5. Print the exception if any of the input is negative or greater than 100', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass TestScores {\r\n \r\n  float mean;\r\n  \r\n  public TestScores(int arr[]){\r\n    int s = 0;\r\n    for (int i = 0;i < arr.length;i++)\r\n    {\r\n     	if (arr[i] < 0 || arr[i] > 100){\r\n          throw new IllegalArgumentException();  \r\n        }\r\n      	else{\r\n         	 s = s + arr[i];\r\n          	 mean = s/arr.length;\r\n        }\r\n      \r\n    }\r\n  }\r\n    public float getMean()\r\n    {\r\n        return mean;\r\n    }\r\n}\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       int l = sc.nextInt();\r\n       int[] arr = new int[l];\r\n       \r\n       for (int i = 0;i < l;i++)\r\n         	arr[i] = sc.nextInt();\r\n       \r\n       TestScores obj =null;\r\n       try{\r\n           obj = new TestScores(arr);\r\n           System.out.println(obj.getMean());\r\n       }\r\n       catch(IllegalArgumentException e){\r\n         System.out.println(e);\r\n       }\r\n       \r\n       \r\n	}\r\n}'),
(82, 'Exceptional Handling', 'Q. 82:', 'Binary to Decimal - Userdefined Exception', 'Write a Java program to convert Binary to Decimal number using User defined Exception<br>Help:<br>1. Create a class \"BinaryFormatException\" extends NumberFormatException<br>2. Create a Parameterised Constructor under \"BinaryFormatException\" class as follows<br>a. Method Name = BinaryFormatException<br>b. Access Specifier = public<br>c. Argument = One Argument with String type and variable name \"msg\"<br>d. Use super(msg)<br>3. In the main method get the input of binary number and call the  static method under main class (TestClass)  <br>a. Method name = binToDecimal<br>b. Parameter = One argument with String type<br>c. If number is not binary then throw exception message as \"Number is not Binary\"<br>Hint:<br>throw new BinaryFormatException(\"Number is not Binary\")<br>4. Use catch block with user defined exception as  \"BinaryFormatException\"  with exception instance as \"e\"<br>5. Print the exception message \"e\" whenever the exception is thrown from methods', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass BinaryFormatException extends NumberFormatException{\r\n  \r\n 	public BinaryFormatException(String msg)\r\n    {\r\n      		super(msg);\r\n    }\r\n  \r\n}\r\npublic class TestClass {\r\n  \r\n  	 public static void binToDecimal(String n)\r\n     {\r\n       try\r\n       {\r\n           int t = 0;\r\n           char[] words = n.toCharArray();\r\n           for (char ch:words)\r\n           {\r\n                if (ch != \'1\' && ch != \'0\')\r\n                {\r\n                  //System.out.println(ch);\r\n                  t = 1;\r\n                  break;\r\n                }\r\n\r\n           }\r\n           if (t == 1)\r\n                throw new BinaryFormatException(\"Number is not Binary\");\r\n           else\r\n                System.out.println(Integer.parseInt(n,2));\r\n       }\r\n       catch (BinaryFormatException e)\r\n       {\r\n         System.out.println(e); \r\n       }\r\n     }\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       String S = sc.nextLine();\r\n       binToDecimal(S);\r\n	}\r\n}'),
(83, 'Exceptional Handling', 'Q. 83:', 'Validating number - Float', 'Write a java program to check whether user entered  input  is floating number or not.<br>Mandatory:<br>1. Use try and catch block to satisfy exceptional handling techniques.<br>2.In catch block use InputMismatchException class and create an object names \"e\"<br>catch(InputMisMatchException e)<br>3.If the input is not a number,  then print the exception object \"e\"  as <br>System.out.println(e)', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       try{\r\n         //double n = sc.nextDouble();\r\n         if(sc.hasNextFloat())\r\n           	System.out.println(\"Valid Number\");\r\n         else\r\n           throw new InputMismatchException();\r\n       }\r\n       catch(InputMismatchException e){\r\n         System.out.println(e);\r\n       }\r\n	}\r\n}'),
(84, 'Exceptional Handling', 'Q. 84:', 'User defined Exception - TestScore', 'Write an exception named \"InvalidTestScore\". The class constructor should accept an array of test scores as its argument. <br>The class should have a method that returns the average of the test scores. <br>If any test score in the array is negative or greater than 100, the class should throw an \"InvalidTestScore\". Demonstrate the class in a program.<br>Help:<br>1. Create a class \"InvalidTestScore\" extends Exception<br>2. Create a Parameterised Constructor under InvalidTestScore class as follows<br>a. Method Name = InvalidTestScore<br>b. Access Specifier = public<br>c. Argument = One Argument with String type and variable name \"msg\"<br>d. Use super(msg)<br>3. In the main method get the input of array size and corresponding marks and call the  static method under main class (TestClass)  <br>a. Method name = InTestScore<br>b. Parameter = One argument with array of type integer<br>c. If number is less than zero or greater than 100 the throw exception  \"Invalid Test Score\"<br>Hint:<br>throw new InvalidTestScore<br>4. Use catch block with user defined exception as  \"InvalidTestScore\"  with exception instance as \"e\"<br>5. Print the exception message \"e\" whenever the exception is thrown from methods', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass InvalidTestScore extends Exception \r\n{ \r\n    public InvalidTestScore(String msg) \r\n    { \r\n        super(msg); \r\n    } \r\n} \r\npublic class TestClass {\r\n  \r\n  	 public static void InTestScore(int arr[]){\r\n       int s = 0,t = 0;\r\n       try\r\n        { \r\n         	 for (int i = 0;i < arr.length;i++)\r\n             {\r\n              	if (arr[i] < 0 || arr[i] > 100)\r\n                {\r\n                  	t = 1;\r\n                  	throw new InvalidTestScore(\"Invalid Test Score\");\r\n                }\r\n                else\r\n                {\r\n                 	s = s + arr[i];\r\n                }\r\n             }\r\n        } \r\n        catch (InvalidTestScore e) \r\n        { \r\n            System.out.println(e); \r\n        } \r\n        if (t == 0)\r\n        	System.out.println((double)s/arr.length);\r\n      }\r\n	 public static void main(String[] args) { \r\n		\r\n        Scanner sc = new Scanner(System.in);\r\n        int l = sc.nextInt();\r\n        int arr[] = new int[l];\r\n        for (int i = 0;i < l;i++)\r\n          	arr[i] = sc.nextInt();\r\n        InTestScore(arr);\r\n       \r\n	}\r\n}'),
(85, 'Exceptional Handling', 'Q. 85:', 'Simple Calculator', 'Write a Java program to create a simple calculator. <br>The program reads two numbers followed by an operator. Output of the program should be the result of the operation.<br>Also you need to handle \"NumberFormatException\" which arises when an invalid number is given as input. <br>See examples for more details.<br>If the input is not valid (only numbers) then print the exception message<br>Use necessary exception handling constructs for with exception class object as  \"e\"<br>Note:<br>1. Do the arithmetic operations for  +, - , /, *', 'import java.io.*;\r\nimport java.util.Scanner;\r\n//import java.util.InputMismatchException;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       try{\r\n         \r\n         int a = sc.nextInt();\r\n         int b = sc.nextInt();\r\n         String c = sc.nextLine();\r\n         \r\n         switch(c){\r\n           case \" +\":\r\n             		System.out.println(a+b);\r\n             		break;\r\n           case \" -\":\r\n             		System.out.println(a-b);\r\n             		break;\r\n           case \" *\":\r\n             		System.out.println(a*b);\r\n             		break;\r\n           case \" /\":\r\n             		System.out.println(a/b);\r\n             		break;\r\n             \r\n         }\r\n         \r\n       }\r\n       catch(NumberFormatException e){\r\n         System.out.println(e);\r\n       }\r\n	}\r\n}'),
(86, 'Exceptional Handling', 'Q. 86:', 'Handling String Index Out of Bound Exception', 'Write a java program which throw an  String Index Out of Bound Exception  <br>Mandatory <br>1. Use try and catch block to satisfy exceptional handling techniques.<br>2. Inside catch method use the following class in the argument<br>catch(StringIndexOutOfBoundsException e)<br>3. If the index is out of range then Print the ArithmeticException object  \"e\" using <br>System.out.println(e) and it will return the output as follows \"java.lang.StringIndexOutOfBoundsException: String index out of range\"<br>4.If the index is within the range print the character at the specific index.', 'import java.io.*;\r\nimport java.util.Scanner;\r\n//import java.util.InputMismatchException;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       try{\r\n        	String str = sc.nextLine();\r\n         	int n = sc.nextInt();\r\n  			System.out.println(str.charAt(n)); \r\n           	\r\n       }\r\n       catch(StringIndexOutOfBoundsException e){\r\n         System.out.println(e);\r\n       }\r\n	}\r\n}'),
(87, 'Exceptional Handling', 'Q. 87:', 'User Defined Exception', 'Write a java program to display a given string using User Defined Exception', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass MyException extends Exception \r\n{ \r\n    public MyException(String s) \r\n    { \r\n        super(s); \r\n    } \r\n} \r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n        try\r\n        { \r\n          	Scanner sc = new Scanner(System.in);\r\n            throw new MyException(sc.nextLine()); \r\n        } \r\n        catch (MyException ex) \r\n        { \r\n            System.out.println(ex.getMessage()); \r\n        } \r\n       \r\n	}\r\n}'),
(88, 'Exceptional Handling', 'Q. 88:', 'Sum of two numbers', 'Write a Java program to read two numbers and output their sum. <br>You need to handle \"InputMismatchException\" when the input given is not valid and display an error message. <br>See examples for more details<br>If the given input is not valid then, display the message exception<br>Use necessary exception handling constructs for with exception class object as  \"e\"', 'import java.io.*;\r\nimport java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\npublic class TestClass {\r\n  \r\n  	 public static boolean check(int a,int b) \r\n     {\r\n       try \r\n       {\r\n         String s1 = Integer.toString(a);\r\n       	 String s2 = Integer.toString(b);\r\n       	 Integer.parseInt(s1);\r\n         Integer.parseInt(s2);\r\n       }\r\n       catch(Exception ex)\r\n       {\r\n        	 return false;\r\n       }\r\n       return true;\r\n       \r\n     }\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       try\r\n       {\r\n         int a = sc.nextInt();\r\n         int b = sc.nextInt();\r\n         if(check(a,b))\r\n           System.out.println(a+b);\r\n         else\r\n           throw new InputMismatchException();\r\n       }\r\n       catch(InputMismatchException e){\r\n         System.out.println(e);\r\n       }\r\n	}\r\n}'),
(89, 'Exceptional Handling', 'Q. 89:', 'User Defined Exception - Age', 'Write a program to throw your own exception explicitly using throw keyword<br>Help:<br>1. Create a class \"MyOwnFirstException\" that extends Exception class<br>2. Create a Parameterised Constructor under MyOwnFirstException class as follows<br>a. Method Name = MyOwnFirstException<br>b. Access Specifier = public<br>c. Argument = One Argument with String type and variable name \"msg\"<br>d. Use super(msg)<br>3. In the main method get the input of age and call the  static method under main class (TestClass)  <br>a. Method name = employeeAge<br>b. Parameter = One argument with type integer<br>c. If age is less than Zero then throw exception message as \"Age cant be less than zero\"<br>Hint:<br>throw new MyOwnFirstException(\"Age cant be less than zero\");<br>d. If the age is greater than Zero then print \"Input is valid\"<br>4. Use catch block with user defined exception as  \"MyOwnFirstException\" with exception instance as \"e\"<br>5. Print the exception message \"e\" whenever the exception is thrown from employeeAge()', 'import java.io.*;\r\nimport java.util.Scanner;\r\nclass MyOwnFirstException extends Exception \r\n{ \r\n    public MyOwnFirstException(String msg) \r\n    { \r\n        super(msg); \r\n    } \r\n} \r\npublic class TestClass {\r\n  \r\n  	 public static void employeeAge(int age){\r\n       try\r\n        { \r\n         	if (age > 0) \r\n              System.out.println(\"Input is valid\");\r\n         	else\r\n            	throw new MyOwnFirstException(\"Age cant be less than zero\"); \r\n        } \r\n        catch (MyOwnFirstException e) \r\n        { \r\n            System.out.println(e); \r\n        } \r\n     }\r\n	 public static void main(String[] args) { \r\n		\r\n        Scanner sc = new Scanner(System.in);\r\n        int age = sc.nextInt();\r\n        employeeAge(age);\r\n       \r\n	}\r\n}'),
(90, 'Exceptional Handling', 'Q. 90:', 'Hexa to Decimal', 'Write a Java program which contains a function hexToDecimall\" that reads a Hexadecimal number and prints the decimal value of that hexadecimal number<br>Your function must throw \"NumberFormatException\" if an invalid binary number is given as input and the error message \"Invalid binary input\" should be displayed.<br>The class in catch block is \"NumberFormatException\" with exception instance as \"e\"<br>Print the exception if the input is not an Hexadecimal Number', 'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class TestClass {\r\n  	 public static void hexToDecimall(){\r\n       try\r\n       {\r\n         Scanner sc = new Scanner(System.in);\r\n         String str = sc.nextLine();\r\n         int t = 0;\r\n         for(int i = 0;i < str.length();i++) \r\n         {\r\n            int digit = hexValue(str.charAt(i));\r\n            if(digit == -1) \r\n            {\r\n                t = 1;\r\n                break;\r\n            }\r\n         } \r\n         if(t == 0)\r\n         {\r\n           int decimal=Integer.parseInt(str,16); \r\n           System.out.println(decimal);\r\n         }\r\n         else\r\n           throw new NumberFormatException();\r\n       }\r\n       catch(NumberFormatException e)\r\n       {\r\n         System.out.println(\"Invalid binary input\");\r\n       }\r\n     }\r\n	 public static void main(String[] args) { \r\n		\r\n       hexToDecimall();\r\n       \r\n	}\r\n    public static int hexValue(char ch) \r\n    {\r\n       switch(ch) \r\n       {\r\n          case \'0\':\r\n             return 0;\r\n          case \'1\':\r\n             return 1;\r\n          case \'2\':\r\n             return 2;\r\n          case \'3\':\r\n             return 3;\r\n          case \'4\':\r\n             return 4;\r\n          case \'5\':\r\n             return 5;\r\n          case \'6\':\r\n             return 6;\r\n          case \'7\':\r\n             return 7;\r\n          case \'8\':\r\n             return 8;\r\n          case \'9\':\r\n             return 9;\r\n          case \'a\':    \r\n          case \'A\':\r\n             return 10;\r\n          case \'b\':\r\n          case \'B\':\r\n             return 11;\r\n          case \'c\':\r\n          case \'C\':\r\n             return 12;\r\n          case \'d\':\r\n          case \'D\':\r\n             return 13;\r\n          case \'e\':\r\n          case \'E\':\r\n             return 14;\r\n          case \'f\':\r\n          case \'F\':\r\n             return 15;\r\n          default:\r\n             return -1;\r\n       }\r\n    }\r\n}'),
(91, 'Generics and Collections', 'Q. 91:', 'FirstChar', 'Given an array of non-empty strings, return a Map<String, String> with a key for every different first character seen, with the value of all the strings starting with that character appended together in the order they appear in the array.<br>Mandatory:<br>1. Use Scanner Class to get input from the user<br>2. The Instance for Scanner Class is \"sc\"<br>3. Create a Map and the instance for Map class is \"map\" that takes two arguments<br>Hint:<br>Map<String,String> map = new TreeMap<String,String>();<br>4.Create an array of String datatype and the instance of the array is \"keys\" and use charAt() method to find the the stings at  particular position.<br>5.Then use map.put() method to append the first character of the string before the string.<br>6.Use getKey and getValue methods of Map Class to get the keys and values of the keys to print the result using System.out.println class.<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n	   \r\n       Map<String,String> map = new TreeMap<String,String>();\r\n       Scanner sc = new Scanner(System.in);\r\n       String temp = sc.nextLine();\r\n       String keys[] = temp.split(\" \");\r\n       \r\n       for (String s:keys) \r\n       {\r\n          if (!map.containsKey(s.substring(0,1))) \r\n          {  \r\n              map.put(s.substring(0,1), s);\r\n\r\n          }\r\n          else\r\n          {\r\n             String existing = map.get(s.substring(0,1));\r\n              map.put(s.substring(0,1), existing+s);\r\n          }\r\n\r\n       }\r\n       for (Map.Entry<String, String> entry : map.entrySet()) {\r\n            String k = entry.getKey();\r\n            String v = entry.getValue();\r\n            System.out.println(k + \" \" + v);\r\n        } \r\n	}\r\n}');
INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(92, 'Generics and Collections', 'Q. 92:', 'Reverse a collection', 'Reverse a collection with the help of listIterator() and Collection.reverse() methods of Collection and List iterator class.<br>Hint :<br>1. Import java util List, ListIterator, Collections, ,ArrayList packages<br>2.Create a Array list of type String with instance name as \"aList\"<br>List<String> aList=new ArrayList<>()<br>3. Input five String inputs using nextLine method of Scanner Class<br>4. Add the Five Strings inputs to Array List using ArrayList object \"aList\".add() method<br>5. Create a ListIterator instance as \"liter\"  for ArrayList using listIterator method    <br>ListIterator liter=aList.listIterator()<br>6. Iterate through while loop using Iterator class hasNext() method and get the elements from the using next() method of ListIterator Class<br>7. Use reverse method of Collections class using that takes Array List instance as an argument (aList) <br>8. To iterate the ArrayList use the following statements in the coding liter=aList.listIterator()<br>9. Now display the updated List elements using methods (liter.next() and liter.hasNext())<br>Note:<br>Kindly use System.out.println() <br> [ System.out.println(liter.next()); ]', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       List<String> aList=new ArrayList<String>();\r\n		aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n        aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n       	\r\n       	ListIterator liter=aList.listIterator();\r\n       	System.out.println(\"Before reverse\");\r\n       	while(liter.hasNext()){\r\n          System.out.println(liter.next());\r\n        }\r\n        Collections.reverse(aList);\r\n      	liter = aList.listIterator();\r\n       	System.out.println(\"After reverse\");\r\n       	while (liter.hasNext()){\r\n          System.out.println(liter.next());\r\n        }\r\n	}\r\n}'),
(93, 'Generics and Collections', 'Q. 93:', 'Hash Map - Iterator', 'Use iterator Method of Collection class to iterate through the HashMap in reverse order<br>Hint:<br>1. Create a HashMap class with instance \"hMap\" of String Type<br>  Hint:<br>         HashMap<String,String> hMap=new HashMap<String,String>()<br>2.Get Five string inputs and hash the value using hMap.put method<br> Hint:<br>      hMap.put(\"5\", br.readLine())  - The first inputed value is store for the hash value \"5\"<br>3. Create a Iterator class with instance \"itr\" for Collection class object \"cl\"<br>Hint:<br>   Collection cl=hMap.values()<br>    Iterator itr=cl.iterator()<br>4. Use Iterator class hasNext() method and next() method to print the HashMap values.<br>Reverse:<br>Since the first String input value is stored in \"5\" hash value, the next() method will print the list in reverse order', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       HashMap<String,String> hMap=new HashMap<String,String>();\r\n       Scanner sc = new Scanner(System.in);\r\n       hMap.put(\"5\",sc.nextLine());\r\n       hMap.put(\"4\",sc.nextLine());\r\n       hMap.put(\"3\",sc.nextLine());\r\n       hMap.put(\"2\",sc.nextLine());\r\n       hMap.put(\"1\",sc.nextLine());\r\n       Collection cl=hMap.values();\r\n	   Iterator itr=cl.iterator();\r\n       while (itr.hasNext()){\r\n          System.out.println(itr.next());\r\n       }\r\n	}\r\n}'),
(94, 'Generics and Collections', 'Q. 94:', 'Convert an array into collection', 'Write a program to convert an array into a collection using <br>Arrays.asList(name) method of Java Util class. <br>Get the input string array from the user and produce the result as list.<br>Mandatory:<br>1. Use BufferedReader Class to get input from the user<br>2. The Instance for BufferedReader Class is \"br\"<br>3. Declare String array and store the String values in the array.<br>4. The instance name for String array is \"name\"<br>5. Create a List for String Datatype and the instance for List class is \"list\" <br>6. Use Arrays.asList() method that takes argument as String array [\"name\"]    <br>Hint:<br>List<String> list=Arrays.asList(name)<br>7. Use foreach loop to print the final answer<br>Hint:<br>for(String li:list)<br>Where li = foreach variable and list is the instance for List Class<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) throws Exception { \r\n		\r\n       InputStreamReader r=new InputStreamReader(System.in);    \r\n       BufferedReader br=new BufferedReader(r);\r\n       int T = Integer.parseInt(br.readLine());\r\n       String[] name = new String[T];\r\n       for (int i = 0;i < T;i++)\r\n         	name[i] = br.readLine();\r\n       List<String> list=Arrays.asList(name);\r\n       for(String li:list)\r\n         	System.out.print(li + \" \");\r\n	}\r\n}'),
(95, 'Generics and Collections', 'Q. 95:', 'Map Before', 'Modify and return the given map as follows: <br>If the keys \"a\" and \"b\" have values that have different lengths, then set \"c\" to have the longer value. <br>If the values exist and have the same length, change them both to the empty string in the map.<br>Mandatory:<br>1. Use Scanner Class to get input from the user<br>2. The Instance for Scanner Class is \"sc\"<br>3. Create a Map for String Datatype and the instance for Map class is \"map\" that takes two arguments<br>Hint:<br>Map<String,String> map = new TreeMap<String,String>();<br>4. Use containskey() method of Map class to check weather the key \"a\" and \"b\" is available <br>5.If the key is available use StringObject.length() method to get the length of the string.<br>6.If the Length of the two keys a and b is different then set the key c to have a longer value. <br>Hint:<br>                              String str = (s1.length()>s2.length()?s1:s2);<br>                              map.put(\"c\",str);<br>7.If the Length of the two keys a and b is same then change both to have empty string using map.put() method.<br>8.Use getKey and getValue methods of Map Class to get the keys and values of the keys to print the result using System.out.println class.<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       Map<String,String> map = new TreeMap<String,String>();\r\n       int l = sc.nextInt();\r\n       String[] val;\r\n       String line;\r\n       String abc = sc.nextLine();\r\n       while(l > 0)\r\n       {\r\n         line = sc.nextLine();\r\n         val = line.split(\" \");\r\n         map.put(val[0],val[1]);\r\n         l--;\r\n         \r\n       }\r\n       if(map.containsKey(\"a\") && map.containsKey(\"b\"))\r\n       {\r\n			if (map.get(\"a\").length() != map.get(\"b\").length()) \r\n            {\r\n              	String s1 = map.get(\"a\");\r\n              	String s2 = map.get(\"b\");\r\n              	String str = (s1.length()>s2.length()?s1:s2);\r\n				map.put(\"c\",str);\r\n            }\r\n            \r\n            if (map.get(\"a\").length() == map.get(\"b\").length()) {\r\n                map.put(\"a\", \"\");\r\n                map.put(\"b\", \"\");\r\n            }\r\n       }\r\n       for (Map.Entry<String, String> entry : map.entrySet()) {\r\n            String k = entry.getKey();\r\n            String v = entry.getValue();\r\n            System.out.println(k + \" \" + v);\r\n        } \r\n\r\n	}\r\n}'),
(96, 'Generics and Collections', 'Q. 96:', 'Topping 1', 'Given a map of food keys and topping values, modify and return the map as follows:<br>If the key \"ice cream\" is present, set its value to \"cherry\". <br>In all cases, set the key \"bread\" to have the value \"butter\".<br>Mandatory:<br>1. Use Scanner Class to get input from the user<br>2. The Instance for Scanner Class is \"sc\"<br>3. Create a Map for String Datatype and the instance for Map class is \"map\" that takes two arguments<br>Hint:<br>Map<String,String> map = new TreeMap<String,String>();<br>4. Use containsKey() method of Map class to check weather the key \"ice cream\" and \"bread\" is available <br>5.If the key is available use map.put() method of the map class to set the value of icecream as \"cherry\" and in all cases set the value of bread as \"butter\"<br>Hint:<br>                 map.put(\"ice cream\", \"cherry\");<br> 		 map.put(\"bread\",\"butter\");<br>6.If both the cases are not satisfied then print the input as it is.<br>7.Use getKey and getValue methods of Map Class to get the keys and values of the keys to print the result using System.out.println class.<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       Map<String,String> map = new TreeMap<String,String>();\r\n       int l = sc.nextInt();\r\n       String[] val;\r\n       String line;\r\n       String abc = sc.nextLine();\r\n       while(l > 0)\r\n       {\r\n         line = sc.nextLine();\r\n         val = line.split(\" \");\r\n         map.put(val[0],val[1]);\r\n         l--;\r\n         \r\n       }\r\n       if(map.containsKey(\"icecream\"))\r\n       {\r\n		   		map.put(\"icecream\", \"cherry\");\r\n       }\r\n       if (map.containsKey(\"bread\"))\r\n       {\r\n         		map.put(\"bread\",\"butter\");\r\n       }\r\n       for (Map.Entry<String, String> entry : map.entrySet()) {\r\n            String k = entry.getKey();\r\n            String v = entry.getValue();\r\n            System.out.println(k + \" \" + v);\r\n        } \r\n\r\n	}\r\n}'),
(97, 'Generics and Collections', 'Q. 97:', 'Topping 2', 'Given a map of food keys and their topping values, modify and return the map as follows: <br>If the key \"ice cream\" has a value, set that as the value for the key \"yogurt\" also.<br>If the key \"spinach\" has a value, change that value to \"nuts\".<br>Mandatory:<br>1. Use Scanner Class to get input from the user<br>2. The Instance for Scanner Class is \"sc\"<br>3. Create a Map for String Datatype and the instance for Map class is \"map\" that takes two arguments<br>Hint:<br>Map<String,String> map = new TreeMap<String,String>();<br>4. Use containskey() method of Map class to check weather the key \"ice cream\" has the value.If the key ice cream has the value then set the same value for the key \"yogurt\"<br>5.Use map.put() method of the map class to set the value of \"icecream\" key as the value of  \"yogurt\" key.<br>Hint:<br>map.put(\"yogurt\",map.get(\"icecream\"));<br>5. Use containskey() method of Map class to check weather the key \"spanish\" has the value then change that value to \"nuts\"<br>6.Use getKey and getValue methods of Map Class to get the keys and values of the keys to print the result using System.out.println class.<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       Map<String,String> map = new TreeMap<String,String>();\r\n       int l = sc.nextInt();\r\n       String[] val;\r\n       String line;\r\n       String abc = sc.nextLine();\r\n       while(l > 0)\r\n       {\r\n         line = sc.nextLine();\r\n         val = line.split(\" \");\r\n         map.put(val[0],val[1]);\r\n         l--;\r\n         \r\n       }\r\n       if(map.containsKey(\"icecream\"))\r\n       {\r\n		   		map.put(\"yogurt\",map.get(\"icecream\"));\r\n       }\r\n       if (map.containsKey(\"spinach\"))\r\n       {\r\n         		map.put(\"spinach\",\"nuts\");\r\n       }\r\n       for (Map.Entry<String, String> entry : map.entrySet()) {\r\n            String k = entry.getKey();\r\n            String v = entry.getValue();\r\n            System.out.println(k + \" \" + v);\r\n        } \r\n\r\n	}\r\n}'),
(98, 'Generics and Collections', 'Q. 98:', 'Remove a specific element from a collection', 'Write a Java Program to remove a specific element from a collection using collection.remove() method of Collection class. <br>Hint :<br>1. Import java util Iterator and ArrayList packages<br>2.Create a Array list of type String with instance name as \"aList\"<br>     List<String> aList=new ArrayList<>();<br>3. Input five String inputs using nextLine method of Scanner Class<br>4. Add the Five Strings inputs to Array List using ArrayList object \"aList\".add() method<br>5. Display the Array List elements using methods (aList.size() and aList.get())<br>6. Create a Iterator class for ArrayList using<br>     Iterator itr=aList.iterator();<br>7. Get the element to be deleted from the Array List.<br>8. Iterate through while loop using Iterator class hasNext() method and get the elements from the Arraylist using next() method of Iterator Class<br>9. Use remove() method of Iterator class to remove the element<br>10. Now display the updated Array List elements using methods (aList.size() and aList.get())', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n	   \r\n       List<String> aList=new ArrayList<>();\r\n       Scanner sc = new Scanner(System.in);\r\n      \r\n		aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n        aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n\r\n       	System.out.println(\"ArrayList before removal:\");\r\n        for (int i =0;i < aList.size();i++)\r\n          	System.out.println(aList.get(i));\r\n       \r\n        Iterator itr = aList.iterator();\r\n        \r\n        String ele = sc.nextLine();\r\n       \r\n        while(itr.hasNext())\r\n        {\r\n         String str = (String)itr.next();\r\n         if (str.equals(ele))\r\n         {\r\n            itr.remove();\r\n         }\r\n      	}\r\n        System.out.println(\"ArrayList after removal : \");\r\n       	for (int i = 0; i < aList.size();i++)\r\n          	System.out.println(aList.get(i));\r\n       \r\n	}\r\n}'),
(99, 'Generics and Collections', 'Q. 99:', 'Add element to a collection', 'Write a Java Program to add five element to a collection using collection.add() method of Collection class. <br>Hint :<br>1. Import java util Iterator and ArrayList packages<br>2.Create a Array list of type String with instance name as \"aList\"<br>     List<String> aList=new ArrayList<>();<br>3. Input five String inputs using nextLine method of Scanner Class <br>4. Add the Five Strings inputs to Array List using ArrayList object \"aList\".add() method<br>5. Display the Array List elements using methods (aList.size() and aList.get())', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       List<String> aList=new ArrayList<>();\r\n		aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n        aList.add(sc.nextLine());\r\n       	aList.add(sc.nextLine());\r\n       	System.out.println(\"ArrayList\");\r\n        for (int i =0;i < aList.size(); i++)\r\n          	System.out.println(aList.get(i));\r\n	}\r\n}'),
(100, 'Generics and Collections', 'Q. 100:', 'MapAB', 'Modify and return the given map as follows: for this problem the map may or may not contain the \"a\" and \"b\" keys. If both keys are present, append their 2 string values together and store the result under the key \"ab\".<br>Mandatory:<br>1. Use Scanner Class to get input from the user<br>2. The Instance for Scanner Class is \"sc\"<br>3. Create a Map for String Datatype and the instance for Map class is \"map\" that takes two arguments<br> Hint:<br>                           Map<String,String> map = new TreeMap<String,String>();<br>4. Use containskey() method of Map class to check weather the key \"a\"  and \"b\" is available <br>5.If the key is available  use map.put() method of the map class to append the value of both the keys.<br>Hint:<br>String str = \"\"+map.get(\"a\") + map.get(\"b\");<br>map.put(\"ab\",str);<br>6.Use getKey and getValue methods of Map Class to get the keys and values of the keys to print the result using System.out.println class.<br>Note: If any one of the above condition is not satisfied, then it will not show 100%', 'import java.io.*;\r\nimport java.util.*;\r\npublic class TestClass {\r\n	 public static void main(String[] args) { \r\n		\r\n       Scanner sc = new Scanner(System.in);\r\n       Map<String,String> map = new TreeMap<String,String>();\r\n       int l = sc.nextInt();\r\n       String[] val;\r\n       String line;\r\n       String abc = sc.nextLine();\r\n       while(l > 0)\r\n       {\r\n         line = sc.nextLine();\r\n         val = line.split(\" \");\r\n         map.put(val[0],val[1]);\r\n         l--;\r\n         \r\n       }\r\n       if(map.containsKey(\"a\") && map.containsKey(\"b\"))\r\n       {\r\n			String str = \"\"+map.get(\"a\") + map.get(\"b\");\r\n			map.put(\"ab\",str);\r\n       }\r\n       for (Map.Entry<String, String> entry : map.entrySet()) {\r\n            String k = entry.getKey();\r\n            String v = entry.getValue();\r\n            System.out.println(k + \" \" + v);\r\n        } \r\n\r\n	}\r\n}'),
(101, 'Input and Output Statemen', 'Q. 1:', 'Disarium Number', 'Given a number n, find if it is Disarium or not. A number is called Disarium if sum of its digits powered with their respective positions is equal to the number itself.<br>Input:<br>The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of one line. The first line of each test case consists of an integer N.<br>Output:<br>Corresponding to each test case, in a new line, print 1 if N is Disarium , else 0.<br>Constraints:<br>1<=T <=100<br>1<=N<=1000', ''),
(102, 'Input and Output Statemen', 'Q. 2:', 'Even occurring elements', 'Given an array that contains odd number of occurrences for all numbers except for a few elements which are present even number of times. Find the elements which have even occurrences in the array in O(n) time complexity and O(1) extra space.<br>Note: In some array, array contains only odd number then you have to print only a blank new line.<br>Input:<br>The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines. The first line of each test case consists of an integer N, where N is the size of array.<br>The second line of each test case contains N space separated integers denoting array elements.<br>Output:<br>Corresponding to each test case, in a new line, print the elements which have even occurrences in the array.<br>Constraints:<br>1 <= T <= 100<br>1 <=N <=200<br>1 <=A[i] <= 63', ''),
(103, 'Input and Output Statemen', 'Q. 3:', 'Number Pattern3', 'Write a program to print following outputs.<br>1<br>1 2<br>1 2 3<br>1 2 3 4<br>1 2 3 4 5<br>1 2 3 4 5 6<br>1 2 3 4 5 6 7<br>1 2 3 4 5 6<br>1 2 3 4 5<br>1 2 3 4<br>1 2 3<br>1 2<br>1', ''),
(104, 'Input and Output Statemen', 'Q. 4:', 'Tweedle-Dee and Tweedle-Dum', 'Tweedle-Dee and Tweedle-Dum are in a fierce battle playing even-odd nim. This novel game is played on N heaps. Heap i contains ai stones.<br>Like normal nim, Tweedle-Dee and Tweedle-Dum alternate taking a positive number of stones from any single one of the heaps, and the player that can\'t remove stones loses. However Tweedle-Dee can only take an even number of stones, and Tweedle-Dum can only take an odd number of stones.<br>Alice doesn\'t want to wait until the end of the game, so she asks you to determine the winner of the game. Remember that Tweedle-Dee and Tweedle-Dum are legendary grandmasters of combinatorial games, so they always play optimally.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line of each case consists of an integer N the number of heaps, and a string P the player that starts the game. String P is equal to \"Dee\" if Tweedle-Dee goes first, or \"Dum\" if Tweedle-Dum goes first.<br>The second line of each case contains N space separated integers ai the number of stones of the i-th heap.<br>Output<br>For each test case, output a single line containing either \"Dee\" if Twedle-Dee winns the game or \"Dum\" otherwise.<br>Constraints<br>1<=T<=50<br>1<=N <=50<br>1<=ai <=50', ''),
(105, 'Input and Output Statemen', 'Q. 5:', 'Sticks', 'Chef and his little brother are playing with sticks. They have total N sticks. Length of i-th stick is Ai. Chef asks his brother to choose any four sticks and to make a rectangle with those sticks its sides. Chef warns his brother to not to break any of the sticks, he has to use sticks as a whole. Also, he wants that the rectangle formed should have the maximum possible area among all the rectangles that Chef\'s brother can make.<br>Chef\'s little brother takes this challenge up and overcomes it. Can you also do so? That is, you have to tell whether it is even possible to create a rectangle? If yes, then you have to tell the maximum possible area of rectangle.<br>Input<br>The first line contains a single integer T denoting the number of test-cases. T test cases follow.<br>The first line of each test case contains a single integer N denoting the number of sticks.<br>The second line of each test case contains N space-separated integers A1, A2, ..., AN denoting the lengths of sticks.<br>Output<br>For each test case, output a single line containing an integer representing the maximum possible area for rectangle or -1 if it\'s impossible to form any rectangle using the available sticks.<br>Constraints<br>1<=T <=00<br>1<=N<=103<br>1<=sum of N\'s over all test-cases in a single test file <=103<br>1 <= Ai <=103', ''),
(106, 'Input and Output Statemen', 'Q. 6:', 'Reverse word', 'Write a java program to reverse each word of a given string?<br>input:  <br>java program<br>output:<br>avaj margorp', ''),
(107, 'Input and Output Statemen', 'Q. 7:', 'Addition of Two Numbers', 'write java program to find the addition of two Numbers.<br>get the two integer numbers at the run time .<br>add that two numbers then print the value with at-least two decimal place.<br>Note: inputs may whole number or fractional number<br>          output should print with two decimal place<br>Sample Input<br>1234.4321<br>12300.12<br>Sample Output<br>Addition is:13534.5521', ''),
(108, 'Input and Output Statemen', 'Q. 8:', 'Keypad typing string', 'You are given N strings of alphabet characters and the task is to find their matching decimal representation as on the shown keypad. Output the decimal representation corresponding to the string. For ex: if you are given amazon then its corresponding decimal representation will be 262966.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of a single line containing a string.<br>Output:<br>For each test case, print in a new line, the corresponding decimal representation of the given string.<br>Constraints:<br>1<=T <=100<br>1<= length of String <=100', ''),
(109, 'Input and Output Statemen', 'Q. 9:', 'Find the Odd Occurence', 'Given an array of positive integers. All numbers occur even number of times except one number which occurs odd number of times. Find the number.<br>Expected Time Complexity: O(n)<br>Expected Auxiliary Space: Constant<br>Input:<br>The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines.<br>The first line of each test case consists of an integer N, where N is the size of array.<br>The second line of each test case contains N space separated integers denoting array elements.<br>Output:<br>Corresponding to each test case, print in a new line, the number which occur odd number of times.<br>Constraints:<br>1<=T<=100<br>1 <=N <=202<br>1 <=A[i] <=1000', ''),
(110, 'Input and Output Statemen', 'Q. 10:', 'Chef and his Students', 'Chef is instructor of the famous course \"Introduction to Algorithms\" in a famous univerisity. There are n students in his class. There is not enough space in the class room, so students sit in a long hallway in a linear fashion.<br>One day Chef was late to class. As a result, some of the students have formed pairs and are talking to each other, while the others are busy studying. This information is given to you by a string s of length n, consisting of characters \'*\', <\' and \'>\', where \'*\' denotes that the student is studying, \'>\' denotes that the corresponding student is talking to the student to the right, and \'<\' denotes that the corresponding student is talking to the student to the left.<br>For example, consider a sample configuration of students - *><*. Here students numbered 1 and 4 are busy studying, while the student 2 and 3 are talking to each other. In this example, ><><, student 1 and 2 are talking to each other, and 3 and 4 are also talking to each other. You are guaranteed that the given input is a valid configuration, i.e. <> can not be a valid string s, as here student 1 is shown to be talking to left, but there is no student to the left. Same is the case for right. Similarly, >><< is also not a valid configuration, as students 2 and 3 are talking to each other, so student 1 won\'t be able to talk to student 2.<br>When the students see their teacher coming, those who were talking get afraid and immediately turn around, i.e. students talking to left have now turned to the right, and the one talking to right have turned to the left. When Chef sees two students facing each other, he will assume that they were talking. A student who is busy studying will continue doing so. Chef will call each pair of students who were talking and punish them. Can you find out how many pairs of students will get punished?<br>For example, in case *><*, when students see Chef, their new configuration will be *<>*. Chef sees that no students are talking to each other. So no one is punished. While in case ><><, the new configuration of students will be <><>, Chef sees that student 2 and 3 are talking to each other and they will be punished.<br>Input<br>The first line of the input contains an integer T denoting the number of the test cases.<br>Each test case contains a string s denoting the activities of students before students see Chef entering the class.<br>Output<br>For each test case, output a single integer denoting the number of pairs of students that will be punished.<br>Constraints<br>1<=T<=0<br>1<=|s| <=105', ''),
(111, 'Data types and Operators', 'Q. 11:', 'Little Elephant and Permutations', 'The Little Elephant likes permutations. This time he has a permutation A[1], A[2], ..., A[N] of numbers 1, 2, ..., N.<br>He calls a permutation A good, if the number of its inversions is equal to the number of its local inversions. The number of inversions is equal to the number of pairs of integers (i; j) such that 1  i < j  N and A[i] > A[j], and the number of local inversions is the number of integers i such that 1  i < N and A[i] > A[i+1].<br>The Little Elephant has several such permutations. Help him to find for each permutation whether it is good or not. Print YES for a corresponding test case if it is good and NO otherwise.<br>Input<br>The first line of the input contains a single integer T, the number of test cases. T test cases follow. The first line of each test case contains a single integer N, the size of a permutation. The next line contains N space separated integers A[1], A[2], ..., A[N].<br>Output<br>For each test case output a single line containing the answer for the corresponding test case. It should be YES if the corresponding permutation is good and NO otherwise.<br>Constraints<br>1  T  474 <br>1  N  100 <br>It is guaranteed that the sequence A[1], A[2], ..., A[N] is a permutation of numbers 1, 2, ..., N.', ''),
(112, 'Data types and Operators', 'Q. 12:', 'Chef and The Right Triangles', 'The Chef is given a list of N triangles. Each triangle is identfied by the coordinates of its three corners in the 2-D cartesian plane. His job is to figure out how many of the given triangles are right triangles. A right triangle is a triangle in which one angle is a 90 degree angle. The vertices of the triangles have integer coordinates and all the triangles given are valid( three points aren\'t colinear ).  <br> <br>Input<br>The first line of the input contains an integer N denoting the number of triangles. Each of the following N lines contain six space separated integers x1 y1 x2 y2 x3 y3 where (x1, y1), (x2, y2) and (x3, y3) are the vertices of a triangle.<br> <br>Output<br>Output one integer, the number of right triangles among the given triangles.<br> <br>Constraints<br>1  N  100000 (105)<br>0  x1, y1, x2, y2, x3, y3  20<br>', ''),
(113, 'Data types and Operators', 'Q. 13:', 'Prime Generator', 'Shridhar wants to generate some prime numbers for his cryptosystem. Help him! Your task is to generate all prime numbers between two given numbers.<br>Input<br>The first line contains t, the number of test cases (less then or equal to 10). Followed by t lines which contain two numbers m and n (1 <= m <= n <= 1000000000, n-m<=100000) separated by a space.<br>Output<br>For every test case print all prime numbers p such that m <= p <= n, one number per line. Separate the answers for each test case by an empty line.', ''),
(114, 'Data types and Operators', 'Q. 14:', 'Chef-jumping', 'This morning Chef wants to jump a little. In a few minutes he will arrive at the point 0. Then he will perform a lot of jumps in such a sequence: 1-jump, 2-jump, 3-jump, 1-jump, 2-jump, 3-jump, 1-jump, and so on.<br>1-jump means that if Chef is at the point x, he will jump to the point x+1.<br>2-jump means that if Chef is at the point x, he will jump to the point x+2.<br>3-jump means that if Chef is at the point x, he will jump to the point x+3.<br>Before the start Chef asks you: will he arrive at the point a after some number of jumps?<br>Input<br>The first line contains a single integer a denoting the point Chef asks about.<br>Output<br>Output \"yes\" without a quotes if Chef can arrive at point a or \"no\" without a quotes otherwise.<br>Constraints<br>0  a  1018', ''),
(115, 'Data types and Operators', 'Q. 15:', 'Arranging Cup-cakes', 'Our Chef is catering for a big corporate office party and is busy preparing different mouth watering dishes. The host has insisted that he serves his delicious cupcakes for dessert.<br>On the day of the party, the Chef was over-seeing all the food arrangements as well, ensuring that every item was in its designated position. The host was satisfied with everything except the cupcakes. He noticed they were arranged neatly in the shape of a rectangle. He asks the Chef to make it as square-like as possible.<br>The Chef is in no mood to waste his cupcakes by transforming it into a perfect square arrangement. Instead, to fool the host, he asks you to arrange the N cupcakes as a rectangle so that the difference between the length and the width is minimized.<br>Input<br>The first line of the input file contains an integer T, the number of test cases. Each of the following T lines contains a single integer N denoting the number of cupcakes.<br>Output<br>Output T lines, each indicating the minimum possible difference between the length and the width in a rectangular arrangement of the cupcakes.<br>Constraints<br>1  T  100<br>1  N  108', ''),
(116, 'Data types and Operators', 'Q. 16:', 'Pairwise AND sum', 'You are given a sequence of N integer numbers A. Calculate the sum of Ai AND Aj for all the pairs (i, j) where i < j.<br>The AND operation is the Bitwise AND operation, defined as in here.<br>Input<br>The first line of input consists of the integer N. <br>The second line contains N integer numbers - the sequence A.<br>Output<br>Output the answer to the problem on the first line of the output.', ''),
(117, 'Data types and Operators', 'Q. 17:', 'counting number of digits', 'Java program to count the number of digits in a number', ''),
(118, 'Data types and Operators', 'Q. 18:', 'Sums in a Triangle', 'Let\'s consider a triangle of numbers in which a number appears in the first line, two numbers appear in the second line, three in the third line, etc. Develop a program which will compute the largest of the sums of numbers that appear on the paths starting from the top towards the base, so that:<br>on each path the next number is located on the row below, more precisely either directly below or below and one place to the right;<br>the number of rows is strictly positive, but less than 100<br>all numbers are positive integers between O and 99.<br>Input<br>In the first line integer n - the number of test cases (equal to about 1000). Then n test cases follow. Each test case starts with the number of lines which is followed by their content.<br>Output<br>For each test case write the determined value in a separate line.', ''),
(119, 'Data types and Operators', 'Q. 19:', 'Finding Sqaure root', 'In olden days finding square roots seemed to be difficult but nowadays it can be easily done using in-built functions available across many languages .<br>Assume that you happen to hear the above words and you want to give a try in finding the square root of any given integer using in-built functions. So here\'s your chance.<br>Input<br>The first line of the input contains an integer T, the number of test cases. T lines follow. Each T contains an integer N whose square root needs to be computed.<br>Output<br>For each line of input output the square root of the input integer.', ''),
(120, 'Data types and Operators', 'Q. 20:', 'Puppy and Sum', 'Yesterday, puppy Tuzik learned a magically efficient method to find the sum of the integers from 1 to N. He denotes it as sum(N). But today, as a true explorer, he defined his own new function: sum(D, N), which means the operation sum applied D times: the first time to N, and each subsequent time to the result of the previous operation.<br>For example, if D = 2 and N = 3, then sum(2, 3) equals to sum(sum(3)) = sum(1 + 2 + 3) = sum(6) = 21.<br>Tuzik wants to calculate some values of the sum(D, N) function. Will you help him with that?<br>Input<br>The first line contains a single integer T, the number of test cases. Each test case is described by a single line containing two integers D and N.<br>Output<br>For each testcase, output one integer on a separate line.<br>Constraints<br>1  T  16<br>1  D, N  4', ''),
(121, 'Control and Looping', 'Q. 21:', 'Generate Date Between Given Range', 'Java Program to Generate Date Between Given Range', ''),
(122, 'Control and Looping', 'Q. 22:', 'check Armstrong number', 'Write a java program to check Armstrong number', ''),
(123, 'Control and Looping', 'Q. 23:', 'PATTERN', '\"Write a java program to display the following patterns\"', ''),
(124, 'Control and Looping', 'Q. 24:', 'PATTERN', 'Java Program to display first n or first 100 prime numbers', ''),
(125, 'Control and Looping', 'Q. 25:', 'PATTERN  1 - CL2', '\"Write a java program to display the following patterns\"', ''),
(126, 'Control and Looping', 'Q. 26:', 'EXIT CODE', '\"Professor X got lost in a maze of an ancient tomb in Egypt. While he was finding the way to escape, he got a message of the tomb builders on the old walls:<br> The code to open the exit door is the sequence C of n digits formed c1..cn (ci[0,9] ). <br> For every sequence C, combining with the given integers A,B, call:<br>o h0=0<br>o hi=(hi-1A+ci) mod B<br> The smallest sequence C (in lexicological order) satisfying hn=G (where G is a given integer) is the exit code which professor X needs.<br>Request<br>Give the integers n,A,B,G, help professor X find out the exit code! <br>\"', ''),
(127, 'Control and Looping', 'Q. 27:', 'PATTERN  2 - CL2', '\"Write a java program to display the following patterns\"', ''),
(128, 'Control and Looping', 'Q. 28:', 'PATTERNS', 'Write a java program to display the following patterns', ''),
(129, 'Control and Looping', 'Q. 29:', 'Floyds triangle', 'Write a Java program to print Floyds triangle.', ''),
(130, 'Control and Looping', 'Q. 30:', 'PATTERNS', 'Write a java program to display the following patterns', ''),
(131, 'Arrays', 'Q. 31:', 'Bon Apptit', 'Anna and Brian order  items at a restaurant, but Anna declines to eat any of the Kth item (where 0<=K<n ) due to an allergy. When the check comes, they decide to split the cost of all the items they shared; however, Brian may have forgotten that they didn\'t split the Kth item and accidentally charged Anna for it.<br>You are given n,K , the cost of each of the  items, and the total amount of money that Brian charged Anna for her portion of the bill. If the bill is fairly split, print Bon Appetit; otherwise, print the amount of money that Brian must refund to Anna.<br>Input Format<br>The first line contains two space-separated integers denoting the respective values of  n(the number of items ordered) and K (the 0-based index of the item that Anna did not eat). <br>The second line contains n space-separated integers where each integer i denotes the cost,c[i] , of item i  (where 0<=i<=n). <br>The third line contains an integer,bcharged , denoting the amount of money that Brian charged Anna for her share of the bill.<br>Constraints<br> 2<=n<=105<br> 0<=k<=n<br> 0<=c[i]<=104<br> 0<=b<= summation of c[i]<br>Output Format<br>If Brian did not overcharge Anna, print Bon Appetit on a new line; otherwise, print the difference (i.e., bcharged - bactual ) that Brian must refund to Anna (it is guaranteed that this will always be an integer).', ''),
(132, 'Arrays', 'Q. 32:', 'INCREASING ORDER', 'Given a number, where its each digit should be raised to increasing order of the power starting from 1, add the result and return it.<br>Input Format:<br>Give  the number of any digits.<br>Output Format:<br>Returns the sum.<br>Explanation:<br>For 146=><br>(11+42+63)=1+16+216=233', ''),
(133, 'Arrays', 'Q. 33:', 'Insertion Sort', 'One common task for computers is to sort data. For example, people might want to see all their files on a computer sorted by size. Since sorting is a simple problem with many different possible solutions, it is often used to introduce the study of algorithms.<br>Insertion Sort <br>These challenges will cover Insertion Sort, a simple and intuitive sorting algorithm. We will first start with an already sorted list.<br>Insert element into sorted list <br>Given a sorted list with an unsorted number e in the rightmost cell, can you write some simple code to insert  into the array so that it remains sorted?<br>Print the array every time a value is shifted in the array until the array is fully sorted. The goal of this challenge is to follow the correct order of insertion sort.<br>Guideline: You can copy the value of e to a variable and consider its cell \"empty\". Since this leaves an extra cell empty on the right, you can shift everything over until V can be inserted. This will create a duplicate of each value, but when you reach the right spot, you can replace it with e.<br>Input Format <br>There will be two lines of input:<br> Size - the size of the array<br>  Arr- the unsorted array of integers<br>Output Format <br>On each line, output the entire array every time an item is shifted in it.', ''),
(134, 'Arrays', 'Q. 34:', 'Frequency of Array Elements', 'Given an unsorted array of N integers which can contain integers from 1 to N. Some elements can be repeated multiple times and some other elements can be absent from the array. Count frequency of all elements from 1 to N.<br>Input:<br>The first line contains an integer \'T\' denoting the total number of test cases. In each test cases, the first line contains an integer \'N\' denoting the size of array. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.<br>Output:<br>For each test case output N space-separated integers denoting the frequency of each element from 1 to N.<br>Constraints:<br>1  T  100<br>1  N  100', ''),
(135, 'Arrays', 'Q. 35:', 'Sum of Digits Divisibility', 'Check that the number can be divided by the sum of its digit.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.Then T test cases follow .Each test case consist of an integer N.<br>Output:<br>Print 1 if divisible else 0.<br>Constraints:<br>1  T  100<br>1  N  100000', ''),
(136, 'Arrays', 'Q. 36:', 'Swap kth elements array', 'Given an array, swap kth element from beginning with kth element from end.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N and k,N is the size of array and kth number.<br>The second line of each test case contains N input C[i].<br>Output:<br>Print the modified array.<br>Constraints:<br>1  T  100<br>1  K  N  500<br>1  C[i]  1000', ''),
(137, 'Arrays', 'Q. 37:', 'Rearrange Array Alternately array', 'Given a sorted array, rearrange  the array alternately i.e first element should be max value, second min value, third second max, fourth second min and so on. Eg: arr[] = {1, 2, 3, 4, 5, 6, 7} O/P: {7, 1, 6, 2, 5, 3, 4} <br>Input:<br>First line of input ia the number of test cases T. First line of test case contain the array size \'N\' and second line of test case contain the array.<br>Output:<br>Numbers in the required form are displayed to the user.<br>Constraints:<br>1 <=T<= 30<br>1 <=N<= 100<br>1 <=arr[i]<= 1000', ''),
(138, 'Arrays', 'Q. 38:', 'Mini-Max Sum', 'Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers. Then print the respective minimum and maximum values as a single line of two space-separated long integers.<br>Input Format<br>A single line of five space-separated integers.<br>Constraints<br> Each integer is in the inclusive range [1,109] .<br>Output Format<br>Print two space-separated long integers denoting the respective minimum and maximum values that can be calculated by summing exactly four of the five integers. (The output can be greater than 32 bit integer.)', ''),
(139, 'Arrays', 'Q. 39:', 'REVERSE AN ARRAY', 'Write a Java Program To Reverse An Array Without Using An Additional Array', ''),
(140, 'Arrays', 'Q. 40:', 'The British and American Style of Spelling', 'American English and British English differ in several aspects which are reflected in their spelling. One difference frequently observed, is that words written in American English, which have a suffix ze often end in se in British English. Given the American-English spelling of a word which ends in ze your task is to find the total count of all its British and American variants in all the given sequences of words. i.e. you need to account for the cases where the word occurs as it is given to you (i.e. the version ending in -ze) and you also need to find the occurances of its British-English counterparts (i.e, the version ending in -se).<br>Input Format<br>First line contains N, N lines follow each line contains a sequence of words (W) separated by a single space. Next line contains T. T testcases follow in a new line. Each line contains the American English spelling of a word (W\')<br>Constraints<br>1 <= N <= 10 <br>Each line doesn\'t contain more than 10 words (W) <br>Each character of W and W\' is a lowercase alphabet. <br>If C is the count of the number of characters of W or W\', then <br>1 <= C <= 20 <br>1 <= T <= 10 <br>W\' ends with ze ( US version of the word)<br>Output Format<br>Output T lines and in each line output the total number of American and British versions of (W\') in all of N lines that contains a sequence of words.', ''),
(141, 'Classes and Objects', 'Q. 41:', 'Nothing in Common', 'Alice has quarreled with Berta recently. Now she doesn\'t want to have anything in common with her!<br>Recently, they\'ve received two collections of positive integers. The Alice\'s integers were A1, A2, ..., AN, while Berta\'s were B1, B2, ..., BM.<br>Now Alice wants to throw away the minimal amount of number from her collection so that their collections would have no common numbers, i.e. there won\'t be any number which is present in both collections. Please help Alice to find the minimal amount of numbers she would need to throw away.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line of each test case contains two space-separated integer numbers N and M denoting the amount of numbers in Alice\'s and Berta\'s collections respectively.<br>The second line contains N space-separated integers A1, A2, ..., AN denoting the numbers of Alice.<br>The third line contains M space-separated integers B1, B2, ..., BM denoting the numbers of Berta.<br>Output<br>For each test case, output a single line containing the minimal amount of numbers Alice needs to throw away from her collection so that she wouldn\'t have any numbers in common with Berta.<br>Constraints<br>1  Ai, Bi  106<br>All numbers are distinct within a single girl\'s collection.<br>Subtasks<br>Subtask #1 (47 points): T = 25, 1  N, M  1000<br>Subtask #2 (53 points): T = 5, 1  N, M  100000', ''),
(142, 'Classes and Objects', 'Q. 42:', 'Task for Alexey', 'Alexey is trying to develop a program for a very simple microcontroller. It makes readings from various sensors over time, and these readings must happen at specific regular times. Unfortunately, if two of these readings occur at the same time, the microcontroller freezes and must be reset.<br>There are N different sensors that read data on a regular basis. For each i from 1 to N, the reading from sensor i will occur every Ai milliseconds with the first reading occurring exactly Ai milliseconds after the microcontroller is powered up. Each reading takes precisely one millisecond on Alexey\'s microcontroller.<br>Alexey wants to know when the microcontroller will freeze after he turns it on.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line contains single integer N denoting the number of sensors.<br>The second line contains N space-separated integers A1, A2, ..., AN denoting frequency of measurements. Namely, sensor i will be read every Ai milliseconds with the first reading occurring Ai milliseconds after the microcontroller is first turned on.<br>Output<br>For each test case, output a single line containing the number of milliseconds until the microcontroller freezes.<br> <br>Constraints<br>1  T  10<br>2  N  500<br>1  Ai  109<br> <br>Subtasks<br>Subtask #1 (10 points) 1  T  10, 2  N  9, 1  Ai  500<br>Subtask #2 (20 points) 1  T  10, 2  N  500, 1  Ai  1000<br>Subtask #3 (70 points) original constraints', ''),
(143, 'Classes and Objects', 'Q. 43:', 'Shoelace Algorithm', 'Write a Program to Implement Shoelace Algorithm', ''),
(144, 'Classes and Objects', 'Q. 44:', 'Stein GCD Algorithm', 'Write a Program to Implement Stein GCD Algorithm', ''),
(145, 'Classes and Objects', 'Q. 45:', 'Task for Alexey', 'Alexey is trying to develop a program for a very simple microcontroller. It makes readings from various sensors over time, and these readings must happen at specific regular times. Unfortunately, if two of these readings occur at the same time, the microcontroller freezes and must be reset.<br>There are N different sensors that read data on a regular basis. For each i from 1 to N, the reading from sensor i will occur every Ai milliseconds with the first reading occurring exactly Ai milliseconds after the microcontroller is powered up. Each reading takes precisely one millisecond on Alexey\'s microcontroller.<br>Alexey wants to know when the microcontroller will freeze after he turns it on.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line contains single integer N denoting the number of sensors.<br>The second line contains N space-separated integers A1, A2, ..., AN denoting frequency of measurements. Namely, sensor i will be read every Ai milliseconds with the first reading occurring Ai milliseconds after the microcontroller is first turned on.<br>Output<br>For each test case, output a single line containing the number of milliseconds until the microcontroller freezes.<br> <br>Constraints<br>1  T  10<br>2  N  500<br>1  Ai  109<br> <br>Subtasks<br>Subtask #1 (10 points) 1  T  10, 2  N  9, 1  Ai  500<br>Subtask #2 (20 points) 1  T  10, 2  N  500, 1  Ai  1000<br>Subtask #3 (70 points) original constraints', ''),
(146, 'Classes and Objects', 'Q. 46:', 'Shunting Yard Algorithm', 'Write a Program to Implement Shunting Yard Algorithm', '');
INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(147, 'Classes and Objects', 'Q. 47:', 'Cats and Dogs', 'Chef is a farmer and a pet lover. He has a lot of his favorite pets cats and dogs in the barn. He does not know their exact count. But he knows that there are C cats and D dogs in the barn. Also, one day went to field and found that there were L legs of the animals touching the ground. Chef knows that cats love to ride on the dogs. So, they might ride on the dogs, and their legs won\'t touch the ground and Chef would miss counting their legs. Chef\'s dogs are strong enough to ride at max two cats on their back.<br>It was a cold foggy morning, when Chef did this counting. So he is now wondering whether he counted the legs properly or not. Specifically, he is wondering is there a some possibility of his counting being correct. Please help Chef in finding it.<br>Input<br>First line of the input contains an integer T denoting number of test cases. T test cases follow.<br>The only line of each test case contains three space separated integers C, D, L denoting number of the cats, number of the dogs and number of legs of animals counted by Chef, respectively.<br>Output<br>For each test case, output a single line containing a string \"yes\" or \"no\" (both without quotes) according to the situation.<br>Constraints<br>1  T  105<br>0  C, D, L  109<br>Subtasks<br>Subtask #1 (20 points)<br>1  T  104<br>0  C, D  102<br>Subtask #2 (30 points)<br>1  T  105<br>0  C, D  103<br>Subtask #3 (50 points)<br>Original constraints', ''),
(148, 'Classes and Objects', 'Q. 48:', 'Naor-Reingold Pseudo Random Function', 'Write a Program to Implement Naor-Reingold Pseudo Random Function', ''),
(149, 'Classes and Objects', 'Q. 49:', 'Euclid GCD Algorithm', 'Write a Program to Implement Euclid GCD Algorithm', ''),
(150, 'Classes and Objects', 'Q. 50:', 'Carvans', 'Most problems on CodeChef highlight chef\'s love for food and cooking but little is known about his love for racing sports. He is an avid Formula 1 fan. He went to watch this year\'s Indian Grand Prix at New Delhi. He noticed that one segment of the circuit was a long straight road. It was impossible for a car to overtake other cars on this segment. Therefore, a car had to lower down its speed if there was a slower car in front of it. While watching the race, Chef started to wonder how many cars were moving at their maximum speed.<br>Formally, you\'re given the maximum speed of N cars in the order they entered the long straight segment of the circuit. Each car prefers to move at its maximum speed. If that\'s not possible because of the front car being slow, it might have to lower its speed. It still moves at the fastest possible speed while avoiding any collisions. For the purpose of this problem, you can assume that the straight segment is infinitely long.<br>Count the number of cars which were moving at their maximum speed on the straight segment.<br>Input<br>The first line of the input contains a single integer T denoting the number of test cases to follow. Description of each test case contains 2 lines. The first of these lines contain a single integer N, the number of cars. The second line contains N space separated integers, denoting the maximum speed of the cars in the order they entered the long straight segment.<br>Output<br>For each test case, output a single line containing the number of cars which were moving at their maximum speed on the segment.', ''),
(151, 'Methods', 'Q. 51:', 'Set Starting value and N times to Fibonacci Series', 'Write a java program to Set Starting value and N times to Fibonacci Series', ''),
(152, 'Methods', 'Q. 52:', 'Matrix addition', 'Write a java program to add two given matrices', ''),
(153, 'Methods', 'Q. 53:', 'Difference between two Factorials', 'Write a java program to find the Difference between two Factorial', ''),
(154, 'Methods', 'Q. 54:', 'Generate Fibonacci Series within a interval', 'Write a java program to Generate Fibonacci Series within a interval', ''),
(155, 'Methods', 'Q. 55:', 'Binary search', 'Write a Java program to implement binary search.<br>Do a sorting then find the position of the element.', ''),
(156, 'Methods', 'Q. 56:', 'Swap method without using third variable', 'Write a java program to perform Swapping without using third variable', ''),
(157, 'Methods', 'Q. 57:', 'Sorting names', 'Write a java program for sorting a given list of names.', ''),
(158, 'Methods', 'Q. 58:', 'Set Max Value to Fibonacci Series', 'Write a java program to Set Max Value to Fibonacci Series', ''),
(159, 'Methods', 'Q. 59:', 'Palindrome', 'Write a java program that checks whether a given string is a palindrome or not', ''),
(160, 'Methods', 'Q. 60:', 'Matrix multiplication', 'Write a java program to multiply two given matrices.', ''),
(161, 'Strings', 'Q. 61:', 'APPEND STRING TO A FILE', 'Java Program To Append Text To An Existing File', ''),
(162, 'Strings', 'Q. 62:', 'Day of the week', 'Find the day of the week of a given date', ''),
(163, 'Strings', 'Q. 63:', 'Count duplicates', 'Write a java program to find duplicate characters in a given string.', ''),
(164, 'Strings', 'Q. 64:', 'Nuclear Reactors', 'There are K nuclear reactor chambers labelled from 0 to K-1. Particles are bombarded onto chamber 0. The particles keep collecting in the chamber 0. However if at any time, there are more than N particles in a chamber, a reaction will cause 1 particle to move to the immediate next chamber(if current chamber is 0, then to chamber number 1), and all the particles in the current chamber will be be destroyed and same continues till no chamber has number of particles greater than N. Given K,N and the total number of particles bombarded (A), find the final distribution of particles in the K chambers. Particles are bombarded one at a time. After one particle is bombarded, the set of reactions, as described, take place. After all reactions are over, the next particle is bombarded. If a particle is going out from the last chamber, it has nowhere to go and is lost.', ''),
(165, 'Strings', 'Q. 65:', 'UserId', 'Bala is planning to generate User Id for Wifi login by using users First Name, LastName,Pincode,Number N.The Process of Generation Will be Given Below<br>Step1:<br>Compare the length of the two strings first Name, last Name of the participant. The one is shorter will be called as Smaller name, Larger will be called as Larger Name. If both the strings are having equal length , as per the dictionary order you have to consider Larger Name,Smaller Name.<br>Step2:<br>The User Id Will be in the form of UserId=Smaller Name + Last Character of larger name + Digit at Position N in the Pin when traversing from left to right ++ Digit at Position N in the Pin when traversing from right to left.<br>Step3 : Toggle the alphabets of UserId.<br>Examples:<br>1. Input1=Kamal<br>    Input2=Raj<br>    Input3=639113<br>    Input4=6<br>Step1: Here the Smaller Name = Raj , Larger Name=Kamal<br>Step2:User Id=Raj+l+3+6  <br>Step3: Toggle of the UserId=rAJL36, So the Output is rAJL36.', ''),
(166, 'Strings', 'Q. 66:', 'String conversion', 'Write a java program to check if two strings are identical or not identical', ''),
(167, 'Strings', 'Q. 67:', 'STRING SWAP', 'Java Program To Swap Two String Variables Without Using Third Variable', ''),
(168, 'Strings', 'Q. 68:', 'ANAGRAM', 'Anagram Program In Java Using sort() and equals() Methods', ''),
(169, 'Strings', 'Q. 69:', 'String Encryption', 'Alex want\'s to  generate the password  with the Strings. consider the alphabets starts from a=1...<br>Input:<br>board <br>{b=2, o=15, a=1, r=18, d=4} <br>2+15=17<br>15+1=16<br>1+18=19<br>18+4=22<br>output:<br>bqopasrvd', ''),
(170, 'Strings', 'Q. 70:', 'FIND DUPLICATE CHARACTER', 'Java Program To Find Duplicate Characters In A String', ''),
(171, 'Inheritance and Interface', 'Q. 71:', 'RECTANGLE', 'Write a C++ Program to calculate the area and perimeter of rectangles using concept of inheritance.', ''),
(172, 'Inheritance and Interface', 'Q. 72:', 'RECTANGLE', 'Write a C++ Program to calculate the area and perimeter of rectangles using concept of inheritance.', ''),
(173, 'Inheritance and Interface', 'Q. 73:', 'DISPLAY', 'Vasu has a  home and like to display the length and breadth of the same (Hint: Class C1 gets length and breadth as input which is used by class C2 derived from C1.  C2 displays it using a function)', ''),
(174, 'Inheritance and Interface', 'Q. 74:', 'single inheritance', 'Program which will accept name,age,height and weight from the user . It shows the output', ''),
(175, 'Inheritance and Interface', 'Q. 75:', 'MOTHER CLASS', 'Write a program with a mother class and an inherited daughter class. Both of them should have a method void display ()that prints a message (different for mother and daughter).In the main define a daughter and call the display() method on it.', ''),
(176, 'Inheritance and Interface', 'Q. 76:', 'Inheritance', 'Display the employee salary using the simple Inheritance', ''),
(177, 'Inheritance and Interface', 'Q. 77:', 'single inheritance', 'Program which will accept name,age,height and weight from the user . It shows the output', ''),
(178, 'Inheritance and Interface', 'Q. 78:', 'SHAPE CLASS', 'Write a program that defines a shape class with a constructor that gives value to width and height. The define two sub-classes triangle and rectangle, that calculate the area of the shape area (). In the main, define two variables a triangle and a rectangle and then call the area() function in this two variables', ''),
(179, 'Inheritance and Interface', 'Q. 79:', 'SHAPE CLASS', 'Write a program that defines a shape class with a constructor that gives value to width and height. The define two sub-classes triangle and rectangle, that calculate the area of the shape area (). In the main, define two variables a triangle and a rectangle and then call the area() function in this two variables', ''),
(180, 'Inheritance and Interface', 'Q. 80:', 'MULTIPLE INHERITENCE 1', 'Write a program that calculates the area and perimeter of an rectangle but, to perform this program, multiple inheritance is used.', ''),
(181, 'Exceptional Handling', 'Q. 81:', 'Glass Measurement', 'Chef has n glasses each with a capacity of xi. <br>There are Q+1 people playing a game including the Chef himself. Everyone at his/her turn gives a positive integer Mi and asks the Chef if volume M of water can be transferred using the n glasses with Chef. Chef at his own turn wants to give M as the highest integer volume which cannot be constructed using these n glasses. <br>So, you need to help chef with this game. <br>Assume that to construct a volume M, we have a reserve with infinite volume of liquid. If Chef uses ith glass, he has to transfer a volume equal to xi in one turn. He can use a glass multiple times. However, transfer of liquid between glasses is not permitted. For example, you cannot obtain volume of 2 by tranferring liquid from glass of volume 5 to glass of volume 3. <br>It is always possible to construct volume 0.', ''),
(182, 'Exceptional Handling', 'Q. 82:', 'Flipping Coins', 'There are N coins kept on the table, numbered from 0 to N - 1. Initially, each coin is kept tails up. You have to perform two types of operations :<br>1) Flip all coins numbered between A and B inclusive. This is represented by the command \"0 A B\"<br>2) Answer how many coins numbered between A and B inclusive are heads up. This is represented by the command \"1 A B\".', ''),
(183, 'Exceptional Handling', 'Q. 83:', 'Gap Filler Game', 'Chef is facing severe problems at his restaurant. Because his kitchen is small so only small number of cooks can fit in which results in slow service. Customers don\'t like waiting for their food. While he has already started looking for new place to move in, this might take some time. So in meanwhile he has come up with an innovative idea. He\'d put up a board game puzzle on all tables so that customers can play the game while waiting for their orders to arrive. To make this gap filler idea more viral, he\'d further give a discount to people who successfully solve the puzzle. <br>Game that he has chosen consists of N * M grid with each cell having a light and a switch. Once a switch of a cell is pressed, all lights in the same column or row including the cell toggle once. Note that light in the cell whose switch is pressed is toggled once and not twice. Game starts with some lights on and rest off and the objective of the game is to turn on all the lights. <br>He however fears that a lot of people may win discounts. He is a great cook but he is not good with puzzle solving. He seeks your help in determining how easy or tough this game is. Given board dimensions, your task is to find out how many initial configurations of the game can be solved. Two configurations are different if there is at least one cell which is off in one and on in other. As this number might get huge, only print the answer modulo 10^9 + 7.', ''),
(184, 'Exceptional Handling', 'Q. 84:', 'Moving Between floors', 'Did you know that the world\'s tallest structure is Burj Khalifa in Dubai ? To survive when the world ends, Mr.Turing thinks that he should climb one of those skyscrapers ( tall buildings ). There are N tall buildings numbered b_1, b_2, ... , b_N in that order and b_i and b_i+1 are adjacent to each other for 1  i < N. Each of these have exactly F number of floors, f_1, f_2, ... , f_F from bottom to top. Floors f_i and f_i+1 in the same building are adjacent to each other for 1  i < F and it takes one unit of time to move between them. It also takes one unit of time to move between the floor f_1 of a building and f_1 of its adjacent building.<br>Turing is afraid that some buildings may still collapse and so he lists down the bridges connecting some of them, to know how to escape quickly. There are M bridges, each of which connects two floors of different buildings. Each of these bridges is given as bi fi T bj fj, meaning it takes T units of time to move along this bridge which connects the floor fi of building bi and the floor fj of building bj. All ways are bidirectional. Turing wants to know, given bq and fq, the sum of the shortest time it takes to reach (b,f) starting from (bq,fq), for all possible 1  b  N ( except b = bq ) and 1  f  F. In other words, given (bq,fq), find the value of  D(bq,fq,b,f) for all possible (b,f) except b = bq, where D(bi,fi,bj,fj) is the shortest time it takes to reach floor fi of building bi from floor fj of building bj. Get ready to answer his Q such queries.', ''),
(185, 'Exceptional Handling', 'Q. 85:', 'EXCEPTION HANDLING-Try catch', 'You will be given two integers X AND Y and as input, you have to compute . If X and Y are not 32 bit signed integers or if Y is zero, exception will occur and you have to report it. Read sample Input/Output to know what to report in case of exceptions.', ''),
(186, 'Exceptional Handling', 'Q. 86:', 'ByteIndianGoldCoins', 'In Byteland they have a very strange monetary system.<br>Each Bytelandian gold coin has an integer number written on it. A coin n can be exchanged in a bank into three coins: n/2, n/3 and n/4. But these numbers are all rounded down (the banks have to make a profit).<br>You can also sell Bytelandian coins for American dollars. The exchange rate is 1:1. But you can not buy Bytelandian coins.<br>You have one gold coin. What is the maximum amount of American dollars you can get for it? <br>Input:<br>The input will contain several test cases (not more than 10). Each testcase is a single line with a number n, 0 <= n <= 1 000 000 000. It is the number written on your coin.<br>Output:<br>For each test case output a single line, containing the maximum amount of American dollars you can make.', ''),
(187, 'Exceptional Handling', 'Q. 87:', 'Number Of Factors', 'Alice has learnt factorization recently. Bob doesn\'t think she has learnt it properly and hence he has decided to quiz her. Bob gives Alice a very large number and asks her to find out the number of factors of that number. To make it a little easier for her, he represents the number as a product of N numbers. Alice is frightened of big numbers and hence is asking you for help. Your task is simple. Given N numbers, you need to tell the number of distinct factors of the product of these N numbers.', ''),
(188, 'Exceptional Handling', 'Q. 88:', 'Pruning Trees', 'You have a tree (an acyclic, connected graph) with edge weights, but it is far too big. You are to prune the tree by deleting some edges so that the following property holds. For each connected component C of the pruned tree, there is some node rC such that for every node v in C, the total weight of the edges on the path between v and rC is at most some given value d.<br>You happen to like heavy trees so you want to delete the minimum possible total edge weight to satisfy this property.', ''),
(189, 'Exceptional Handling', 'Q. 89:', 'Misha and Gym', 'When Misha hits his favorite gym, he comes across an interesting problem with the barbell. In the gym, someone always leaves the weight plates in the strangest places you can imagine and sometime it\'s difficult to equip the barbell the way you want. Let\'s imagine that you have N weight plates placed in any order (remember that any gym has no more than K different types of weight plates and all weights are square-free). As a preliminary step towards solving this problem, Misha wants to simulate a simple gym, and for this purpose you have to deal with some queries:<br>[1 I X] Set the weight of the ith weight plate to value X.<br>[2 L R] Reverse the sequence of weight plates in the interval from L to R, where 1  L  R  N.<br>[3 L R W] Check the interval from L to R to find out if you can make the weight W using only weight plates on this interval. (Note: this type of query will appear no more than P times)', ''),
(190, 'Exceptional Handling', 'Q. 90:', 'Sereja and two strings', 'Sereja has a string A consisting of n lower case English letters.<br>Sereja calls two strings X and Y each of length n similar if they can be made equal by applying the following operation at most once in each of them.<br>Chose any two position i, j in the string (i can be equal to j too). Swap the characters at position i with character at position j.<br>For example strings \"abcd\" and \"acbd\" are similar, strings \"ab\" and \"ab\" are similar, but strings \"abcde\" and \"bcdea\" are not similar. Note that strings \"abc\" and \"cab\" are also similar, as you can swap \'a\' and \'c\' in the first string to get \"cba\" and \'a\' and \'b\' in the second string to get \"cba\".<br>Now Sereja is interested in finding number of ordered pairs of non similar strings X and Y such that they can be constructed from a given string A by permutation of its characters. As answer could be large, please output your answer modulo (109 + 7).', ''),
(191, 'Generics and Collections', 'Q. 91:', 'MapAB3', 'Modify and return the given map as follows: if exactly one of the keys \"a\" or \"b\" has a value in the map (but not both), set the other to have that same value in the map.', ''),
(192, 'Generics and Collections', 'Q. 92:', 'Countries and cities', 'Given a list of countries and cities of each country. Then given the names of the cities. For each city specify the country in which it is located.', ''),
(193, 'Generics and Collections', 'Q. 93:', 'Smallest and Largest SubString', 'We define the following terms:<br>-> Lexicographical Order, also known as alphabetic or dictionary order, orders characters as follows: <br>A < B < ... < Y < Z < a < b < ..... < y < z<br>For example, ball < cat, dog < dorm, Happy < happy, Zoo < ball.<br>-> A substring of a string is a contiguous block of characters in the string. For example, the substrings of abc are a, b, c, ab, bc, and abc.<br>Given a string s ,k , and an integer, , complete the function so that it finds the lexicographically smallest and largest substrings of length k.<br>Input Format<br>The first line contains a string denoting s. <br>The second line contains an integer denoting k.<br>Constraints<br>->  1 <= s <= 1000<br>->  s consists of English alphabetic letters only (i.e., [a-zA-Z]).<br>Output Format<br>Return the respective lexicographically smallest and largest substrings as a single newline-separated string.<br>Sample Input 0<br>welcometojava<br>3<br>Sample Output 0<br>ava<br>wel<br>Explanation 0<br>String s = \"welcometojava\" has the following lexicographically-ordered substrings of length k=3:<br>[\"ava\",\"com\",\"elc\",\"eto\",\"jav\",\"met\",\"oja\",\"ome\",\"toj\",\"wel\"]<br>We then return the first (lexicographically smallest) substring and the last (lexicographically largest) substring as two newline-separated values (i.e., ava\\nwel).<br>The stub code in the editor then prints ava as our first line of output and wel as our second line of output.', ''),
(194, 'Generics and Collections', 'Q. 94:', 'Enumerate a Vector', 'Enumerate through elements of a Vector using Java Enumeration.', ''),
(195, 'Generics and Collections', 'Q. 95:', 'Most Frequent Word', 'Given the text: the first line contains the number of lines, then given the lines of words. Print the word in the text that occurs most often. If there are many such words, print the one that is less in the alphabetical order.', ''),
(196, 'Generics and Collections', 'Q. 96:', 'Encountered Number', 'Given a sequence of numbers, determine if the next number has already been encountered. For each number, print the word YES (in a separate line) if this number has already been encountered, and print NO, if it has not already been encountered.', ''),
(197, 'Generics and Collections', 'Q. 97:', 'Append all elements of other Collection to Vector', 'Append all elements of other Collection object at the end of Vector object.', ''),
(198, 'Generics and Collections', 'Q. 98:', 'Get lowest and highest key of TreeMap', 'Get the lowest and highest key stored in the java TreeMap object  of java TreeMap class.', ''),
(199, 'Generics and Collections', 'Q. 99:', 'Access rights', 'The virus attacked the filesystem of the supercomputer and broke the control of access rights to the files. For each file there is a known set of operations which may be applied to it:<br>write W,<br>read R,<br>execute X.<br>The first line contains the number N  the number of files contained in the filesystem. The following N lines contain the file names and allowed operations with them, separated by spaces. The next line contains an integer M  the number of operations to the files. In the last M lines specify the operations that are requested for files. One file can be requested many times.<br>You need to recover the control over the access rights to the files. For each request your program should return OK if the requested operation is valid or Access denied if the operation is invalid.', ''),
(200, 'Generics and Collections', 'Q. 100:', 'Insert all elements of other Collection to Specified Index of Vector', 'Insert all elements of other Collection object at specified index of Java Vector object', ''),
(201, 'Input and Output Statemen', 'Q. 1:', 'Possible groups array', 'Given an unsorted integer (positive values only) array of size n, we can form a group of two or three only, the group should be such that the sum of all elements in that group is a multiple of 3. Count all possible number of groups that can be generated in this way.<br>Input: arr[] = {3, 6, 7, 2, 9}<br>Output: 8<br>Groups are {3,6}, {3,9}, {9,6},<br>           {7,2}, {3, 6,9}, <br>           {3, 7, 2}, {7, 2, 6}, <br>           {7, 2, 9}<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N, where N is the size of array.<br>The second line of each test case contains N elements of input array.<br>Output:<br>Print number of all possible group.<br>Constraints:<br>1  T  50<br>1  N  80<br>1  arr[i]  100', ''),
(202, 'Input and Output Statemen', 'Q. 2:', 'Dividing into Regions', 'ChefLand develops very fast. Recently, there were a few new cities built, so the total number of cities in ChefLand have become N. Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>In order not to make this problem I/O related, we will give you the road system in the compressed form. The first and only line of the test case will contain six space-separated integers N, A, B, C, D, E with the following meaning:<br>The road system contains N cities and N-1 roads.<br>The ith road (1-indexed) connects the cities with the numbers i+1 and ((A + B * (i - 1)) % i) + 1 and has the length equal to (C * i + D) % E.<br>It is guaranteed that the road system, generated this way will be connected.<br>Output<br>In order not to make this problem I/O-related, we will ask you the hash function of the answer to each test case.<br>The hash function is calculated this way:<br>First, an 1-indexed sequence Q of 2(N-1) answers is created.<br>The (2*i-1)th term of this sequence is the smallest of the inconvenience values after removing the ith edge.<br>The (2*i)th term of this sequence is the greatest of the inconvenience values after removing the ith edge.<br>Then, the value of the hash function is a sum of Qi * (1000000 + 3)i-1, modulo 109+7.<br>Constraints<br>1  T  105<br>2  N, sum of N  5  106<br>0  A, B, C, D  104<br>2  E  200<br>In order to communicate, the cities are connected with N-1 bidirectional roads in such a way that there is exactly one way to get from one city to another. In other words, the graph with cities as nodes and roads as edges is a tree.<br>Now, the King of ChefLand thinks that the country is too big to be ruled by one person, so he decided to split in two parts, each of which will be ruled by one of two his sons. The split should be made by blocking one road. After doing that, there will be two connected parts which will be ruled by sons.<br>However, not every division is good. In some cases, one of the parts will still be very large, thus, it will be very hard for some of the sons to rule it. So, for every connected part, there\'s a value called inconvenience. The inconvenience of the part equals to the distance between two most distance cities belonging to this part.<br>So for every split, there are two inconvenience values that should be calculated. Please help the King to find them!', ''),
(203, 'Input and Output Statemen', 'Q. 3:', 'The New Restaurant', 'Chef decided to open a new restaurant in the town. The town already has N restaurants, each of which operates in an area of circular shape with its center at xi, yi and radius ri. For any point, there is at most one restaurant operating there.<br>Chef wants to build his restaurant in a strategic place. That\'s why he asks you some questions - find the total area covered by restaurants in the rectangle defined by the points x1, y1, x2, y2 where (x1, y1) is the lower left corner and (x2, y2) is the upper right corner. Chef is not that good in answering these questions, so he asked you to help him in this.<br>Input<br>There is a single test case.<br>The first line of input contains two integers N, Q, denoting number of restaurants and number of questions Chef asks.<br>Each of the next N lines contains three space separated integers x, y, r denoting x and y coordinate of center, and the radius of the restaurant, respectively.<br>Each of the next Q lines contains four space separated integers x1, y1, x2, y2 denoting a question as defined in the statement.<br>Output<br>Output Q lines, the i-th line contains the total area covered by restaurants in the rectangle defined by the i-th query. The answer will be considered correct if its absolute or relative error does not exceed 10-6<br>Constraints<br>1  N  50 000<br>1  Q  100 000<br>0  xi, yi  50 000<br>1  ri  50<br>0  xi1 < xi2  50 000<br>0  yi1 < yi2  50 000<br>No two circles touch or intersect each other.', ''),
(204, 'Input and Output Statemen', 'Q. 4:', 'Wifi Password Generation', 'Wifi Password Generation:<br>wifiPinGeneration<br>You need to generate wifi pin password based on the following algorithm. The input1 must be a 3 digit number.<br>Step1 :<br>Calculate the digit sum of the input1. If it is odd number, make it as a even number by subtracting -1. <br>Step2:<br>Fetch the character in the table to the corresponding last digit from input1. For example, if the given number is 210,get the 0th character of the table.<br>Step3:<br>Get the string from input2 except last character.If the String is KUMAR, then get the string as KUMA<br>Step4:<br>Take the value of the10th digit position of  the character from the input1.Refer the following example.<br>Step5:<br>Userid = Step1+Step2+step3+step4.<br>Note:<br>If the input condition does not matches print 0000 as output.<br>1 !<br>2 @<br>3 #<br>4 $<br>5 %<br>6 ^<br>7 &<br>8 *<br>9 (<br>0 )<br>EXAMPLE 1<br>INPUT 1  210 <br>INPUT 2 KUMAR<br>OUTPUT  2)KUMA1', ''),
(205, 'Input and Output Statemen', 'Q. 5:', 'Zombie World', 'One day Bob is playing Zombie World video game. In Zombie World game each round will contain N zombie\'s and each zombie\'s energy is Zi (where 1<=i<=N). Bob will start the round with B energy. In order to move to the next level Bob need to kill all the N zombie\'s but Bob can select any one among N Zombie\'s. If energy of Bob (B) is less than Zombie energy (Zi) then Bob will die and lose the round else Bob will won, during the fighting with zombie, Bob will lose his energy by (Zi%2)+(Zi/2). At any point of game Bob will play optimally. Now your task is to find out whether Bob can reach to the next level or not. Input Format:<br>First line will contains B and N, separated by space, where B is the energy of Bob and N is the number of Zombie. Next line will contain N spaced integers each will represent the energy of zombie.<br>Line 1 <br>B N, where B is the energy of Bob and N is the number of Zombie<br>Line 2 <br>Zi, where Zi is a list containing energy of zombies separated by space<br>Constraints:<br>1<=N<=10^4<br>1<=B<=10^9<br>1<=Zi<=10^5<br>Note:<br>for this problem all the divisions are integer divisions.<br>Output Format:<br>Print \"YES\" or \"NO\" depending upon whether Bob can reach the next level or not', ''),
(206, 'Input and Output Statemen', 'Q. 6:', 'Chef And A Complete Graph', 'Chef loves to play with graphs. Today, Chef has a complete graph G consisting of N vertices and he is eager to count the number of non-empty subsets of the edge set of G such that the removal of any chosen subset separates the graph into exactly K connected components. Chef is unable to solve this task on his own and has, therefore, requested your assistance. Please help him.', ''),
(207, 'Input and Output Statemen', 'Q. 7:', 'Number of occurrence', 'Given a sorted array C[] and a number X, write a function that counts the occurrences of X in C[].<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N and X, N is the size of array.<br>The second line of each test case contains N input C[i].<br>Output:<br>Print the counts the occurrence of X, if zero then print -1.<br>Constraints:<br>1  T  100<br>1  N  300<br>1  C[i]  500', ''),
(208, 'Input and Output Statemen', 'Q. 8:', 'Repeated sum of digit', 'Given an integer N, recursively sum digits of N until we get a single digit.  The process can be described below<br>If N < 10    <br>    digSum(N) = N<br>Else         <br>    digSum(N) = Sum(digSum(N))<br>Example:<br>Input : 1234<br>Output : 1<br>Explanation : The sum of 1+2+3+4 = 10, <br>              digSum(x) == 10<br>              Hence ans will be 1+0 = 1<br>Input:<br>The first line contains an integer T, total number of test cases. Then following T lines contains an integer N.<br>Output:<br>Repeated sum of digits of N.<br>Constraints:<br>1  T  100<br>1  N  1000000', ''),
(209, 'Input and Output Statemen', 'Q. 9:', 'Quick Sort', 'The task is to complete partition() function which is used to implement Quick Sort.<br>Input:<br>First line of the input denotes number of test cases \'T\'. First line of the test case is the size of array and second line consists of array elements.<br>Output:<br>Sorted array in increasing order is displayed to the user.<br>Constraints:<br>1 <=T<= 50<br>1 <=N<= 1000<br>1 <=arr[i]<= 1000', ''),
(210, 'Input and Output Statemen', 'Q. 10:', 'SMALLEST PAIR', 'You are given a sequence a1, a2, ..., aN. Find the smallest possible value of ai + aj, where 1  i < j  N.', ''),
(211, 'Data types and Operators', 'Q. 11:', 'Integer Sequences', 'For a fixed integer n, let x1, x2, ..., x2n be a sequence that contains each of the 2n different n bit integers exactly once. To be precise, we say an integer is an n bit integer if it can be expressed in binary with exactly n bits (with, perhaps, some leading zeros). We say the sequence is gradual if two consecutive numbers differ in exactly one bit when written in binary and the first and last numbers also differ in exactly one bit in their binary representations.<br>Your job is to generate such a sequence. This is normally a fairly standard exercise, but there is one extra constraint. For some reason, there are two particular n bit numbers a and b such that it is illegal to have a and b appear consecutively (in either order) in the sequence and it is illegal to have one of a or b at the start of the sequence and the other at the end.<br>For example, if n = 2, a = 1, and b = 3 then the sequence 0, 2, 3, 1 is not allowed since a and b are consecutive. The sequence 1, 0, 2, 3 is also not allowed since a is at the beginning and b is at the end. Finally, the sequence 0, 1, 2, 3 is also not allowed since two bits change when going from 1 to 2 and when going from 3 to 0.<br>Input<br>The first line contains a single positive integer t  30 denoting the number of test cases to follow. Each test case consists of three numbers n, a, b. Here, n is the number of bits (between 1 and 15, inclusive) and a and b are distinct integers between 0 and 2n-1 (inclusive).<br>Output<br>The output for each test case is a single line consisting of a sequence of 2n integers. This should be such that the sequence is gradual according to the above description and contains all n bit integers. Furthermore, numbers a and b should not appear consecutively (in either order) nor does the start of the sequence contain one of a or b and the end contain the other. If there are many such sequences then any will do. On the other hand, if there is no such sequence then simply print a single line containing -1.', ''),
(212, 'Data types and Operators', 'Q. 12:', 'New Restaurant', 'Chef Dengklek will open a new restaurant in the city. The restaurant will be open for N days. He can cook M different types of dish. He would like to cook a single dish every day, such that for the entire N days, he only cook at most K distinct types of dishes.<br>In how many ways can he do that?<br>Input<br>The first line contains a single integer T, the number of test cases. T test cases follow. Each test case consists of a single line consisting of three integers N, M, K.<br>Output<br>For each test case, output a single line consisting the number of different ways he can cook for the entire N days, modulo 1000000007.<br>Constraints<br>1  T  100<br>1  N  1000<br>1  M  1000000<br>1  K  1000', ''),
(213, 'Data types and Operators', 'Q. 13:', 'Coffee Breaks', 'Sergey works as a programmer. Like all programmers, he is a coffee fan. He likes coffee so much that has K cups of coffee daily. However, having more than K cups doesn\'t suit him, because the excess caffeine won\'t allow him to sleep at night.<br>Sergey\'s working day is divided into N periods. For every period, he knows how many kilobytes of code he can produce.<br>During each of the periods, Sergey can either have or not to have one cup of coffee. If he is having a cup of coffee in some period, the amount of code he writes in this period drops to zero. But he also gets a productivity boost  if he decides to skip coffee during a period and the last cup of coffee he had was no more than D periods ago, the amount of code he writes during such a period is M times the usual.<br>As his productivity advisor (congrats on your new job!), help Sergey plan his coffee breaks optimally. Please find the maximum number of lines of code he can write, provided that he has exactly K coffee breaks during the day.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line of each test case contains four space separated integers N, K, D and M denoting the number of the working periods, the number of coffee-breaks and two more parameters as described in the statement.<br>The second line contains N space-separated integers A1, A2, ... , AN denoting the number of kilobytes of code that Sergey writes during each period.<br>Output<br>For each test case, output a single line containing the maximum number of kilobytes of code that Sergey can produce if he takes exactly K coffee breaks.<br>Constraints<br>1  T  200<br>In subtasks 1-3 it holds that 1  sum of all N over the test case  1000<br>Subtask 1 (15 points): K = 1, 1  D < N  18<br>Subtask 2 (25 points): 1  K, D < N  18<br>Subtask 3 (30 points): 1  K, D < N  200<br>Subtask 4 (30 points): 1  K, D < N  5000, 1  sum of all N over the test case  5000<br>1  M, Ai  1000', ''),
(214, 'Data types and Operators', 'Q. 14:', 'The powerful sum', 'Let us calculate the sum of k-th powers of natural numbers from 1 to n. As the result can be quite large, output the result modulo some integer p.<br>Input<br>First t<=10 - the number of test cases. Each test case consist of numbers: 1<=n<=1000000000, 1<=k<=100, 1<=p<=1000000000.<br>Output<br>For each test case, output the value: (1k+2k+...+nk) mod p.', ''),
(215, 'Data types and Operators', 'Q. 15:', 'Sereja and Stones', 'Sereja has N boxes and M stones. There is a parameter energy associated with each empty box, denoted by Ei. He wants to move each stone into some box. After moving all the stones into the boxes, he wants to compute the total energy of box/stone system. For that he believes that a contribution of box into energy of the system can be computed as follows. If box i contains s stones and there are total k boxes out there containing more than s stones, then contribution of box i into the system of energy will be given by Ei  k.<br>Sereja wants the box/stone system to be most stable, i.e. it should have least possible energy. Find out minimum possible energy of this system.<br>Input<br>First line of the input contains an integer T denoting the number of test cases. T tests follow.<br>First line of each test case contains two space separated integers N and M.<br>Next line contains N space separated integers denoting the array E.<br>Output<br>For each test case output a single integer corresponding to the answer of the problem.<br>Constraints<br>1  T  7<br>7  N, M  77777', ''),
(216, 'Data types and Operators', 'Q. 16:', 'Xortest Path', 'Chef was practicing with some graph theory problems in CodeChef. He was trying to solve a problem involving finding the shortest path in a weighted, undirected graph. He thought it was quite standard, so he coded the solution and submitted it. Unfortunately it was judged Wrong Answer.<br>Wanting to debug, Chef downloaded Peter Xor\'s accepted solution. He also made a test case, illustrated by the following image:<br>Now, what is the cost of the shortest path from 1 to 5? Chef thought that the answer should be 36 + 16 + 18 = 70, because the other candidate path has a higher total cost of 36 + 50 + 11 + 18 = 115. But he was surprised when Peter Xor\'s accepted solution outputted 15! Chef was confused because he can\'t see any path with a total cost of 15.<br>After rereading the problem, Chef found his mistake. The problem\'s title was actually Xortest path, not Shortest path, so the problem was actually asking for the path between two given nodes with the least possible XOR! So in the example above, the answer is indeed 15, because the path 1  2  3  4  5 has an XOR cost of 36  50  11  18 = 15, and no other path has a lower XOR cost than this. In other words, this is the xortest path.<br>Now that Chef knows his mistake, he still has a problem; he doesn\'t know how to answer this problem! Your task as his sous-chef is to answer this problem for him. Specifically, you have to answer Q queries, where each query is a pair of nodes, and the answer is the weight of the xortest path between them.<br>Note that in this problem, a path may pass through an edge or node any number of times. (Some authors would call such a path a walk.) For instance, in the example above, the path 1  2  4  3  2  4  5 is also a xortest path, because its XOR cost is 36  16  11  50  16  18 = 15.<br>Input<br>The first line of input contains three integers, N, E and Q. Nodes are labelled 1 to N.<br>The following E lines describe the edges. The ith line contains three integers ai, bi and ci, which means that there is an undirected edge between nodes ai and bi with weight ci.<br>The following Q lines describe the queries. The jth line contains two integers xj and yj, which means that you need to find the xortest path between nodes xj and yj.<br>Output<br>Output Q lines, one for each query. The jth line must contain a single integer, the weight of the xortest path between xj and yj. If there does not exist a path between these nodes, output XIT (without quotes) instead.<br>Constraints<br>1  N, E, Q  105<br>1  ai, bi, xj, yj  N<br>0  ci  109<br>Parallel edges or self-loops may appear.', ''),
(217, 'Data types and Operators', 'Q. 17:', 'Weapons', 'There are N fighter aircrafts guarding the sky. Each aircraft flies at a constant altitude and at a constant velocity (vx,vy). In other words, every hour it travels vx km in the X direction and vy km in the Y direction (vx and vy can be negative as well).<br>But there has been a major problem. The weapons systems in all the aircrafts have been disabled by an unknown virus. So they are essentially useless! If they return to base camp, the enemy will realize something is wrong and may attack. To avoid this scenario, it is decided that a system expert will leave in a small fast plane and visit each fighter aircraft. The expert will hover his small aircraft exactly over the fighter plane he wants to repair, send the program (fix) to the pilot (via Bluetooth) and then give instructions to the fighter pilot to run the program. This whole process takes exactly an hour, once the expert is hovering over the fighter aircraft. After hes done, he moves onto the next fighter aircraft. When he has repaired all aircrafts, he returns back to base camp.<br>Your task is to determine how long it takes for this entire process, assuming the expert leaves base camp at time t = 0<br>You can assume the following:<br>1. The experts plane can fly in any direction with a maximum speed of S (assume acceleration, deceleration and varying altitude to be instantaneous).<br>2. It is guaranteed that S will be greater than the speed of any fighter aircraft.<br>3. Multiple planes may have the same (x, y) co-ordinates, but there are no collisions  because they are flying at different altitudes.<br>Input<br>There are multiple test cases (not more than 500). Each test case starts with a line containing a single integer N (1  N  8, chosen uniformally randomly)  indicating the number of fighter planes (excluding the plane of our expert). The next N lines each consist of 4 space separated integers  the initial co-ordinates (px,py) (at t = 0) and the velocity vector (vx,vy) respectively of the nth fighter aircraft. The last line of the test case consists of 3 space separated integers  the (x,y) co-ordinates of base camp and S  the speed of the experts plane. The end of input is indicated by a case that starts with N = 0 and this last case should not be processed. All co-ordinates / vectors in the input have an absolute value less than or equal to 1000 (S of course, does not fall under the same restriction).<br>Output<br>For each test case, output the minimum time taken for the expert to leave the base camp, visit and fix each fighter aircraft exactly once and return to base camp. The format to print the result is:<br>A h m s<br>Where A is the case number (starting with 1 for the first case and so on) and h, m, s are non negative integers denoting hours, minutes and seconds respectively (they should be separated by single space). Note that m and s are atmost 59. The time should be rounded up to the next second.', ''),
(218, 'Data types and Operators', 'Q. 18:', 'No Unpaired Chefs', 'Codechef has now decided to make an admin panel amongst their chefs. This way they think that it would be easier for them to control and regulate their contests. To do so, they have asked them to rate everyone including themselves by a non-negative integer.<br>There are N chefs, numbered from 1 to N. Each chef has submitted a rating to the Codechef panel for other all the chefs including a rating to himself. Surprisingly for the team, for each pair of chefs (say, chef with the number i and the chef with the number j), they collaborated within themselves and gave the same rating to each other i.e. the rating that the chef i has given to the chef j is equal to the rating that the chef j has given to the chef i. The Codechef team built a rating matrix from this input from Chefs. Now, from this input rating matrix M, they will make a Paired rating matrix P as follows:<br>P is symmetric.<br>Pi, j is either equal to zero, or to Mi, j, where Mi, j is the rating given by ith chef to the jth chef.<br>There exists S > 0, such that each entry in P + P2 + ... + PS is positive.<br>To make things more friendly between the admin panel of Chefs, the sum of values in P is minimum possible.<br>Help the Codechef panel in selecting such a matrix P from M. Please find the minimum possible sum of entries in the matrix P such that P will still satisfy the constraints.<br>Input<br>The first line of the input contains T, number of test cases to follow. Then T test cases follow.<br>Each test case start with a line containing an integer N, the number of chefs in Codechef team.<br>Then N lines follow. Each of them contains N space-separated integers. The jth integer in the ith line is the rating given by chef with the number i to chef with the number j.<br>Output<br>For each test case, print the minimum sum of entries, possible for P. If it is not possible to do, print \"-1\" (without quotes).<br>Constraints<br>1  T  100<br>Constraints on N:<br>Subproblem 1 (30 points): 1  N  5<br>Subproblem 2 (70 points): 1  N  100<br>0  Mi, j  109', ''),
(219, 'Data types and Operators', 'Q. 19:', 'Favourite Numbers', 'Chef likes numbers and number theory, we all know that. There are N digit strings that he particularly likes. He likes them so much that he defines some numbers to be beautiful numbers based on these digit strings.<br>Beautiful numbers are those numbers whose decimal representation contains at least one of chef\'s favorite digit strings as a substring. Your task is to calculate the Kth smallest number amongst the beautiful numbers in the range from L to R (both inclusive). If the number of beautiful numbers between L and R is less than K, then output \"no such number\".<br>Input<br>In the first line of input there will be integers L, R, K and N. Then N lines follow. Each line will contain a single string of decimal digits.<br>Output<br>Output one integer - the solution to the problem described above or a string \"no such number\" if there is no such number.<br>Constraints<br>1<=L<=R<=10^18<br>1<=K<=R-L+1<br>1<=N<=62<br>1<=The length of any Chef\'s favourite digit string<=18. Each string begins with a nonzero digit.', ''),
(220, 'Data types and Operators', 'Q. 20:', 'Odd Binomial Coefficients', 'If P(x) is a polynomial in x with integer coefficients, let W(P(x)) = number of odd coefficients of P(x).<br>Given a1, a2, ... , am, find W( (1+x)a1 + (1+x)a2 + ... + (1+x)am ).<br>Input<br>First line contains TC, the number of test cases.<br>Each test case consists of a single line in the format: <br>m a1 a2 ... am<br>Limits<br>1 <= m <= 15<br>0 <= ai < 260<br>1 <= TC <= 1000<br>Output<br>Output one line per test case, the value W( (1+x)a1 + (1+x)a2 + ... + (1+x)am ).', ''),
(221, 'Control and Looping', 'Q. 21:', 'Permutations of a given string recursion', 'Given a string, print all permutations of a given string.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>Each test case contains a single string in capital letter.<br>Output:<br>Print all permutations of a given string with single space and all permutations should be in lexicographically increasing order.<br>Constraints:<br>1  T  10<br>1  size of string  5', ''),
(222, 'Control and Looping', 'Q. 22:', 'Reverse a String', '\"Given a String of length N reverse the words in it. Words are separated by dots.<br>Input:<br>The first line contains T denoting the number of testcases. Then follows description of testcases. Each case contains a string containing spaces and characters.<br> <br>Output:<br>For each test case, output a single line containing the reversed String.<br>Constraints:<br>1<=T<=10<br>1<=Lenght of String<=2000', '');
INSERT INTO `elabdata` (`id`, `SESSION`, `QUESTION_NO`, `QUESTION_NAME`, `QUESTION_DESC`, `CODE`) VALUES
(223, 'Control and Looping', 'Q. 23:', 'Array of alternate +ve and -ve no.s array', 'Given an unsorted array of positive and negative numbers. Create an array of alternate positive and negative numbers without changing the relative order of positive and negative numbers respectively.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N,N is the size of array.<br>The second line of each test case contains N input a[].<br>Output:<br>Print an array of alternate positive and negative numbers.<br>Note: Solution should start with positive number.<br>Constraints:<br>1  T  30<br>1  N  100<br>-1000  a[]  1000', ''),
(224, 'Control and Looping', 'Q. 24:', 'divided by the sum of its digit', 'Check that the number can be divided by the sum of its digit.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.Then T test cases follow .Each test case consist of an integer N.<br>Output:<br>Print 1 if divisible else 0.<br>Constraints:<br>1  T  100<br>1  N  100000', ''),
(225, 'Control and Looping', 'Q. 25:', 'Rotate Array by n elements', 'Given an array of size n, rotate it by d elements. <br>Input: The first line of the input contains T denoting the number of testcases. First line of test case is the number of elements \'n\' and elements \'d\' to be rotated. Second line of test case will be the array elements.<br>Output: Rotated array is displayed to the user.<br>Constraints:<br>1 <=T<= 50<br>1 <=n<= 100<br>d<=n<br>1 <=arr[i]<= 100', ''),
(226, 'Control and Looping', 'Q. 26:', 'Equilibrium point', 'Given an array A your task is to tell at which position the equilibrium first occurs in the array. Equilibrium position in an array is a position such that the sum of elements below it is equal to the sum of elements after it.<br>Input:<br>The first line of input contains an integer T denoting the no of test cases then T test cases follow. First line of each test case contains an integer N denoting the size of the array. Then in the next line are N space separated values of the array A.<br>Output:<br>For each test case in a new  line print the position at which the elements are at equilibrium if no equilibrium point exists print -1.<br>Constraints:<br>1<=T<=100<br>1<=N<=100', ''),
(227, 'Control and Looping', 'Q. 27:', 'missing number is to be found', 'Given an array of size n-1 and given that there are numbers from 1 to n with one missing, the missing number is to be found.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N,size of array.<br>The second line of each test case contains N-1 input C[i],numbers in array.<br>Output:<br>Print the missing number in array.<br>Constraints:<br>1  T  100<br>1  N  1000<br>1  C[i]  1000', ''),
(228, 'Control and Looping', 'Q. 28:', 'Online Communities - Even Groups', 'In a social network, online communities refer to the group of people with an interest towards the same topic. People connect with each other in a social network. A connection between Person I and Person J is represented as C I J. When two persons belonging to different communities connect, the net effect is merger of both communities which I and J belonged to.<br>We are only interested in finding out the communities with the member count being an even number. Your task is to find out those communities.<br>Input Format:<br>Input will consist of three parts, viz.<br>1. The total number of people on the social network (N)<br>2.Queries <br>C I J, connect I and J<br>Q 0 0, print the number of communities with even member-count<br>-1 will represent end of input.<br>Output Format:<br>For each query Q, output the number of communities with even member-count<br>Constraints:<br>1<=N<=10^6<br>1<=I, J<=N', ''),
(229, 'Control and Looping', 'Q. 29:', 'decimal into a binary number using stack', 'TO Convert a decimal into a binary number using stack.', ''),
(230, 'Control and Looping', 'Q. 30:', 'Maximum product of two numbers array', 'Given an array with all elements greater than or equal to zero.Return the maximum product of two numbers possible.<br>Input:<br>The first line of input contains an integer T denoting the number of test cases.<br>The first line of each test case is N, N is size of array.<br>The second line of each test case contains N input A[i].<br>Output:<br>Print the maximum product of two numbers possible.<br>Constraints:<br>1  T  20<br>1  N  50<br>0  A[i]  1000', ''),
(231, 'Arrays', 'Q. 31:', 'STRING ARRAY', 'Java String Array Contains Example', ''),
(232, 'Arrays', 'Q. 32:', 'ARRAY ENCODING', 'Simple Encoded Array:Maya has stored few confidential numbers in an array (array of int). To ensure that others do not find the numbers easily, she has applied a simple encoding. <br>Encoding used: Each array element has been substituted with a value that is the sum of its original value and its succeeding elements value.<br>i.e. arr[i] = arr[i] + arr[i+1]<br>e.g. value in arr[0] = original value of arr[0] + original value of arr[1]<br>Also note that value of last element i.e. arr[last index] remains unchanged.<br>Example:<br>If the original array is  <br>{2, 5, 1, 7, 9, 3}<br>The encoded array would be <br>{7, 6, 8, 16, 12, 3}<br>Provided the encoded array, you are expected to find the <br>a) First number (value in index 0) in the original array<br>b) Sum of all numbers in the original array<br>Assumption(s):<br>- The array elements can be positive and/or negative numbers<br>Example 1:<br>Original array = {2, 5, 1, 7, 9, 3}<br>Encoded array = {7, 6, 8, 16, 12, 3}<br>First number in original array = 2<br>Sum of all numbers in original array = 27<br>NOTE: Only the Encoded array will be supplied to the function and it is expected to do the processing to find the expected result values.', ''),
(233, 'Arrays', 'Q. 33:', 'Equations', 'Find the number of positive integral solutions for the equations<br>1/x + 1/y = 1/N!<br>Input Format <br>An integer N <br>Output Format <br>The number of positive integral solutions for the above equation modulo 1000007<br>Constraints <br>1<=N<=106', ''),
(234, 'Arrays', 'Q. 34:', 'MATRIX', 'Write a program for Matrix (Two Dimensional Array) Creation in Java', ''),
(235, 'Arrays', 'Q. 35:', 'Number Sequence', 'A sequence is said to be progressive if it doesnt decrease at any point in time. For example 1 1 2 2 is a progressive sequence but 1 2 1 is not a progressive sequence. Let S be the sequence and be represented by L spaced integers Ki, now your task is to find out the first longest progressive sequence present in the given sequence (S). Input Format: First line will contain T, the length of the sequence and next line will contain T spaced integers Ki (where i = 0,1, ,L). Line 1 T,where T is the length of the sequence Line 2 Ki,where Ki is integer in sequence separated by space Constraints: 1<=T<=10^6(one million) 1<=Ki<=10^9(one billion) Output Format: Line 1 longest progressive sequence present in the given sequence.', ''),
(236, 'Arrays', 'Q. 36:', 'STRING ARRAY', 'Java String Array To List', ''),
(237, 'Arrays', 'Q. 37:', 'ARRAY ENCODING', 'Simple Encoded Array:Maya has stored few confidential numbers in an array (array of int). To ensure that others do not find the numbers easily, she has applied a simple encoding. <br>Encoding used: Each array element has been substituted with a value that is the sum of its original value and its succeeding elements value.<br>i.e. arr[i] = arr[i] - arr[i+1]<br>e.g. value in arr[0] = original value of arr[0] - original value of arr[1]<br>Also note that value of last element i.e. arr[last index] remains unchanged.<br>Example:<br>If the original array is  <br>{2, 5, 1, 7, 9, 3}<br>The encoded array would be <br>{-3, 4, -6, -2, 6, 3}<br>Provided the encoded array, you are expected to find the <br>i) First number (value in index 0) in the original array<br>j) Sum of all numbers in the encoded array<br>Assumption(s):<br>- The array elements can be positive and/or negative numbers<br>Example 1:<br>Original array = {2, 5, 1, 7, 9, 3}<br>Encoded array = {-3,4,-6,-2,6, 3}<br>First number in original array = 2<br>Sum of all numbers in encoded array = 27<br>NOTE: Only the Encoded array will be supplied to the function and it is expected to do the processing to find the expected result values.', ''),
(238, 'Arrays', 'Q. 38:', 'LEAST FREQUENT DIGIT', 'Least Frequent Digit-You need to find which digit occurs least number of times across the four given input numbers.<br>The prototype of the function is:<br>public static void LeastFrequentDigit(int input1,int input2,int input3,int input4);<br>where,<br>input1, input2, input3and input4 are the four given input numbers.<br>The function is expected to find the least frequent digit and place the result in the class variable output1.<br>Example1-<br>If input1=123, input2=234, input3=345, input4=453<br>We see that across these four numbers,<br>1 occurs once<br>2 and 5 occurs twice<br>4 occurs thrice and<br>3 occurs four times<br>Therefore 1 is the least frequent digit and hence output1=1<br>NOTE-If more than a digit occurs the same number of least times, then the lowest(minimum) of those digits should be the result. Below example illustrates this.', ''),
(239, 'Arrays', 'Q. 39:', 'INCREASING SEQUENCE', 'Increasing Sequence: Given an integer array, find the number of increasing sequences in the array and the length of its longest increasing sequence.<br>The prototype of the function is as below:<br>Public static void increasingSeq(int input1,int[] input2);<br>The function takes as input an integer input1 and integer array input2.  <br>Containing input1 as number of integers  and function sets the output1 to the length of the longest increasing sequence in the array.<br>Example1:<br>Input1 = 9<br>Intput2[]={11,3,4,7,8,12,2,3,7}<br>Output1 should be 5<br>Explanation:<br>In the given array input2, the two  increasing sequences are 3,4,7,8,12 and 2,3,7. The first sequence i.e. 3,4,7,8,12 is the longest one containing five items. So, the longest increasing sequence = 5.', ''),
(240, 'Arrays', 'Q. 40:', 'Permuting Two Arrays', 'Consider two -element arrays of integers, A=[a0,a1,...,an-1] and B=[b0,b1,...,bn-1] . You want to permute them into some A` and B`  such that the relation a`i +b`i>=k holds for all i where 0<=i<=n . For example, if A=[0,1] , B[0,2] , and k=1, a valid A`,B`  satisfying our relation would be A1=[1,0]  and B`=[0,2] .<br>You are given q  queries consisting of A,B , and k. For each query, print YES on a new line if some permutations A`, B` exist satisfying the relation above. If no valid permutations exist, print NO instead.<br>Input Format<br>The first line contains an integer,q , denoting the number of queries. The 3q subsequent lines describe each of the q queries in the following format:<br>1. The first line contains two space-separated integers describing the respective values of n (the size of arrays A and B ) and k (the relation variable).<br>2. The second line contains n space-separated integers describing the respective elements of array A .<br>3. The third line contains n space-separated integers describing the respective elements of array B.<br>Constraints<br> 1<=q<=10<br> 1<=n<=1000<br> 1<=k<=109<br> 0<=ai,bi<=109<br>Output Format<br>For each query, print YES on a new line if valid permutations exist; otherwise, print NO.', ''),
(241, 'Classes and Objects', 'Q. 41:', 'LU Decomposition of any Matrix', 'Write a program to Perform LU Decomposition of any Matrix', ''),
(242, 'Classes and Objects', 'Q. 42:', 'The Black and White Knights', 'How many ways are there to place a black and a white knight on an N * M chessboard such that they do not attack each other? The knights have to be placed on different squares. A knight can move two squares horizontally and one square vertically, or two squares vertically and one square horizontally. The knights attack each other if one can reach the other in one move.<br>Input :<br>The first line contains the number of test cases T. Each of the next T lines contains two integers N and M.<br>Output :<br>Output T lines, one for each test case, each containing the required answer for the corresponding test case.', ''),
(243, 'Classes and Objects', 'Q. 43:', 'Sines Sum Queries', 'You are given a sequence of integers A0, A1, ..., AN-1. Initially Ai=i for all i. You need to perform some strange queries with it. Each query has the form \"L R D\" where 0 <= L <= R < N and D is an integer. If D=0 then you need to find the sum of sines of the numbers AL, AL+1, ..., AR that is sin AL + ... + sin AR. Otherwise you need to add D to the numbers AL, AL+1, ..., AR.<br>Input<br>The first line contains two positive integers N and Q. Here, N <= 109 is the length of the initial sequence and Q <= 100000 is the number of queries you need to perform with it. The next Q lines describe queries, one per line. The i\'th such line contains three integers L, R and D. Here 0 <= L <= R < N and -10000 <= D <= 10000.<br>Output<br>The output consists of answers for all queries where D=0. For each such query you must produce a line with the corresponding sines sum. Answers within an absolute error of 10-6 will be accepted.', ''),
(244, 'Classes and Objects', 'Q. 44:', 'Miller Rabin Primality Test', 'Write a Program to Implement Miller Rabin Primality Test Algorithm', ''),
(245, 'Classes and Objects', 'Q. 45:', 'Coppersmith Freivalds Algorithm', 'Write a program to Implement Coppersmith Freivalds Algorithm', ''),
(246, 'Classes and Objects', 'Q. 46:', 'Complex Number Multiplication', 'Write a Program to Perform Complex Number Multiplication', ''),
(247, 'Classes and Objects', 'Q. 47:', 'Encoding of a Message Using Matrix Multiplicatio', 'Write a program to Perform Encoding of a Message Using Matrix Multiplication', ''),
(248, 'Classes and Objects', 'Q. 48:', 'Chef and Cut', 'Chef likes Graphs Theory a lot. Recently he learned about minimum cut. During his assignments, he found a problem which he couldn\'t solve. Can you please help him in solving the problem?<br>You are given an oriented weighted graph G with two chosen nodes s and t. Let\'s order all distinct cuts between s and t cuts between s and t by weight. You have to find the weight of k-th minimum cut. Two cuts (U1, V1) and (U2, V2) are said to be distinct if the U1 != U2 or V1 != V2. In total, there will be total 2^(n-2) such cuts.<br>Input<br>There is a single test case.<br>First line of the input contains three positive integers - N (number nodes of the graph) and M (number of edges) and k<br>Second line of the input contains two integers - s and t<br>Next M lines contain information about edges<br>First two integers of each of the next M lines denoting nodes connected by edge, third integer denoting weight of this edge c.<br>Output<br>Output a single integer in a line - weight of k-th minimum cut of graph G<br>Constraints<br>2  N  77<br>2  M  777<br>2  k  777<br>1  s, t  N<br>1  c  106<br>It is guaranteed that K won\'t exceed number of distinct cuts, i.e. 1  K  2(n-2)<br>Subtasks<br>Subtask 1: N  10. Points - 20<br>Subtask 2: Original constraints. Points - 80', ''),
(249, 'Classes and Objects', 'Q. 49:', 'Optimize Wire Length', 'Write a program to Optimize Wire Length in Electrical Circuit', ''),
(250, 'Classes and Objects', 'Q. 50:', 'Uncle Johny', 'Vlad enjoys listening to music. He lives in Sam\'s Town. A few days ago he had a birthday, so his parents gave him a gift: MP3-player! Vlad was the happiest man in the world! Now he can listen his favorite songs whenever he wants!<br>Vlad built up his own playlist. The playlist consists of N songs, each has a unique positive integer length. Vlad likes all the songs from his playlist, but there is a song, which he likes more than the others. It\'s named \"Uncle Johny\".<br>After creation of the playlist, Vlad decided to sort the songs in increasing order of their lengths. For example, if the lengths of the songs in playlist was {1, 3, 5, 2, 4} after sorting it becomes {1, 2, 3, 4, 5}. Before the sorting, \"Uncle Johny\" was on K-th position (1-indexing is assumed for the playlist) in the playlist.<br>Vlad needs your help! He gives you all the information of his playlist. Your task is to find the position of \"Uncle Johny\" in the sorted playlist.<br>Input<br>The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.<br>The first line of each test case contains one integer N denoting the number of songs in Vlad\'s playlist. The second line contains N space-separated integers A1, A2, ..., AN denoting the lenghts of Vlad\'s songs. The third line contains the only integer K - the position of \"Uncle Johny\" in the initial playlist.<br> <br>Output<br>For each test case, output a single line containing the position of \"Uncle Johny\" in the sorted playlist.', ''),
(251, 'Methods', 'Q. 51:', 'Count digits of Given number', 'Write a java program to Count digits of Given number', ''),
(252, 'Methods', 'Q. 52:', 'Sum digits of Given number', 'Write a java program to Sum digits of Given number', ''),
(253, 'Methods', 'Q. 53:', 'Generate Armstrong numbers upto N', 'Write a java program to Generate Armstrong numbers upto N', ''),
(254, 'Methods', 'Q. 54:', 'Difference between two Factorials', 'Write a java program to find the Difference between two Factorial', ''),
(255, 'Methods', 'Q. 55:', 'Find Factorised number', 'Write a java program to Find Factorised number', ''),
(256, 'Methods', 'Q. 56:', 'Calculate total number of Leap year between two years', 'Write a java program to Calculate total number of Leap year between two years', ''),
(257, 'Methods', 'Q. 57:', 'Selection Sorting', 'Write a java program to implement Selection Sorting', ''),
(258, 'Methods', 'Q. 58:', 'Bubble Sorting', 'Write a java program to implement Bubble Sorting', ''),
(259, 'Methods', 'Q. 59:', 'Insertion Sorting', 'Write a java program to implement Insertion Sorting', ''),
(260, 'Methods', 'Q. 60:', 'Merge Sorting', 'Write a java program to implement Merge Sorting', ''),
(261, 'Strings', 'Q. 61:', 'STRING REVERSING', 'Reversing Words with options: Write a function (method) that takes as input a string (sentence) and generates a new string (modified sentence) by reversing the words in the original string, maintaining the words positions. <br>In addition, the function should be able to control the reversing of the case (uppercase or lowercase) based on a case_option parameter, as follows <br>If case_option = 0, Normal reversal of words<br>i.e. If the original sentence is Wipro TechNologies BangaLore, <br>the new reversed sentence should be orpiW seigoloNhceT eroLagnaB<br>If case_option = 1, Reversal of words with retaining positions Case<br>i.e. If the original sentence is Wipro TechNologies BangaLore, <br>the new reversed sentence should be Orpiw SeigOlonhcet ErolaGnab<br>Note that positions 1, 7, 11, 20 and 25 in the original string are uppercase W, T and B.<br>Similarly positions 1, 7, 11, 20 and 25 in the new string are uppercase O, S, O, E and G.<br>If case_option = 2, Reversal of words including Case<br>i.e. If the original sentence is Wipro Technologies Bangalore, <br>the new reversed sentence should be ORPIw SEIGOLONHCEt EROLAGNAb<br>Note that W, T and B, that were uppercase in original string have become lowercase and all the lowercase letters have become uppercase.<br>The prototype of the function is:<br>public static voidreverseWords_andCase(String sentence, int case_option);<br>The reversed string is expected to be assigned to the member String output1.<br>NOTE:<br>a) Only space character should be treated as the word separator. i.e. Hello World should be treated as two separate words Hello and World. However, Hello,World, Hello;World, Hello-World or Hello/World should be considered as a single word.<br>b) Non-alphabetic characters in the string will not be subjected to case-changes. For example, if case_option=1, and the original sentence is Wipro TechNologies, Bangalore, the new reversed sentence should be Orpiw ,seiGolonhceT Erolagnab. Note that comma has been treated as part of the word Technologies, and because comma had to take the position of uppercase T it remained as a comma and uppercase T took the position of comma. However the words Wipro and Bangalore have changed to Orpiw and Erolagnab.<br>c) Some more examples <br>Input string = I Am alWays 24#7 Busy. <br>With case-option = 0, reversed string will be I mA syaWla 7#42 .ysuB<br>With case-option = 1, reversed string will be I Ma syAwla 7#42 .ysuB<br>With case-option = 2, reversed string will be i Ma SYAwLA 7#42 .YSUb<br>d) Please ensure that no extra (additional) space characters are embedded within the resultant reversed string.', ''),
(262, 'Strings', 'Q. 62:', 'STRING BUFFER CLASS', 'Write a java program to Java StringBuffer delete remove character or clear content', ''),
(263, 'Strings', 'Q. 63:', 'PIN GENERATION', 'The Hyatt Group of hotels have approached you to automate the process of  generating the Wi-Fi pin which will be used by guests during their stay at Hyatt.<br>The wifi pin must be a combination of room number, the guests last name and one special character. The room numbers will always have three digits, i.e. it starts from 100 and can span upto 999.<br>The Wi-Fi pin is always a string of length 4, a combination which is created as per below rules.<br>Rule 1- The units value of the Wi-Fi pin must be same as the hundreds value of the room number.<br>Rule 2- The tens value of the Wi-Fi pin must be same as the first character of the guests last name.<br>Rule 3- The hundred value of the Wi-Fi pin must be the special character equivalent of the units value of the room number. The special character details to be used are as given below-<br>1-  ! , 2-@ ,  3-#, 4-$, 5-%, 6-^, 7-&, 8-*, 9-(, 10-)<br>Rule 4- The thousands value of the Wi-Fi pin must be created performing digitsum on the room number i.e by performing continuous addition of all the digits of the room number till we get a single digit number. If the obtained single digit number is an odd number, then it is used as it is.<br>If the obtained single digit number is an even number, then it is incremented by 1 and it is used.<br>In Rule 4 Zero should be considered as a neutral number(neither even nor odd). So, if sum of all digits results to 1 then the even number 2 must be used.', ''),
(264, 'Strings', 'Q. 64:', 'PIN GENERATION', 'The Hyatt Group of hotels have approached you to automate the process of  generating the Wi-Fi pin which will be used by guests during their stay at Hyatt.<br>The wifi pin must be a combination of room number, the guests last name and one special character. The room numbers will always have three digits, i.e. it starts from 100 and can span upto 999.<br>The Wi-Fi pin is always a string of length 4, a combination which is created as per below rules.<br>Rule 1- The units value of the Wi-Fi pin must be same as the hundreds value of the room number.<br>Rule 2- The tens value of the Wi-Fi pin must be same as the first character of the guests last name.<br>Rule 3- The hundred value of the Wi-Fi pin must be the special character equivalent of the units value of the room number. The special character details to be used are as given below-<br>1-  ! , 2-@ ,  3-#, 4-$, 5-%, 6-^, 7-&, 8-*, 9-(, 10-)<br>Rule 4- The thousands value of the Wi-Fi pin must be created performing digitsum on the room number i.e by performing continuous addition of all the digits of the room number till we get a single digit number. If the obtained single digit number is an even number, then it is used as it is.<br>If the obtained single digit number is an odd number, then it is incremented by 1 and it is used.<br>In Rule 4 Zero should be considered as a neutral number(neither even nor odd). So, if sum of all digits results to 1 then the even number 2 must be used.', ''),
(265, 'Strings', 'Q. 65:', 'STRING', 'Given a string, add the length of each adjacent substring until it is reduced to a single number. <br>Input Format:<br>First line consists of a string<br>Output Format:<br>Result after adding the length of each adjacent substring . Explanation:<br>For  the string A good beginning, the length is calculated as,<br>A=>1<br>Good=>4<br>Beginning=> 9<br>1+4+9=>14<br>1+4=>5', ''),
(266, 'Strings', 'Q. 66:', 'PIN GENERATION', 'The Hyatt Group of hotels have approached you to automate the process of  generating the Wi-Fi pin which will be used by guests during their stay at Hyatt.<br>The wifi pin must be a combination of room number, the guests last name and one special character. The room numbers will always have three digits, i.e. it starts from 100 and can span upto 999.<br>The Wi-Fi pin is always a string of length 4, a combination which is created as per below rules.<br>Rule 1- The units value of the Wi-Fi pin must be same as the tens value of the room number.<br>Rule 2- The tens value of the Wi-Fi pin must be same as the first character of the guests last name.<br>Rule 3- The hundred value of the Wi-Fi pin must be the special character equivalent of the units value of the room number. The special character details to be used are as given below-<br>1- ! , 2-@ ,  3-#, 4-$, 5-%, 6-^, 7-&, 8-*, 9-(, 10-)<br>Rule 4- The thousands value of the Wi-Fi pin must be created performing digitsum on the room number i.e by performing continuous addition of all the digits of the room number till we get a single digit number. If the obtained single digit number is an even number, then it is used as it is.<br>If the obtained single digit number is an odd number, then it is incremented by 1 and it is used.<br>In Rule 4 Zero should be considered as a neutral number(neither even nor odd). So, if sum of all digits results to 1 then the even number 2 must be used.', ''),
(267, 'Strings', 'Q. 67:', 'Super Reduced String', 'Steve has a string, s, consisting of n lowercase English alphabetic letters. In one operation, he can delete any pair of adjacent letters with same value. For example, string \"aabcc\" would become either \"aab\" or \"bcc\" after operation.<br>Steve wants to reduce s as much as possible. To do this, he will repeat the above operation as many times as it can be performed. Help Steve out by finding and printing s\'s non-reducible form!<br>Note: If the final string is empty, print Empty String .<br>Input Format<br>A single string,s .<br>Constraints<br> 1<=n <=100<br>Output Format<br>If the final string is empty, print Empty String; otherwise, print the final non-reducible string.', ''),
(268, 'Strings', 'Q. 68:', 'Smallest distinct window', 'Given a string detect the smallest window length that contains all the distinct characters of the given string even if it contains repeating elements.<br>For eg. A = aabcbcdbca, then the result would be 4 as of the smallest window will be dbca .<br>Another example, in aabcbcdb, the smallest string that contains all the characters is abcbcd.<br>Input:<br>The first line of input contains an integer T denoting the no of test cases. Then T test cases follow. Each test case contains a string S.<br>Output:<br>For each test case in a new line print the length of the smallest such string.<br>Constraints:<br>1<=T<100<br>1<=|S|<=1000', ''),
(269, 'Strings', 'Q. 69:', 'MaxBlocks', 'Given a string, return the length of the largest \"block\" in the string. A block is a run of adjacent chars that are the same.', ''),
(270, 'Strings', 'Q. 70:', 'Ghappy', 'We\'ll say that a lowercase \'g\' in a string is \"happy\" if there is another \'g\' immediately to its left or right. Return true if all the g\'s in the given string are happy.', ''),
(271, 'Inheritance and Interface', 'Q. 71:', 'Area', 'Vasu has a  home and like to find  the area of the same<br> (Hint: Class C1 gets length and breadth as input which is used by class C2 derived from C1.  C2 displays the area of the same)', ''),
(272, 'Inheritance and Interface', 'Q. 72:', 'PERIMETER', 'Vasu has a home, she needs to find the perimeter of the same.  <br>(Hint: Class C1 gets length and breadth as input which is used by class C2 derived from C1. <br> C2 calculates perimeter of the house)', ''),
(273, 'Inheritance and Interface', 'Q. 73:', 'COST OF PAINTING', 'Vasu needs her home painted at cost of Rs. 5 per sq.feet.  She needs to get perimeter value to find the cost of painting the house.<br> (Hint: Class C1 gets length and breadth as input which is used by class C2 derived from C1.  C2 calculates perimeter of the house. C3 derived from c2 displays the cost of painting the house)', ''),
(274, 'Inheritance and Interface', 'Q. 74:', 'SHAPES', 'Vasu needs to find the area of different shapes.  She created a base class which has multiple functions to calculate area for different shapes.  While she created necessary functions like input(), output() to get input to be used by base class and displays the output.<br>(Hint: input(), output() are at same level)', ''),
(275, 'Inheritance and Interface', 'Q. 75:', 'Constructor and Destructor', 'Vasu wants to know how constructor of base class and derived class works.<br>(Constructor should have same name as class name)', ''),
(276, 'Inheritance and Interface', 'Q. 76:', 'Sum of positive numbers', 'Vasu wants to play a game.  Her friend supplies number randomly and summed up.  If a negative number is supplied her friend should get an intimation to supply only positive numbers and a zero to terminate the game.  Finally the summed up value should be displayed.<br>(Hint:  Class test derived from T1 gets value from friend if the value is positive add the value to variable sum in T and if a negative value or zero  is encountered it should be taken care by display() in T2 Class.  T1 and T2 are parent class of test)', ''),
(277, 'Inheritance and Interface', 'Q. 77:', 'Access grant', 'Vasu is been asked to create a program, which gets a value and should get back the number of times she is getting a positive or negative value.<br>(Use of static member variable.  C1 is base class to get value, c2 and c3 are derived from C1 which has necessary statements to increase the counter value and c4 is child class of c2 and c3 with display() )', ''),
(278, 'Inheritance and Interface', 'Q. 78:', 'Multilevel Inheritance', 'student details using Multilevel Inheritance', ''),
(281, 'Exceptional Handling', 'Q. 81:', 'Coloring in Hypercube', 'In an N-dimensional grid the co-ordinates of a cell are denoted as X1, X2, ..., XN. Any cell with negative co-ordinate are colored white. The origin cell (the one with all zero co-ordinates) is colored as black. The color of a cell in (X1, X2, ..., XN) depends on the N cells with co-ordinates (X1-1, X2, ..., XN), (X1, X2-1, ..., XN), ...., (X1, X2, ..., XN-1). The cell is colored white if and only if the number of black colored cells among these N co-ordinates are even, otherwise the cell is colored black.<br>You are given the starting and ending co-ordinate of sub-hypercube. You need to compute how many hyper cells in this sub hypercube are colored black.', ''),
(282, 'Exceptional Handling', 'Q. 82:', 'How To Operate a Robot', 'There is s a square maze consisting of N rows and N columns divided into unit cells. The rows are numbered from the top to the bottom starting from 1, and the columns are numbered from the left to the right also starting from 1.<br>You have a robot which you have to operate. Initially the robot is located in the upper-left corner of the maze (i.e. at the cell (1, 1)). In a single move you can move the robot in any one of four basic directions: left, right, up or down.<br>Some cells of the maze are forbidden. It is known that there are no two forbidden cells that share an edge or a corner. The cell (1, 1) is not forbidden.<br>You have to construct a sequence of moves of the robot satisfying the following conditions.<br>Robot never leaves the maze.<br>Robot never visits a forbidden cell.<br>Robot visits each non-forbidden cell of the maze at least once.<br>You are interested in finding any valid sequence of moves such that there are no more than three consecutive moves that moved the robot in the same direction eg. \'DDDD\' is invalid sequence of moves while \'D\' and \'DDD\' is valid. Also total number of moves should not be more than N * (N + 7). Please find any such sequence.', ''),
(283, 'Exceptional Handling', 'Q. 83:', 'Good galaxy', 'A galaxy is a set of planets with some connections between pairs of planets. Connections between planets are mutual and no planet can be connected with itself. The distance between a pair of planets is the least number of connections that you have to pass through while travelling from the first planet to the second.<br>Now let\'s consider how good galaxies are formed.<br>Initially there is a galaxy that consists of exactly one planet. At any moment, the galaxy grows by first making a copy of itself; then connecting each planet in the first copy to the corresponding planet in the second copy. Thus a galaxy which has P planets and M connections would grow into a new galaxy with 2P planets and 2M+P connections.<br>This diagram shows how the galaxy grows over the first two iterations. Dark grey shows the copy of the galaxy; light grey shows the additional connections.<br>However, galaxies do not continue growing forever. Why? The answer is simple: comets. At any point after the galaxy has started growing, a comet may pass through the galaxy. When it does, it changes the connections between planets by the following rule:<br>Two planets are connected after the comet arrives if and only if the distance between the planets was equal to 2 before the comet arrives.<br>It can be shown that a comet will split a growing galaxy into two disconnected galaxies with identical structures.<br>After a comet has arrived, the galaxy stops growing. Researchers have discovered that each of the two identical galaxies formed by the comet are \'good galaxies\' - fit for living. In fact, galaxies formed in this way are the only good galaxies that exist.<br>This diagram shows the result when a comet arrives after each of the first three iterations. In each one the red and blue colours show the two equivalent good galaxies.<br>Unfortunately, nothing lasts forever. For many reasons, such as a second comet appearing, new planets or connections between them may be created or destroyed, resulting in galaxies with many other structures and causing the galaxy to lose its \'good\' status.<br>You are given a galaxy with N planets and M connections. Your task is to determine whether this galaxy is a good galaxy - ie can be created by a comet passing through a growing galaxy.', ''),
(284, 'Exceptional Handling', 'Q. 84:', 'Chef and The Recursive Algorithm', 'There is a RxC grid where the rows are numbered by integers from 1 to R from top to bottom and columns are numbered by integers from 1 to C from left to right. Two cells of the grid are called adjacent if they share a common side.<br>Chef uses an algorithm which starts at a cell (sr,sc) of the grid and visits the unvisited adjacent cells inside the grid recursively. The order in which the adjacent cells are looked for are: right, down, left and up. Your job is to find out the number of different cells that would be visited when the cell (tr,tc) is found. Given below is the pseudocode of the algorithm:<br>// A 2D boolean array to mark the visited cells<br>Let seen[1...R][1...C] be a 2D array initialized to false<br>// The visit counter to count the number of visited cells so far<br>visitcount = 0 <br>// This function visits the unvisited cells of the grid recursively<br>// R,C are the number of rows and columns of the grid<br>// r,c are the row and column number of the current cell <br>// tr,tc are the row and column number of the target cell <br>VISIT(R, C, r, c, tr, tc)<br>     // Increment the counter for number of visited cells<br>     visitcount = visitcount + 1 <br> <br>     // Marks the cell at r,c as visited<br>     seen[r][c]=true           <br> <br>     // Prints the value of visitcount when the cell(tr,tc) is found<br>     if r==tr and c==tc  <br>     PRINT visitcount<br>     // Check for an unvisited cell inside grid at right<br>     if c+1  C and seen[r][c+1] == false <br>     VISIT(R,C,r,c+1,tr,tc)<br> <br>     // Check for an unvisited cell inside grid at down<br>     if r+1  R and seen[r+1][c] == false <br>      VISIT(R,C,r+1,c,tr,tc)<br> <br>     // Check for an unvisited cell inside grid at left<br>     if c-1  1 and seen[r][c-1] == false <br>      VISIT(R,C,r,c-1,tr,tc)<br> <br>     // Check for an unvisited cell inside grid at up<br>     if r-1  1 and seen[r-1][c] == false <br>      VISIT(R,C,r-1,c,tr,tc)<br>The above algorithm is both time and memory inefficient. Your task is to produce the same output but more efficiently. That is to print the value of visitcount when the cell (tr,tc) is found, if the above algorithm is called with VISIT(R,C,sr,sc,tr,tc).', ''),
(285, 'Exceptional Handling', 'Q. 85:', 'Exponentiation Commutativity', 'For a given prime number p find the number of all pairs (m, n) of positive integers such that 1 <= m, n <= p*(p-1) and p divides nm - mn. Output the result modulo 1000000007.', ''),
(286, 'Exceptional Handling', 'Q. 86:', 'The Bytelandian Union', 'Byteland is a strange country, with many cities, but with a poorly developed road network (in fact, there is exactly one route from each city to any other city, possibly leading through other cities). Until recently, the cities of Byteland were independently governed by proud Mayors, who chose not to integrate too tightly with their neighbours. However, recent opinion polls among Bytelandian computer programmers have shown a number of disturbing trends, including a sudden drop in pizza consumption. Since this had never before happened in Byteland and seemed quite inexplicable, the Mayors sought guidance of the High Council of Wise Men of Byteland. After a long period of deliberation, the Council ruled that the situation was very serious indeed: the economy was in for a long-term depression! Moreover, they claimed that tighter integration was the only way for the Bytelandian cities to survive. Whether they like it or not, the Mayors must now find a way to unite their cities as quickly as possible. However, this is not as easy as it sounds, as there are a number of important constraints which need to be fulfilled:<br>Initially, each city is an independent State. The process of integration is divided into steps.<br>At each step, due to the limited number of diplomatic envoys available, a State can only be involved in a unification process with at most one other state. At each step two States can unite to form a new State, but only if there exists a road directly connecting some two cities of the uniting States.<br>The unification process is considered to be complete when all the cities belong to the same, global State.<br>The Mayors have asked you to arrange a schedule for the diplomatic talks, so that unification can be completed in as few steps as possible. Can you handle this delicate task?a)', ''),
(287, 'Exceptional Handling', 'Q. 87:', 'Blade Master', 'Loda and Maelk are legendary ChefCraft players. They have played so many games that this number doesn\'t fit in a standard 32-bit integer type. Today Loda and Maelk are going to sort the things out and find out who is the greatest ChefCraft player ever. So the great fight is coming. There are a lot of different heroes you may choose to play ChefCraft. Obviously every hero has his pros and cons. Loda perfectly plays Blade Master. His main skill is to make mirror images of himself to spoof the enemy.<br>As every other popular game ChefCraft is played on a rectangular grid which consists of N rows and M columns. Rows of the grid are numbered by integers from 1 to N. So the upper row of the grid has number 1 and the lower row has number N. The same holds for columns. They are numbered by integers from 1 to M such that the most left column has number 1 while the most right column has number M.<br>At the beginning of the game the only Blade Master\'s image stands on some starting cell (Sx, Sy) where 1  Sx  N and 1  Sy  M. Then Loda makes T moves. Maelk knows how the distribution of images on the grid changes after each Loda\'s move. This happens according to the following rules.<br>1. If there is an image standing on the cell (i, j) then the new images appear by the next rules:<br>Let F(i, j) be the total number of images in the \"cross\" of the cell (i, j). The \"cross\" of the cell (i, j) is union of all cells in the i-th row of the grid and in the j-th column of the grid. So N + M  1 cells belongs to the \"cross\".<br>Let X = F(i, j) mod 6, that is X is the remainder of the division of F(i, j) by 6.<br>For every possible value of X we have following values: D1, D2, P1 and P2.<br>D1 and D2 may be equal to one of the 4 values [\'U\', \'R\', \'D\', \'L\'] and mean some two directions. Here \'U\' means up, \'R\' means right, \'D\' means down and \'L\' means left.<br>P1 and P2 are integer numbers.<br>New mirror images will appear at every cell in the direction D1 with the period P1 starting from cell (i, j) and in the direction D2 with the period P2 also starting from the cell (i, j). Of course, no images will appear out of the grid. For example, if D1 = \'U\' and P1 = 2 then images appear at the cells (i  2, j), (i  4, j), (i  6, j), and so on.<br>Loda always use the same values for D1 and D2. Namely,<br>D1 = \'U\', D2 = \'D\' for X = 0,<br>D1 = \'L\', D2 = \'R\' for X = 1,<br>D1 = \'U\', D2 = \'R\' for X = 2,<br>D1 = \'R\', D2 = \'D\' for X = 3,<br>D1 = \'D\', D2 = \'L\' for X = 4,<br>D1 = \'L\', D2 = \'U\' for X = 5.<br>But values P1 and P2 may vary for different games. But once chosen they will be the same for all moves.<br>2. Appearing of new mirror images happens immediately.<br>3. Whenever there is more than one image at the cell they start one on one fights. In each fight two images participate and both die. So if the number of images in the cell was even than all images will disappear in the end, otherwise exactly one image will remain at this cell.<br>Now Maelk wants to choose his hero in order', ''),
(288, 'Exceptional Handling', 'Q. 88:', 'Divisors number divisibility', 'For a given positive integer N find the number of all positive integers X such that N divides X and the number of all positive divisors of X (including 1 and X) is equal to N. If there exist infinitely many such numbers print -1.', ''),
(289, 'Exceptional Handling', 'Q. 89:', 'Buying Candies', 'Emily is coming back from her two-week vacation at the other continent. But when Emily arrived at the airport, she realized that she had got no presents for her K friends! She still had some time before her flight, so she went for a walk around the airport hoping to find something suitable.<br>Soon Emily found a candy store and decided to buy some of her favorite candies for her friends. The store offers N packs of these candies, where pack i contains Ai candies.<br>Another reason Emily decided to buy candies is that she is fond of collecting empty candy packs from various parts of the world. That\'s why she decided to buy exactly M packs and present the friends with the candies and keep the packs for her collection. Emily would also like the total number of candies to be divisible by K so that an equal distribution of candies between friends is possible. Among all possible sets of packs, she would like to buy a set with the smallest possible total number of candies (money is the reason).<br>Your task is to help Emily, of course.', ''),
(290, 'Exceptional Handling', 'Q. 90:', 'Peaceful Calculator', 'In the 1920\'s a mad scientist by the name Exor invented a notation for evaluating complex mathematical expressions. This notation popularly goes by the name \"Zenfix\" notation. In more formal terms, Zenfix expression is an expression which consists of tokens. Each token is either an operation from the list { ! , ^ , / , * , + , - } or an integer.<br>All arithmetic operation here are 32-bit operations. They are defined through auxiliary unary operation 32-bit residue as follows (please read this carefully, some definitions are non-standard):<br>32-bit residue of A is defined as the unique integer X in the range [-231, 231) for which the usual difference of A and X is divisible by 232.<br>32-bit difference A - B is defined as a 32-bit residue of the usual difference of A and B.<br>32-bit sum A + B is defined as a 32-bit residue of the usual sum of A and B.<br>32-bit product A * B is defined as a 32-bit residue of the usual product of A and B.<br>32-bit quotient A / B is defined as the smallest integer C in the range [-231, 231) such that B * C = A (note the B * C here is a 32-bit product of B and C). If no such integer C exists then result of division is undefined, which means that error occurs during the calculation.<br>32-bit power A ^ B is defined as follows. For B > 0 we define A ^ B = A * A * ... * A, where A repeats B times (here * is a 32-bit multiplication). For B = 0 we define A ^ 0 = 1. Finally, for B < 0 we define A ^ B = 1 / (A ^ (-B)), where A ^ (-B) is defined above (-B is the usual negation of B) and / is a 32-bit division operation. If result of division here is undefined it means that error occurs during the calculation.<br>32-bit factorial A! is defined as follows. For A > 0 we define A! = 1 * 2 * 3 * ... * A (here * is a 32-bit multiplication). For A = 0 we define 0! = 1. Finally, for A < 0 we define A! = (-1) * (-2) * (-3) * ... * A (here again * is a 32-bit multiplication and -X for X = 1, 2, 3, ... means usual negation).<br>Each operation has its own priority defined by its index in this list: the smaller the index the higher the priority. Therefore,<br>the most priority operation is factorial (!),<br>the second most priority operation is exponentiation (^),<br>the third most priority operation is division (/),<br>the fourth most priority operation is multiplication (*),<br>the fifth most priority operation is addition (+),<br>and, finally, the less priority operation is subtraction (-).<br>We could abbreviate the list of operations sorted by priority as FEDMAS (the first letter of the title of each operation was chosen).<br>The evaluation of a Zenfix expression goes as follows:<br>If expression contains a factorial sign (!) followed by an integer then we choose the leftmost such occurrence and perform the factorial operation which will be defined below. Namely, we replace the integer that follows the factorial sign by its factorial value and delete the factorial sign from the expression.<br>Otherwise, if there exists an operat', ''),
(291, 'Generics and Collections', 'Q. 91:', 'Parameterised Constructor', 'Parameterised constructor<br>import java.util.*;<br>class TestClass {  <br>    int id;  <br>    String name, college , state, department;  <br> <br>    TestClass(String n, int i, String coll, String sta, String depar){  <br>    id = i;  <br>    name = n; <br>    college = coll; <br>    state = sta; <br>    department = depar; <br>    }  <br>  void display(){<br>    System.out.println(\"ID=\"+id);<br>    System.out.println(\"Name=\"+name);<br>    System.out.println(\"College=\"+college);<br>    System.out.println(\"State=\"+state);<br>    System.out.println(\"Department=\"+department);<br>  }  <br> <br>    public static void main(String args[]){ <br>      Scanner s = new Scanner(System.in);<br>      String name = s.nextLine();<br>      String college = s.nextLine();<br>      String state = s.nextLine();<br>      String department = s.nextLine();<br>      int id = s.nextInt();<br>    TestClass s1=new TestClass(name,id,college,state,department);  <br>    s1.display();  <br>   }  <br>}', '');

-- --------------------------------------------------------

--
-- Table structure for table `elabtestcase`
--

CREATE TABLE `elabtestcase` (
  `dataid` int(100) DEFAULT NULL,
  `TESTCASE_NO` varchar(100) DEFAULT NULL,
  `INPUT` varchar(500) DEFAULT NULL,
  `OUTPUT` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `elabtestcase`
--

INSERT INTO `elabtestcase` (`dataid`, `TESTCASE_NO`, `INPUT`, `OUTPUT`) VALUES
(1, 'TEST CASE 1', 'DSP 45<br>POC 79<br>Maths 99', 'DSP 045<br>POC 079<br>Maths 099'),
(1, 'TEST CASE 2', 'SS 5<br>TOC 79<br>CA 19', 'SS 05<br>TOC 079<br>CA 019'),
(2, 'TEST CASE 1', '563685', 'Duration<br>6 days<br>12 hours<br>34 minutes<br>45 seconds'),
(2, 'TEST CASE 2', '851005', 'Duration<br>9 days<br>20 hours<br>23 minutes<br>25 seconds'),
(3, 'TEST CASE 1', '12345', '15'),
(3, 'TEST CASE 2', '31203', '9'),
(4, 'TEST CASE 1', '12<br>32', 'The point is in the triangle'),
(4, 'TEST CASE 2', '12<br>-21', 'The point is not in the triangle'),
(5, 'TEST CASE 1', '2 3', '5'),
(5, 'TEST CASE 2', '17<br>15', '32'),
(6, 'TEST CASE 1', '20202<br>2.5<br>3', '1515.15'),
(6, 'TEST CASE 2', '501<br>10<br>5', '250.5'),
(7, 'TEST CASE 1', '6<br>12<br>34<br>45', 'The Total Seconds for 6 days 12 hours 34 minutes 45 seconds is 563685'),
(7, 'TEST CASE 2', '9<br>20<br>23<br>25', 'The Total Seconds for 9 days 20 hours 23 minutes 25 seconds is 851005'),
(8, 'TEST CASE 1', '12<br>4', 'Base Width: 12.0<br>Height: 4.0<br>Area of Triangle: 24.0'),
(8, 'TEST CASE 2', '5.5<br>20.2', 'Base Width: 5.5<br>Height: 20.2<br>Area of Triangle: 55.55'),
(9, 'TEST CASE 1', '50000', 'Total Salary= 120000.0'),
(9, 'TEST CASE 2', '4000', 'Total Salary= 9600.0'),
(10, 'TEST CASE 1', '2 2', '4'),
(10, 'TEST CASE 2', '5 3', '8'),
(11, 'TEST CASE 1', '5212', 'Int value 5212<br>Long value 5212<br>Float value 5212.0'),
(11, 'TEST CASE 2', '6723567', 'Int value 6723567<br>Long value 6723567<br>Float value 6723567.0'),
(12, 'TEST CASE 1', '2', '12.57'),
(12, 'TEST CASE 2', '9', '254.47'),
(13, 'TEST CASE 1', '6', 'Perfect number'),
(13, 'TEST CASE 2', '15', 'Not Perfect number'),
(14, 'TEST CASE 1', '3 2', '2 3'),
(14, 'TEST CASE 2', '20 45', '45 20'),
(15, 'TEST CASE 1', '3<br>B<br>b<br>d', 'BattleShip<br>BattleShip<br>Destroyer'),
(15, 'TEST CASE 2', '5<br>c<br>B<br>F<br>d<br>f', 'Cruiser<br>BattleShip<br>Frigate<br>Destroyer<br>Frigate'),
(16, 'TEST CASE 1', 'TTTT', 'AAAA'),
(16, 'TEST CASE 2', 'TAACG', 'ATTGC'),
(17, 'TEST CASE 1', '5<br>10', 'Area=50'),
(17, 'TEST CASE 2', '2<br>10', 'Area=20'),
(18, 'TEST CASE 1', '4<br>abc<br>abcdef<br>aA<br>abAZ<br>aaa<br>a<br>what<br>None', '3<br>2<br>1<br>0'),
(18, 'TEST CASE 2', '3<br>abc<br>abcdfd<br>aA<br>asgdgg<br>a<br>what', '3<br>1<br>1'),
(19, 'TEST CASE 1', '1204', '4'),
(19, 'TEST CASE 2', '523678', '6'),
(20, 'TEST CASE 1', '5<br>2 3 65 1 90', '65'),
(20, 'TEST CASE 2', '7<br>1 5 8 78 23 0 2', '23'),
(21, 'TEST CASE 1', '1<br>5 2 1', '2'),
(21, 'TEST CASE 2', '1<br>7 3 9', '4'),
(22, 'TEST CASE 1', '26', 'No'),
(22, 'TEST CASE 2', '420', 'Yes'),
(23, 'TEST CASE 1', '9 6 2015<br>6 6 2015', '45'),
(23, 'TEST CASE 2', '6 7 2015<br>6 5 2015', '1000'),
(24, 'TEST CASE 1', '25 35 35.5 25.5', '1480.08'),
(24, 'TEST CASE 2', '12 28 13.5 12.3', '1710.55'),
(25, 'TEST CASE 1', '4', '2 4'),
(25, 'TEST CASE 2', '9', '2 4 6 8'),
(26, 'TEST CASE 1', '6', '15'),
(26, 'TEST CASE 2', '10', '945'),
(27, 'TEST CASE 1', '7', '1 2 3 4 5 6 7 <br>1 2 3 4 5 6 <br>1 2 3 4 5 <br>1 2 3 4 <br>1 2 3 <br>1 2 <br>1 <br>1 2 <br>1 2 3 <br>1 2 3 4 <br>1 2 3 4 5 <br>1 2 3 4 5 6 <br>1 2 3 4 5 6 7'),
(27, 'TEST CASE 2', '8', '1 2 3 4 5 6 7 8 <br>1 2 3 4 5 6 7 <br>1 2 3 4 5 6 <br>1 2 3 4 5 <br>1 2 3 4 <br>1 2 3 <br>1 2 <br>1 <br>1 2 <br>1 2 3 <br>1 2 3 4 <br>1 2 3 4 5 <br>1 2 3 4 5 6 <br>1 2 3 4 5 6 7 <br>1 2 3 4 5 6 7 8'),
(28, 'TEST CASE 1', '110', 'Yes'),
(28, 'TEST CASE 2', '73', 'No'),
(29, 'TEST CASE 1', '7', '7 6 5 4 3 2 1 <br>6 5 4 3 2 1 <br>5 4 3 2 1 <br>4 3 2 1 <br>3 2 1 <br>2 1 <br>1'),
(29, 'TEST CASE 2', '8', '8 7 6 5 4 3 2 1 <br>7 6 5 4 3 2 1 <br>6 5 4 3 2 1 <br>5 4 3 2 1 <br>4 3 2 1 <br>3 2 1 <br>2 1 <br>1'),
(30, 'TEST CASE 1', 'SRM UNIVERSITY<br>SRM', 'SRM UNIVERSITY is greater than SRM'),
(30, 'TEST CASE 2', 'SRM<br>SRM UNIVERSITY', 'SRM is less than SRM UNIVERSITY'),
(31, 'TEST CASE 1', '5 5<br>1 2 3 4 5<br>3 4 5 6 7', '3 4 5'),
(31, 'TEST CASE 2', '4 4<br>4 3 6 7<br>6 7 8 9', '6 7'),
(32, 'TEST CASE 1', '1 2<br>2 3', 'Matrices are multipilcable'),
(32, 'TEST CASE 2', '1 2<br>1 2', 'Matrices are not multipilcable'),
(33, 'TEST CASE 1', '5<br>23 67 98 123 56', '23 56 67 98 123'),
(33, 'TEST CASE 2', '6<br>5 4 3 2 1 0', '0 1 2 3 4 5'),
(34, 'TEST CASE 1', '3 6 9 0 5 1 8 4 3 1', '0 1 1 3 3 4 5 6 8 9'),
(34, 'TEST CASE 2', '11 98 34 12 17 52 15 89 23 10', '10 11 12 15 17 23 34 52 89 98'),
(35, 'TEST CASE 1', '100<br>245<br>90<br>897<br>845', '2177'),
(35, 'TEST CASE 2', '20<br>30<br>40<br>50<br>60', '200'),
(36, 'TEST CASE 1', '10 11', '101'),
(36, 'TEST CASE 2', '1011 101', '10000'),
(37, 'TEST CASE 1', '1<br>3 2<br>2 1 6<br>1 5', '3'),
(37, 'TEST CASE 2', '2<br>3 2<br>2 1 6<br>1 5<br>3 2<br>2 1 -6<br>1 -5', '3<br>6'),
(38, 'TEST CASE 1', '4<br>5<br>6<br>7<br>8', '6<br>9<br>12<br>16'),
(38, 'TEST CASE 2', '10 <br>56<br>47 <br>23<br>10<br>3 <br>4 <br>68 <br>100 <br>1000 <br>234', '784<br>552<br>132<br>25<br>2<br>4<br>1156<br>2500<br>250000<br>13689'),
(39, 'TEST CASE 1', '4                                                                                       <br>34 89 100 78', '75'),
(39, 'TEST CASE 2', '5<br>5 4 3 2 1', '3'),
(40, 'TEST CASE 1', '3<br>5', '0 1 2 3 4 <br>5 6 7 8 9 <br>10 11 12 13 14'),
(40, 'TEST CASE 2', '4<br>5', '0 1 2 3 4 <br>5 6 7 8 9 <br>10 11 12 13 14 <br>15 16 17 18 19'),
(41, 'TEST CASE 1', '5<br>1 3 4 5 6', '3'),
(41, 'TEST CASE 2', '10<br>1 2 3 4 5 6 7 8 9 10', '5'),
(42, 'TEST CASE 1', '10<br>1 3 5 5 1 1 2 5 2 4', 'Candidate 1 are: 3<br>Candidate 2 are: 2<br>Candidate 3 are: 1<br>Candidate 4 are: 1<br>Candidate 5 are: 3<br>Disqualified=0'),
(42, 'TEST CASE 2', '15<br>2 2 3 4 5 5 4 3 2 2 6 7 9 11 23', 'Candidate 1 are: 0<br>Candidate 2 are: 4<br>Candidate 3 are: 2<br>Candidate 4 are: 2<br>Candidate 5 are: 2<br>Disqualified=5'),
(43, 'TEST CASE 1', '60<br>70<br>80<br>90<br>100', 'B'),
(43, 'TEST CASE 2', '95<br>92<br>93<br>100<br>100', 'A'),
(44, 'TEST CASE 1', '10000<br>10<br>20<br>55000<br>15<br>10<br> 5', 'Basic Salary is 10000<br>DA amount is 1000.00<br>HRA amount is 2000.00<br>Total Salary is 13000.00<br>Tax to be paid is 650.00<br>Take Home Salary is 12350.00<br>Basic Salary is 55000<br>DA amount is 8250.00<br>HRA amount is 5500.00<br>Total Salary is 68750.00<br>Tax to be paid is 3437.50<br>Take Home Salary is 65312.50'),
(44, 'TEST CASE 2', '15000<br>10<br>15<br>71000<br>20<br>10<br>15', 'Basic Salary is 15000<br>DA amount is 1500.00<br>HRA amount is 2250.00<br>Total Salary is 18750.00<br>Tax to be paid is 937.50<br>Take Home Salary is 17812.50<br>Basic Salary is 71000<br>DA amount is 14200.00<br>HRA amount is 7100.00<br>Total Salary is 92300.00<br>Tax to be paid is 13845.00<br>Take Home Salary is 78455.00'),
(45, 'TEST CASE 1', '5<br>1<br>2<br>3<br>4<br>5', 'Odd :1 3 5 <br>Even :2 4'),
(45, 'TEST CASE 2', '4<br>6<br>9<br>7<br>11', 'Odd :9 7 11 <br>Even :6'),
(46, 'TEST CASE 1', '123<br>666<br>333<br>123', '3'),
(46, 'TEST CASE 2', '12<br>26<br>66<br>22', '2'),
(47, 'TEST CASE 1', '4<br>2 8 7 5', '2<br>7<br>5'),
(47, 'TEST CASE 2', '18<br>2 3 5 7 11 13 17 19 23 29 31 37 41 24 56 78 14 20', '2<br>3<br>5<br>7<br>11<br>13<br>17<br>19<br>23<br>29<br>31<br>37<br>41'),
(48, 'TEST CASE 1', '34<br>56<br>54', 'Length : 34<br>Width : 56<br>Rate Per SqFt : 54<br>Cost of the Building : 102816<br>Suitability : Not Suitable'),
(48, 'TEST CASE 2', '400<br>395<br>1000', 'Length : 400<br>Width : 395<br>Rate Per SqFt : 1000<br>Cost of the Building : 158000000<br>Suitability : Suitable'),
(49, 'TEST CASE 1', 'Mahendra Singh Dhoni', 'ardnehaM hgniS inohD'),
(49, 'TEST CASE 2', 'Suresh Raina', 'hseruS aniaR'),
(50, 'TEST CASE 1', '10<br>1 3 5 5 1 1 2 5 2 4', 'Candidate 1 are: 3<br>Candidate 2 are: 2<br>Candidate 3 are: 1<br>Candidate 4 are: 1<br>Candidate 5 are: 3<br>Disqualified=0'),
(50, 'TEST CASE 2', '15<br>2 2 3 4 5 5 4 3 2 2 6 7 9 11 23', 'Candidate 1 are: 0<br>Candidate 2 are: 4<br>Candidate 3 are: 2<br>Candidate 4 are: 2<br>Candidate 5 are: 2<br>Disqualified=5'),
(51, 'TEST CASE 1', '1<br>4 6 12', '3'),
(51, 'TEST CASE 2', '2<br>3 3 10<br>4 2 3', '0<br>1'),
(52, 'TEST CASE 1', '45 90<br>45 90', 'Equal'),
(52, 'TEST CASE 2', '89 76<br>89 67', 'Not Equal'),
(53, 'TEST CASE 1', '78 23 12', '37'),
(53, 'TEST CASE 2', '82 32 24', '46'),
(54, 'TEST CASE 1', 'Bogar', 'g'),
(54, 'TEST CASE 2', 'Siddhar', 'd'),
(55, 'TEST CASE 1', '3<br>6 1 1<br>4 -2 5<br>2 8 7', '-306'),
(55, 'TEST CASE 2', '2<br>1 2<br>3 4', '-2'),
(56, 'TEST CASE 1', '5<br>1 5<br>1 3<br>2 3<br>2 4<br>2 5', '15<br>6<br>21<br>55<br>120'),
(56, 'TEST CASE 2', '4<br>1 2<br>2 2<br>3 2<br>4 2', '3<br>6<br>21<br>231'),
(57, 'TEST CASE 1', '9 10', 'true'),
(57, 'TEST CASE 2', '5 4', 'false'),
(58, 'TEST CASE 1', '5', '1 1 2 3 5'),
(58, 'TEST CASE 2', '10', '1 1 2 3 5 8 13 21 34 55'),
(59, 'TEST CASE 1', '7', 'Amount for Rectangle of length 20.0 and width 35.0 is 100.00<br>Amount for Sphere of radius 15.0 is 403.92<br>Amount for Cylinder of radius 10.0 and height 30.0 is 1346.40'),
(59, 'TEST CASE 2', '5', 'Amount for Rectangle of length 20.0 and width 35.0 is 140.00<br>Amount for Sphere of radius 15.0 is 565.49<br>Amount for Cylinder of radius 10.0 and height 30.0 is 1884.96'),
(60, 'TEST CASE 1', '5', '1 1 2 3 5'),
(60, 'TEST CASE 2', '10', '1 1 2 3 5 8 13 21 34 55'),
(61, 'TEST CASE 1', '34#2a3', '4<br>2'),
(61, 'TEST CASE 2', '988765sh9#', '9<br>5'),
(62, 'TEST CASE 1', 'program count', '2'),
(62, 'TEST CASE 2', 'this is a string', '4'),
(63, 'TEST CASE 1', '5<br>3256<br>76289<br>90087<br>1234<br>5678', '3256<br>76289<br>90087<br>1234<br>5678'),
(64, 'TEST CASE 1', 'catdog', 'true'),
(64, 'TEST CASE 2', 'catcat', 'false'),
(65, 'TEST CASE 1', 'Hello world', '5'),
(65, 'TEST CASE 2', 'eLab', '4'),
(66, 'TEST CASE 1', '2<br>768<br>333', '786<br>-1'),
(66, 'TEST CASE 2', '3<br>11110<br>110<br>2001', '-1<br>-1<br>2010'),
(67, 'TEST CASE 1', 'He is the one', 'one the is He'),
(67, 'TEST CASE 2', 'This is interview question', 'question interview is This'),
(68, 'TEST CASE 1', '4<br>2<br>1 1<br>2<br>0 0<br>3<br>0 1 0<br>2<br>0 1', '0<br>2200<br>2300<br>1200'),
(69, 'TEST CASE 1', '3<br>aabc<br>aaaaa<br>bbbbb', '1c1b2a<br>5a<br>5b'),
(69, 'TEST CASE 2', '10<br>eLab<br>eCurricula<br>eThink<br>eVerify<br>eProfile<br>eWork<br>eCircuit<br>eServices<br>eSkill<br>ePsychometric', '1b1a1L1e<br>1a1l1u1c1i2r1u1C1e<br>1k1n1i1h1T1e<br>1y1f1i1r1e1V1e<br>1e1l1i1f1o1r1P1e<br>1k1r1o1W1e<br>1t1i1u1c1r1i1C1e<br>1s1e1c1i1v1r1e1S1e<br>2l1i1k1S1e<br>1c1i1r1t1e1m1o1h1c1y1s1P1e'),
(70, 'TEST CASE 1', 'hello!23 @', 'Letter=5<br>Digit=2<br>Spaces=1<br>Symbol=2'),
(70, 'TEST CASE 2', 'hello!23@', 'Letter=5<br>Digit=2<br>Spaces=0<br>Symbol=2'),
(71, 'TEST CASE 1', 'Suresh<br>110<br>67<br>87<br>99', 'Name=Suresh<br>Regno=110<br>Mark1=67<br>Mark2=87<br>Mark3=99<br>Total=253'),
(71, 'TEST CASE 2', 'Sekar<br>199<br>90<br>90<br>90', 'Name=Sekar<br>Regno=199<br>Mark1=90<br>Mark2=90<br>Mark3=90<br>Total=270'),
(72, 'TEST CASE 1', 'Suresh<br>110<br>67<br>87<br>99', 'Name=Suresh<br>Regno=110<br>Mark1=67<br>Mark2=87<br>Mark3=99<br>Total=253'),
(72, 'TEST CASE 2', 'Sekar<br>199<br>90<br>90<br>90', 'Name=Sekar<br>Regno=199<br>Mark1=90<br>Mark2=90<br>Mark3=90<br>Total=270'),
(73, 'TEST CASE 1', '5 6', '11'),
(73, 'TEST CASE 2', '25 9', '34'),
(74, 'TEST CASE 1', 'Sameer<br>8<br>4052<br>5000', 'Customer Name=Sameer<br>Customer Id=8<br>Account No=4052<br>Account Balance=5000.0<br>Interest=1800.0'),
(74, 'TEST CASE 2', 'Rakesh<br>18<br>3052<br>15000', 'Customer Name=Rakesh<br>Customer Id=18<br>Account No=3052<br>Account Balance=15000.0<br>Interest=5400.0'),
(75, 'TEST CASE 1', '10<br>20', 'Area=200'),
(75, 'TEST CASE 2', '40<br>50', 'Area=2000'),
(76, 'TEST CASE 1', 'Ramesh<br>25000<br>1200', 'Name of Employee=Ramesh<br>Basic Salary of Employee=25000.0<br>HRA of Employee=1200.0<br>TA of Employee=800.0<br>DA of Employee=1500.0<br>Gross Salary of Employee=28500.0'),
(76, 'TEST CASE 2', 'Krishna<br>125000<br>12000', 'Name of Employee=Krishna<br>Basic Salary of Employee=125000.0<br>HRA of Employee=12000.0<br>TA of Employee=800.0<br>DA of Employee=1500.0<br>Gross Salary of Employee=139300.0'),
(78, 'TEST CASE 1', 'Mani<br>22<br>67<br>34<br>34<br>54<br>98', 'Name of Student=Mani<br>Roll No of Student=22<br>Marks of Subject 1=67<br>Marks of Subject 2=34<br>Marks of Subject 3=34<br>Marks of Subject 4=54<br>Marks of Subject 5=98<br>Total=287'),
(78, 'TEST CASE 2', 'Bogar<br>9811<br>99<br>97<br>22<br>45<br>77', 'Name of Student=Bogar<br>Roll No of Student=9811<br>Marks of Subject 1=99<br>Marks of Subject 2=97<br>Marks of Subject 3=22<br>Marks of Subject 4=45<br>Marks of Subject 5=77<br>Total=340'),
(80, 'TEST CASE 1', '5 6', '11'),
(80, 'TEST CASE 2', '25 9', '34'),
(81, 'TEST CASE 1', '5<br>50 20 30 60 45', '41.0'),
(81, 'TEST CASE 2', '7<br>22 199 43 11 49 68 100', 'java.lang.IllegalArgumentException'),
(82, 'TEST CASE 1', '1111', '15'),
(82, 'TEST CASE 2', '112411', 'BinaryFormatException: Number is not Binary'),
(83, 'TEST CASE 1', '198.345', 'Valid Number'),
(83, 'TEST CASE 2', '83.23484', 'Valid Number'),
(84, 'TEST CASE 1', '5<br>22 33 44 55 66', '44.0'),
(84, 'TEST CASE 2', '10<br>98 25 87 87 87 56 47 87 55 -66', 'InvalidTestScore: Invalid Test Score'),
(85, 'TEST CASE 1', '4 5 +', '9'),
(85, 'TEST CASE 2', '9 19 -', '-10'),
(86, 'TEST CASE 1', 'Mahendra Singh Dhoni<br>16', 'h'),
(86, 'TEST CASE 2', 'Engineering<br>13', 'java.lang.StringIndexOutOfBoundsException: String index out of range: 13'),
(87, 'TEST CASE 1', 'Chennai', 'Chennai'),
(87, 'TEST CASE 2', 'Mahabalipuram', 'Mahabalipuram'),
(88, 'TEST CASE 1', '48 27', '75'),
(88, 'TEST CASE 2', '69 11', '80'),
(89, 'TEST CASE 1', '28', 'Input is valid'),
(89, 'TEST CASE 2', '25', 'Input is valid'),
(90, 'TEST CASE 1', 'AB', '171'),
(90, 'TEST CASE 2', '77', '119'),
(91, 'TEST CASE 1', 'salt tea soda toast', 's saltsoda<br>t teatoast'),
(91, 'TEST CASE 2', 'you can see our solution as an alternative', 'a asanalternative<br>c can<br>o our<br>s seesolution<br>y you'),
(92, 'TEST CASE 1', 'Roger<br>Ronaldo<br>Messi<br>Nadal<br>Rohit', 'Before reverse<br>Roger<br>Ronaldo<br>Messi<br>Nadal<br>Rohit<br>After reverse<br>Rohit<br>Nadal<br>Messi<br>Ronaldo<br>Roger'),
(92, 'TEST CASE 2', 'AGSTIYAR<br>NANDI DEVAR<br>THIRUMOOLAR<br>BHOGAR<br>KONKANAVAR', 'Before reverse<br>AGSTIYAR<br>NANDI DEVAR<br>THIRUMOOLAR<br>BHOGAR<br>KONKANAVAR<br>After reverse<br>KONKANAVAR<br>BHOGAR<br>THIRUMOOLAR<br>NANDI DEVAR<br>AGSTIYAR'),
(93, 'TEST CASE 1', 'eResearch<br>eProfile<br>eServices<br>eAdmission<br>eWork', 'eWork<br>eAdmission<br>eServices<br>eProfile<br>eResearch'),
(93, 'TEST CASE 2', 'eLab<br>eCurricula<br>eVerify<br>eThink<br>eCircuit', 'eCircuit<br>eThink<br>eVerify<br>eCurricula<br>eLab'),
(94, 'TEST CASE 1', '6<br>Dhoni<br>Raina<br>Bravo<br>Ashwin<br>Jadeja<br>Faf', 'Dhoni Raina Bravo Ashwin Jadeja Faf'),
(94, 'TEST CASE 2', '8<br>siva<br>ganesh<br>vimal<br>raj<br>harish<br>balaji<br>nirmal<br>nishanth', 'siva ganesh vimal raj harish balaji nirmal nishanth'),
(95, 'TEST CASE 1', '3<br>a aaa<br>b bb<br>c cake', 'a aaa<br>b bb<br>c aaa'),
(95, 'TEST CASE 2', '3<br>a aa<br>b bbb<br>c cake', 'a aa<br>b bbb<br>c bbb'),
(96, 'TEST CASE 1', '1<br>icecream peanuts', 'icecream cherry'),
(96, 'TEST CASE 2', '3<br>bread jam<br>icecream strawberries<br>salad oil', 'bread butter<br>icecream cherry<br>salad oil'),
(97, 'TEST CASE 1', '1<br>icecream cherry', 'icecream cherry<br>yogurt cherry'),
(97, 'TEST CASE 2', '2<br>spinach dirt<br>icecream cherry', 'icecream cherry<br>spinach nuts<br>yogurt cherry'),
(98, 'TEST CASE 1', 'Tamil<br>the<br>Mother<br>of all<br>Languages<br>the', 'ArrayList before removal:<br>Tamil<br>the<br>Mother<br>of all<br>Languages<br>ArrayList after removal : <br>Tamil<br>Mother<br>of all<br>Languages'),
(98, 'TEST CASE 2', '25<br>90<br>20<br>23<br>29<br>20', 'ArrayList before removal:<br>25<br>90<br>20<br>23<br>29<br>ArrayList after removal : <br>25<br>90<br>23<br>29'),
(99, 'TEST CASE 1', 'Tamil<br>the<br>Mother<br>of all<br>Languages<br>the', 'ArrayList<br>Tamil<br>the<br>Mother<br>of all<br>Languages'),
(99, 'TEST CASE 2', '225<br>290<br>220<br>223<br>229', 'ArrayList<br>225<br>290<br>220<br>223<br>229'),
(100, 'TEST CASE 1', '2<br>a Hi<br>b There', 'a Hi<br>ab HiThere<br>b There'),
(100, 'TEST CASE 2', '4<br>a aaa<br>ab nope<br>b bbb<br>c ccc', 'a aaa<br>ab aaabbb<br>b bbb<br>c ccc'),
(101, 'TEST CASE 1', '1<br>89', '1'),
(101, 'TEST CASE 2', '1<br>80', '0'),
(102, 'TEST CASE 1', '1<br>11<br>9 12 23 10 12 12 15 23 14 12 15', '12 23 15'),
(102, 'TEST CASE 2', '1<br>5<br>23 12 23 15 15', '23 15'),
(103, 'TEST CASE 1', '7', '1 <br>1 2 <br>1 2 3 <br>1 2 3 4 <br>1 2 3 4 5 <br>1 2 3 4 5 6 <br>1 2 3 4 5 6 7 <br>1 2 3 4 5 6 <br>1 2 3 4 5 <br>1 2 3 4 <br>1 2 3 <br>1 2 <br>1'),
(103, 'TEST CASE 2', '5', '1 <br>1 2 <br>1 2 3 <br>1 2 3 4 <br>1 2 3 4 5 <br>1 2 3 4 <br>1 2 3 <br>1 2 <br>1'),
(104, 'TEST CASE 1', '1<br>2 Dee<br>2 2', 'Dum'),
(105, 'TEST CASE 1', '2<br>5<br>1 2 3 1 2<br>4<br>1 2 2 3', '2<br>-1'),
(105, 'TEST CASE 2', '2<br>5<br>10 12 15 17 19<br>4<br>115 220 784 551', '-1<br>-1'),
(106, 'TEST CASE 1', 'MKCE KRCE KRCT', 'ECKM ECRK TCRK'),
(106, 'TEST CASE 2', 'SRM UNIVERSITY', 'MRS YTISREVINU'),
(107, 'TEST CASE 1', '12<br>19', 'Addition is:31.00'),
(107, 'TEST CASE 2', '55 44.44', 'Addition is:99.44'),
(108, 'TEST CASE 1', '1<br>Geeksquiz', '433577849'),
(108, 'TEST CASE 2', '1<br>Geeks', '43357'),
(109, 'TEST CASE 1', '1<br>5<br>8 4 4 8 23', '23'),
(109, 'TEST CASE 2', '1<br>4<br>2 2 3 4', '3'),
(110, 'TEST CASE 1', '4<br>><<br>*><*<br>><><<br>*><><><*', '0<br>0<br>1<br>2'),
(110, 'TEST CASE 2', '4<br>><><><><<br>*><>><>*<br>><><><br>*><><*', '3<br>2<br>2<br>1'),
(111, 'TEST CASE 1', '4<br>1<br>1<br>2<br>2 1<br>3<br>3 2 1<br>4<br>1 3 2 4', 'YES<br>YES<br>NO<br>YES'),
(111, 'TEST CASE 2', '3<br>4<br>1 4 9 16<br>3<br>1 2 3<br>6<br>1 3 5 5 3 1', 'YES<br>YES<br>NO'),
(112, 'TEST CASE 1', '5<br>0 5 19 5 0 0<br>17 19 12 16 19 0<br>5 14 6 13 8 7<br>0 4 0 14 3 14<br>0 2 0 14 9 2', '3'),
(112, 'TEST CASE 2', '3<br>0 2 2 4 0 4<br>5 3 5 0 0 0<br>2 4 4 2 0 4', '2'),
(113, 'TEST CASE 1', '2<br>1 10<br>3 5', '2<br>3<br>5<br>7<br>3<br>5'),
(114, 'TEST CASE 1', '1', 'yes'),
(115, 'TEST CASE 1', '4<br>20<br>13<br>8<br>4', '1<br>12<br>2<br>0'),
(115, 'TEST CASE 2', '4<br>24<br>25<br>14<br>9', '2<br>0<br>5<br>0'),
(116, 'TEST CASE 1', '5<br>1 2 3 4 5', '9'),
(117, 'TEST CASE 1', '1204', '4'),
(117, 'TEST CASE 2', '523678', '6'),
(118, 'TEST CASE 1', '2<br>3<br>1<br>2 1<br>1 2 3<br>4 <br>1 <br>1 2 <br>4 1 2<br>2 3 1 1', '5<br>9'),
(119, 'TEST CASE 1', '1<br>10', '3'),
(119, 'TEST CASE 2', '1<br>5', '2'),
(120, 'TEST CASE 1', '2<br>1 4<br>2 3', '10<br>21'),
(121, 'TEST CASE 1', '12/8/1992<br>12/10/1992', '12/08/1992 - Wed<br>13/08/1992 - Thu<br>14/08/1992 - Fri<br>15/08/1992 - Sat<br>16/08/1992 - Sun<br>17/08/1992 - Mon<br>18/08/1992 - Tue<br>19/08/1992 - Wed<br>20/08/1992 - Thu<br>21/08/1992 - Fri<br>22/08/1992 - Sat<br>23/08/1992 - Sun<br>24/08/1992 - Mon<br>25/08/1992 - Tue<br>26/08/1992 - Wed<br>27/08/1992 - Thu<br>28/08/1992 - Fri<br>29/08/1992 - Sat<br>30/08/1992 - Sun<br>31/08/1992 - Mon<br>01/09/1992 - Tue<br>02/09/1992 - Wed<br>03/09/1992 - Thu<br>04/09/1992 - Fri<br>05/09/1992 - Sat<br>'),
(122, 'TEST CASE 1', '153', 'Armstrong number'),
(122, 'TEST CASE 2', '22', 'Not at armstrong number'),
(123, 'TEST CASE 1', '5', '5 5 5 5 5<br>4 4 4 4<br>3 3 3<br>2 2<br>1'),
(123, 'TEST CASE 2', '4', '4 4 4 4<br>3 3 3<br>2 2<br>1'),
(124, 'TEST CASE 1', '15', '2<br>3<br>5<br>7<br>11<br>13<br>17<br>19<br>23<br>29<br>31<br>37<br>41<br>43<br>47'),
(124, 'TEST CASE 2', '5', '2<br>3<br>5<br>7<br>11'),
(125, 'TEST CASE 1', '5', '*<br>* *<br>* * *<br>* * * *<br>* * * * *'),
(125, 'TEST CASE 2', '4', '*<br>* *<br>* * *<br>* * * *'),
(126, 'TEST CASE 1', '4 15 678 34', '24'),
(126, 'TEST CASE 2', '3 11 111 92', '84'),
(127, 'TEST CASE 1', '5', '*****<br>****<br>***<br>**<br>*'),
(127, 'TEST CASE 2', '4', '****<br>***<br>**<br>*'),
(128, 'TEST CASE 1', '7', '1<br>2 1<br>3 2 1<br>4 3 2 1<br>5 4 3 2 1<br>6 5 4 3 2 1<br>7 6 5 4 3 2 1'),
(129, 'TEST CASE 1', '1', '1'),
(129, 'TEST CASE 2', '5', '1 <br>2 3 <br>4 5 6 <br>7 8 9 10 <br>11 12 13 14 15'),
(130, 'TEST CASE 1', '7', '0000000<br>0100000<br>0020000<br>0003000<br>0000400<br>0000050<br>0000006'),
(131, 'TEST CASE 1', '4 1<br>3 10 2 9<br>12', '5'),
(131, 'TEST CASE 2', '4 1<br>3 10 2 9<br>7', 'Bon Appetit'),
(132, 'TEST CASE 1', '296', '299'),
(132, 'TEST CASE 2', '1905', '707'),
(133, 'TEST CASE 1', '5<br>2 4 6 8 3', '2 4 6 8 8 <br>2 4 6 6 8 <br>2 4 4 6 8 <br>2 3 4 6 8'),
(134, 'TEST CASE 1', '5<br>2 3 2 3 5', '0 2 2 0 1'),
(134, 'TEST CASE 2', '4<br>3 3 3 3', '0 0 4 0'),
(135, 'TEST CASE 1', '18', '1'),
(135, 'TEST CASE 2', '19170', '1'),
(136, 'TEST CASE 1', '8 3<br>1 2 3 4 5 6 7 8', '1 2 6 4 5 3 7 8'),
(136, 'TEST CASE 2', '7 2<br>2 3 4 6 7 8 9', '2 8 4 6 7 3 9'),
(137, 'TEST CASE 1', '6<br>1 2 3 4 5 6', '6 1 5 2 4 3'),
(137, 'TEST CASE 2', '11 <br>10 20 30 40 50 60 70 80 90 100 110', '110 10 100 20 90 30 80 40 70 50 60'),
(138, 'TEST CASE 1', '1 2 3 4 5', '10 14'),
(139, 'TEST CASE 1', '11 22 33 44 55 66', '66 55 44 33 22 11'),
(139, 'TEST CASE 2', '20 40 60 80 100', '100 80 60 40 20'),
(140, 'TEST CASE 1', '2<br>hackerrank has such a good ui that it takes no time to familiarise its environment<br>to familiarize oneself with ui of hackerrank is easy<br>1<br>familiarize', '2'),
(141, 'TEST CASE 1', '2<br>3 4<br>1 2 3<br>3 4 5 6<br>3 3<br>1 2 3<br>4 5 6', '1<br>0'),
(142, 'TEST CASE 1', '3<br>3<br>2 3 5<br>4<br>1 8 7 11<br>4<br>4 4 5 6', '6<br>7<br>4'),
(143, 'TEST CASE 1', '5<br>3 4<br>5 11<br>12 8<br>9 5<br>5 6', 'Area = 30.0'),
(144, 'TEST CASE 1', '32984 <br>10013', 'GCD of 32984 and 10013 = 589'),
(145, 'TEST CASE 1', '3<br>3<br>2 3 5<br>4<br>1 8 7 11<br>4<br>4 4 5 6', '6<br>7<br>4'),
(146, 'TEST CASE 1', '1+2*3/4-5%6*7/8+9-1', '123*4/+56%7*8/-9+1-'),
(147, 'TEST CASE 1', '3<br>1 1 8<br>1 1 4<br>1 1 2', 'yes<br>yes<br>no'),
(147, 'TEST CASE 2', '4<br>1 1 8<br>1 1 4<br>1 1 2<br>1 1 10', 'yes<br>yes<br>no<br>no'),
(149, 'TEST CASE 1', '257184 <br>800128', '28576'),
(150, 'TEST CASE 1', '3<br>1<br>10<br>3<br>8 3 6<br>5<br>4 5 1 2 3', '1<br>2<br>2'),
(151, 'TEST CASE 1', '20<br>10', '20<br>21<br>41<br>62<br>103<br>165<br>268<br>433<br>701<br>1134'),
(151, 'TEST CASE 2', '5<br>11', '5<br>6<br>11<br>17<br>28<br>45<br>73<br>118<br>191<br>309<br>500'),
(152, 'TEST CASE 1', '1 2 3 4<br>1 2 3 4', '2 4 6 8'),
(153, 'TEST CASE 1', '5<br>4', 'The Difference is : 96'),
(154, 'TEST CASE 1', '11<br>100', '11<br>12<br>23<br>35<br>58<br>93'),
(155, 'TEST CASE 1', '2 5 7 13 98<br>13', 'Element found at position 4'),
(155, 'TEST CASE 2', '56 23 12 89 10<br>19', 'Element not found in the tree'),
(156, 'TEST CASE 1', '11<br>20', 'Before Swapping<br>a : 11 & b : 20<br>After Swapping<br>a : 20 & b : 11'),
(157, 'TEST CASE 1', 'Mouse<br>Gerbil<br>Hamster', 'Gerbil<br>Hamster<br>Mouse'),
(158, 'TEST CASE 1', '20', '0<br>1<br>1<br>2<br>3<br>5<br>8<br>13'),
(158, 'TEST CASE 2', '45', '0<br>1<br>1<br>2<br>3<br>5<br>8<br>13<br>21<br>34'),
(159, 'TEST CASE 1', 'madam', 'palindrome'),
(159, 'TEST CASE 2', 'won', 'not palindrome'),
(160, 'TEST CASE 1', '1 1 1 <br>1 1 1<br>1 1  <br>1 1 <br>1 1', '3 3<br>3 3'),
(161, 'TEST CASE 1', 'John 524566<br>Axar 928946', 'John 524566<br>Axar 928946<br>Venkatesh 789546<br>Daniel 874566<br>Shankar 789546'),
(161, 'TEST CASE 2', 'John 524566<br>Axar 928946<br>Venkatesh 789546<br>Karan 123456', 'John 524566<br>Axar 928946<br>Venkatesh 789546<br>Karan 123456'),
(162, 'TEST CASE 1', '23 5 1949', 'Monday'),
(162, 'TEST CASE 2', '26 6 2000', 'Monday'),
(163, 'TEST CASE 1', 'Hello World', 'l : 3<br>o : 2'),
(163, 'TEST CASE 2', 'Hello WorLd', 'l : 2<br>o : 2'),
(164, 'TEST CASE 1', '3 1 3', '1 1 0'),
(164, 'TEST CASE 2', '3 1 5', '1 1 0 0 0'),
(165, 'TEST CASE 1', 'Kamal<br>Raj<br>639113<br>6', 'rAJL36'),
(165, 'TEST CASE 2', 'Kamall<br>Kathir<br>560037<br> 3', 'kATHIRL00'),
(166, 'TEST CASE 1', 'java             <br>sir', 'not identical'),
(166, 'TEST CASE 2', 'sir             <br>sir', 'identical'),
(167, 'TEST CASE 1', 'JAVA<br>J2EE', 's1 : JAVA<br>s2 : J2EE<br>s1 : J2EE<br>s2 : JAVA'),
(167, 'TEST CASE 2', 'hello<br>world', 's1 : hello<br>s2 : world<br>s1 : world<br>s2 : hello'),
(168, 'TEST CASE 1', 'Mother In Law<br>Hitler Woman', 'The given strings are anagrams'),
(168, 'TEST CASE 2', 'SiLeNt CAT<br>LisTen AcT', 'The given strings are anagrams'),
(169, 'TEST CASE 1', 'board', 'bqopasrvd'),
(169, 'TEST CASE 2', 'java', 'jkawvwa'),
(170, 'TEST CASE 1', 'JavaJ2EE', 'J : 2<br>a : 2<br>E : 2'),
(170, 'TEST CASE 2', 'Better Butter', 'B : 2<br>e : 3<br>t : 4<br>r : 2'),
(171, 'TEST CASE 1', '5<br>4<br>3<br>2', '20<br>10'),
(171, 'TEST CASE 2', '5<br>10<br>4<br>6', '50<br>20'),
(172, 'TEST CASE 1', '5<br>4<br>3<br>2', '20<br>10'),
(172, 'TEST CASE 2', '5<br>10<br>4<br>6', '50<br>20'),
(173, 'TEST CASE 1', '20.0 30.0', '20.0<br>30.0'),
(173, 'TEST CASE 2', '5.6  6.85', '5.6<br>6.85'),
(174, 'TEST CASE 1', 'Hari<br>20<br>5.2<br>50', 'Name:Hari<br>Age:20<br>Height:5.2<br>Weight:50'),
(174, 'TEST CASE 2', 'Jai<br>21<br>5.5<br>45', 'Name:Jai<br>Age:21<br>Height:5.5<br>Weight:45'),
(175, 'TEST CASE 1', '1', 'display function'),
(175, 'TEST CASE 2', '2', 'display function'),
(176, 'TEST CASE 1', '5000', '5000'),
(177, 'TEST CASE 1', 'Hari<br>20<br>5.2<br>50', 'Name:Hari<br>Age:20<br>Height:5.2<br>Weight:50'),
(177, 'TEST CASE 2', 'Jai<br>21<br>5.5<br>45', 'Name:Jai<br>Age:21<br>Height:5.5<br>Weight:45'),
(178, 'TEST CASE 1', '5<br>6', '30<br>15'),
(178, 'TEST CASE 2', '2<br>10', '20<br>10'),
(179, 'TEST CASE 1', '5<br>6', '30<br>15'),
(179, 'TEST CASE 2', '2<br>10', '20<br>10'),
(180, 'TEST CASE 1', '5.1<br>2.3', '11.73<br>14.80'),
(180, 'TEST CASE 2', '1.5<br>2.5', '3.75<br>8.00'),
(181, 'TEST CASE 1', '1<br>2<br>3 5<br>2<br>8 1 10', '7<br>1 1'),
(181, 'TEST CASE 2', '2<br>2<br>5 8<br>2<br>2 1 9<br>2<br>6 6<br>2<br>9 9 9', '27<br>1 1<br>-1<br>0 2'),
(182, 'TEST CASE 1', '4 7<br>1 0 3<br>0 1 2<br>1 0 1<br>1 0 0<br>0 0 3<br>1 0 3<br>1 3 3', '0<br>1<br>0<br>2<br>1'),
(182, 'TEST CASE 2', '4 10<br>1 0 3<br>0 1 2<br>1 0 1<br>1 0 0<br>0 0 3<br>1 0 3<br>1 3 3<br>0 0 3<br>1 0 3<br>1 3 3', '0<br>1<br>0<br>2<br>1<br>2<br>0'),
(183, 'TEST CASE 1', '3<br>1 1<br>1 3<br>3 3', '2<br>2<br>32'),
(183, 'TEST CASE 2', '6<br>3 3<br>2 3<br>3 3<br>44 44<br>2 2<br>5 5', '32<br>32<br>32<br>68221801<br>16<br>131072'),
(184, 'TEST CASE 1', '2 4 1<br>1 3 1 2 3<br>3<br>1 1<br>1 2<br>1 3', '10<br>10<br>8'),
(185, 'TEST CASE 1', '6 0', 'java.lang.ArithmeticException: / by zero'),
(185, 'TEST CASE 2', '35 5', '7'),
(186, 'TEST CASE 1', '12<br>2', '13<br>2'),
(187, 'TEST CASE 1', '3<br>3<br>3 5 7<br>3<br>2 4 6<br>2<br>5 5', '8<br>10<br>3'),
(187, 'TEST CASE 2', '5<br>4<br>3 5 7 8<br>3<br>2 4 4<br>2<br>5 7<br>3<br>3 5 7<br>1<br>22', '32<br>6<br>4<br>8<br>4'),
(188, 'TEST CASE 1', '3<br>5 10<br>0 1 10<br>1 2 9<br>1 3 10<br>3 4 9<br>10 1<br>0 1 1<br>0 2 1<br>1 3 1<br>1 4 1<br>2 5 1<br>2 6 1<br>2 7 1<br>6 8 1<br>6 9 1<br>7 2<br>0 1 1<br>0 2 2<br>1 3 1<br>1 4 2<br>2 5 2<br>2 6 7', '29<br>7<br>7'),
(188, 'TEST CASE 2', '5 5<br>1 2 3 5 6<br>3 2 3 3<br>3 2 3 4<br>3 2 3 5<br>2 2 5<br>2 4 5', 'Yes<br>No<br>Yes'),
(189, 'TEST CASE 1', '5 10<br>1 2 3 5 6<br>3 2 3 3<br>3 2 3 4<br>3 2 3 5<br>2 2 5<br>3 2 4 8<br>1 2 1<br>3 2 4 8<br>2 1 4 <br>3 2 4 3 <br>3 1 5 7', 'Yes<br>No<br>Yes<br>Yes<br>Yes<br>No<br>Yes'),
(189, 'TEST CASE 2', '5 5<br>1 2 3 5 6<br>3 2 3 3<br>3 2 3 4<br>3 2 3 5<br>2 2 5<br>2 4 5', 'Yes<br>No<br>Yes'),
(190, 'TEST CASE 1', '2<br>z<br>abcd', '0<br>144'),
(190, 'TEST CASE 2', '7<br>eee<br>kiei<br>ccrr<br>wee<br>weok<br>rrree<br>abcd', '0<br>0<br>0<br>0<br>144<br>0<br>144'),
(191, 'TEST CASE 1', '2<br>a aaa<br>c cake', 'a aaa<br>b aaa<br>c cake'),
(191, 'TEST CASE 2', '2<br>b bbb<br>c cake', 'a bbb<br>b bbb<br>c cake'),
(192, 'TEST CASE 1', '2<br>USA Boston Pittsburgh Washington Seattle<br>UK London Edinburgh Cardiff Belfast<br>3<br>Cardiff<br>Seattle<br>London', 'UK<br>USA<br>UK'),
(192, 'TEST CASE 2', '2<br>Russia Moscow Petersburg Novgorod Kaluga<br>Ukraine Kiev Donetsk Odessa<br>3<br>Odessa<br>Moscow<br>Novgorod', 'Ukraine<br>Russia<br>Russia'),
(193, 'TEST CASE 1', 'welcometojava<br>3', 'ava<br>wel'),
(193, 'TEST CASE 2', 'hitmansuperman<br>4', 'ansu<br>uper'),
(194, 'TEST CASE 1', '', 'Elements of the Vector are<br>One<br>Two<br>Three<br>Four<br>Five'),
(195, 'TEST CASE 1', '1<br>apple orange banana banana orange', 'banana'),
(195, 'TEST CASE 2', '3<br>q w e r t y u i o p<br>a s d f g h j k l<br>z x c v b n m', 'a'),
(196, 'TEST CASE 1', '1 2 3 2 3 4', 'NO<br>NO<br>NO<br>YES<br>YES<br>NO'),
(196, 'TEST CASE 2', '10 10 4 2 5 5 10 4 1 10', 'NO<br>YES<br>NO<br>NO<br>NO<br>YES<br>YES<br>YES<br>NO<br>YES'),
(197, 'TEST CASE 1', '', 'Vector elements are [1, 2, 3]<br>ArrayList elements are [4, 5]<br>After appending all elements of ArrayList, Vector contains..<br>1<br>2<br>3<br>4<br>5'),
(198, 'TEST CASE 1', '', 'Elements of TreeMap are{1=One, 2=Two, 3=Three, 4=Four, 5=Five}<br>Lowest key Stored in Java TreeMap is : 1<br>Highest key Stored in Java TreeMap is : 5'),
(199, 'TEST CASE 1', '4<br>helloworld.exe R X<br>pinglog W R<br>nya R<br>goodluck X W R<br>5<br>read nya<br>write helloworld.exe<br>execute nya<br>read pinglog<br>write pinglog', 'OK<br>Access denied<br>Access denied<br>OK<br>OK'),
(199, 'TEST CASE 2', '1<br>abacaba X<br>3<br>read abacaba<br>write abacaba<br>execute abacaba', 'Access denied<br>Access denied<br>OK'),
(200, 'TEST CASE 1', '', 'Vector elements are[1, 2, 3]<br>ArrayList elements are[4, 5]<br>After inserting all elements of ArrayList at index 2, Vector contains..<br>1<br>2<br>4<br>5<br>3'),
(201, 'TEST CASE 1', '1<br>5<br>3 6 7 2 9', '8'),
(201, 'TEST CASE 2', '1<br>2<br>3 3 7 2 9', '1'),
(202, 'TEST CASE 1', '2<br>5 1 2 3 4 5<br>89 189 111 34 7 200', '99116027<br>515191750'),
(202, 'TEST CASE 2', '2<br>7 2 3 1 5 8<br>101 780 121 4 5 100', '802482758<br>596182915'),
(203, 'TEST CASE 1', '2 4<br>5 5 2<br>2 2 1<br>2 2 5 5<br>1 1 7 7<br>2 3 8 4<br>1 3 2 4', '3.926990816987241<br>15.707963267948966<br>2.456739397217513<br>0.000000000000000'),
(204, 'TEST CASE 1', '210<br>KUMAR', '2)KUMA1'),
(204, 'TEST CASE 2', '105<br>BALA', '1%BAL0'),
(205, 'TEST CASE 1', '35 3<br>5 9 6', 'YES'),
(205, 'TEST CASE 2', '456 68<br>a', 'Invalid Input'),
(206, 'TEST CASE 1', '5<br>2 2 3<br>3 1 5<br>4 3 7<br>4 2 11<br>5 1 10', '1<br>3<br>6<br>8<br>7'),
(207, 'TEST CASE 1', '1 <br>7<br> 2<br>1 1 2 2 2 2 3', '4'),
(207, 'TEST CASE 2', '3<br>7 <br>4<br>1 1 2 2 2 2 3<br>5 <br>3<br>2 3 3 4 5 <br>2<br>2<br>2 2', '-1<br>2<br>2'),
(208, 'TEST CASE 1', '1<br>123', '6'),
(208, 'TEST CASE 2', '1<br>999', '9'),
(209, 'TEST CASE 1', '5<br>4 1 3 9 7', '1 3 4 7 9'),
(209, 'TEST CASE 2', '10<br>10 9 8 7 6 5 4 3 2 1', '1 2 3 4 5 6 7 8 9 10'),
(210, 'TEST CASE 1', '1<br>4<br>5 1 3 4', '4'),
(210, 'TEST CASE 2', '1<br>3<br>5 1 3', '4'),
(211, 'TEST CASE 1', '3<br>2 0 1<br>3 1 2<br>3 5 7', '-1<br>0 1 3 2 6 7 5 4<br>1 3 7 6 2 0 4 5'),
(211, 'TEST CASE 2', '4<br>7 0 9<br>3 7 3<br>8 5 8<br>4 7 9', '0 1 3 2 6 7 5 4 12 13 15 14 10 11 9 8 24 25 27 26 30 31 29 28 20 21 23 22 18 19 17 16 48 49 51 50 54 55 53 52 60 61 63 62 58 59 57 56 40 41 43 42 46 47 45 44 36 37 39 38 34 35 33 32 96 97 99 98 102 103 101 100 108 109 111 110 106 107 105 104 120 121 123 122 126 127 125 124 116 117 119 118 114 115 113 112 80 81 83 82 86 87 85 84 92 93 95 94 90 91 89 88 72 73 75 74 78 79 77 76 68 69 71 70 66 67 65 64<br>0 1 3 2 6 7 5 4<br>0 1 3 2 6 7 5 4 12 13 15 14 10 11 9 8 24 25 27 26 30 31 29 28 20 21 23 22 18'),
(212, 'TEST CASE 1', '4<br>1 1 1<br>2 2 2<br>4 3 2<br>5 7 3', '1<br>4<br>45<br>5887'),
(212, 'TEST CASE 2', '3<br>1 2 3<br>1 1 1<br>3 3 3', '2<br>1<br>27'),
(213, 'TEST CASE 1', '1<br>5 2 2 10<br>1 2 3 4 5', '110'),
(213, 'TEST CASE 2', '2<br>2 3 4 5<br>2 3<br>3 3 4 5<br>2 4 5', '15<br>45'),
(214, 'TEST CASE 1', '4<br>10 1 1000000<br>10 2 1000000<br>10 3 1000000<br>10 4 1000000', '55<br>385<br>3025<br>25333'),
(214, 'TEST CASE 2', '4<br>5 1 1000000<br>5 2 1000000<br>10 3 1000099<br>10 4 1000099', '15<br>55<br>3025<br>25333'),
(215, 'TEST CASE 1', '2<br>2 4<br>7 8<br>4 6<br>7 7 10 10', '0<br>21'),
(215, 'TEST CASE 2', '2<br>2 4<br>7 8<br>4 6<br>7 7 1 5', '0<br>3'),
(216, 'TEST CASE 1', '7 7 5<br>1 2 36<br>2 4 16<br>4 5 18<br>2 3 50<br>3 4 11<br>6 6 100<br>7 6 100<br>1 5<br>5 1<br>1 2<br>6 7<br>1 7', '15<br>15<br>13<br>0<br>XIT'),
(216, 'TEST CASE 2', '8 3 3<br>2 3 44<br>3 4 55<br>3 6 89<br>2 6<br>1 3<br>2 4', '117<br>XIT<br>27'),
(217, 'TEST CASE 1', '5<br>1 0 0 0<br>2 0 0 0<br>3 0 0 0<br>4 0 0 0<br>5 0 0 0<br>0 0 1<br>3<br>1 2 3 4<br>2 2 40 23<br>7 8 22 10<br>0 0 50<br>0', '1 15 0 0<br>2 5 59 50'),
(218, 'TEST CASE 1', '2<br>2<br>1 0<br>0 1<br>2<br>1 1<br>1 1', '-1                           2'),
(218, 'TEST CASE 2', '1<br>2<br>2 5<br>0 2', '10'),
(219, 'TEST CASE 1', '1 1000000000 4 2<br>62<br>63', '163'),
(220, 'TEST CASE 1', '4<br>1 1<br>1 3<br>2 1 3<br>3 1 2 3', '2<br>4<br>2<br>2'),
(220, 'TEST CASE 2', '3<br>3 1 3 3<br>2 3 5<br>4 1 2 4 0', '2<br>4<br>3'),
(221, 'TEST CASE 1', '1<br>ABC', 'ABC ACB BAC BCA CAB CBA'),
(221, 'TEST CASE 2', '1<br>ABSG', 'ABGS ABSG AGBS AGSB ASBG ASGB BAGS BASG BGAS BGSA BSAG BSGA GABS GASB GBAS GBSA GSAB GSBA SABG SAGB SBAG SBGA SGAB SGBA'),
(222, 'TEST CASE 1', '1<br>i.like.this.program.very.much', 'much.very.program.this.like.i'),
(222, 'TEST CASE 2', '1<br>pqr.mno', 'mno.pqr'),
(223, 'TEST CASE 1', '1<br>9<br>9 4 -2 -1 5 0 -5 -3 2', '9 -2 4 -1 5 -5 0 -3 2'),
(223, 'TEST CASE 2', '1<br>5<br>2 3 -4 6 -9', '2 -4 3 -9 6'),
(224, 'TEST CASE 1', '1<br>18', '1'),
(224, 'TEST CASE 2', '1<br>19170', '1'),
(225, 'TEST CASE 1', '1<br>5 2<br>1 2 3 4 5', '3 4 5 1 2'),
(225, 'TEST CASE 2', '1<br>10 3<br>2 4 6 8 10 12 14 16 18 20', '8 10 12 14 16 18 20 2 4 6'),
(226, 'TEST CASE 1', '5<br>1 3 5 2 2', '2'),
(226, 'TEST CASE 2', '3<br>2 3 2', '1'),
(227, 'TEST CASE 1', '1<br>5<br>1 2 3 5', '4'),
(227, 'TEST CASE 2', '1<br>10<br>1 2 3 4 5 6 7 8 10', '9'),
(228, 'TEST CASE 1', '5<br>Q 0 0<br>C 1 2<br>Q 0 0<br>C 2 3<br>Q 0 0<br>C 4 5<br>Q 0 0<br>-1', '0<br>1<br>0<br>1'),
(229, 'TEST CASE 1', '2', '10'),
(229, 'TEST CASE 2', '15', '1111'),
(230, 'TEST CASE 1', '1<br>5<br>1 100 42 4 23', '4200'),
(230, 'TEST CASE 2', '1<br>4<br>2 3 4 5', '20'),
(231, 'TEST CASE 1', 'march', 'TRUE'),
(231, 'TEST CASE 2', 'december', 'FALSE'),
(232, 'TEST CASE 1', '2,-7,-12,-15', 'Original array = {8,-10,3,-15}<br>First number in original array = 8<br>Sum of all numbers in original array = -14'),
(232, 'TEST CASE 2', '2, 15, 8, 12, 27, 20', 'Original array ={10, 12, 3, 5, 7, 20}<br>First number in original array = 10<br>Sum of all numbers in original array = 57'),
(233, 'TEST CASE 1', '1', '1'),
(233, 'TEST CASE 2', '32327', '656502'),
(234, 'TEST CASE 1', '3 3<br>1 2 3<br>4 5 6<br>7 8 9', '1 2 3<br>4 5 6<br>7 8 9'),
(235, 'TEST CASE 1', '4 1 1 2 1', '1 1 2'),
(235, 'TEST CASE 2', '4 1 3 1 2', '1 2'),
(236, 'TEST CASE 1', 'one <br>two<br>three', 'one<br> two<br>three'),
(237, 'TEST CASE 1', '-2, 9, -2, -2, -13, 20', 'Original array ={10, 12, 3, 5, 7, 20}<br>First number in original array = 10<br>Sum of all numbers in encoded array = 10'),
(237, 'TEST CASE 2', '45, -53, -15, 23, 0, 6, -95, -32, 53', 'Original array ={1, -45, 8, 23, 0, 0, -6, 89, 21, 53}<br>First number in original array = 1<br>Sum of all numbers in encoded array = -68'),
(238, 'TEST CASE 1', '123 456 789 1287', '3'),
(239, 'TEST CASE 1', '4<br>1,3,2,1', '2'),
(239, 'TEST CASE 2', '12<br>12,17,21,3,7,9,10,11,33,100,4,8', '3'),
(240, 'TEST CASE 1', '2<br>3 10<br>2 1 3<br>7 8 9<br>4 5<br>1 2 2 1<br>3 3 3 4', 'YES<br>NO'),
(241, 'TEST CASE 1', '3<br>2 3 1<br>4 5 1<br>1 1 1', '1.0 0.0 0.0<br> 2.0 1.0 0.0<br> 0.5 -1.0 1.0<br> 2.0 3.0 1.0<br> 0.0 -1.0 -1.0<br> 0.0 0.0 -0.5'),
(242, 'TEST CASE 1', '3<br>11 8<br>19 4<br>15 3', '7164<br>5352<br>1820'),
(242, 'TEST CASE 2', '4<br>6 4<br>4 2<br>7 3<br>1 8', '464<br>48<br>356<br>56'),
(243, 'TEST CASE 1', '5 6<br>0 4 0<br>0 2 1<br>3 4 2<br>0 4 0<br>2 3 -1<br>1 4 0', '1.1350859<br>0.65354865<br>0.782376860'),
(244, 'TEST CASE 1', '5510389<br>2', '5510389 is prime'),
(245, 'TEST CASE 1', '2<br>2 3 <br>3 4<br>1 0<br>1 2', '6 5<br>8 7'),
(246, 'TEST CASE 1', 'Enter the dimension of the square matrix: <br>2<br>Enter the complex elements of matrix: <br>1 2 1 2 <br>1 2 1 2 <br>Enter the complex elements of matrix: <br>1 2 1 2 <br>1 2 1 2', '-6.0+8.0i -6.0+8.0i <br>-6.0+8.0i -6.0+8.0i'),
(247, 'TEST CASE 1', 'Enter the base of squared matrices<br>2<br>Enter the elements of matrix to be encoded: <br>1 5<br>3 9<br>The Encoded matrix is:<br>5 11 <br>9 21 <br> <br>Enter the base of squared matrices<br>3<br>Enter the elements of matrix to be encoded: <br>1 2 3<br>4 5 6<br>7 8 9', 'The Encoded matrix is:<br>8 14 20 <br>17 32 47 <br>26 50 74'),
(248, 'TEST CASE 1', '4 8 2<br>1 4<br>1 2 4<br>1 4 1<br>2 3 4<br>2 4 7<br>3 2 10<br>3 4 1<br>4 1 7<br>4 3 2', '9'),
(249, 'TEST CASE 1', 'Enter the number of components and wires in a circuit:<br>4 3 <br>Mention the wire between components and its length:<br>0 1 2 <br>1 3 3<br>1 2 2<br>Enter the start and end for which length is to be minimized: <br>0 1<br>0: 1(2) <br>1: 0(2) 3(3) 2(2) <br>2: 1(2) <br>3: 1(3)', 'Wire from 0 to 0 with length 0: <br>Wire from 1 to 0 with length 2: 0 <br>Wire from 2 to 0 with length 4: 1 0 <br>Wire from 3 to 0 with length 5: 1 0'),
(250, 'TEST CASE 1', '3<br>4<br>1 3 4 2<br>2<br>5<br>1 2 3 9 4<br>5<br>5<br>3 5 8 1 2<br>1', '3<br>4<br>3'),
(250, 'TEST CASE 2', '4<br>5<br>1 4 3 2 5<br>2<br>4<br>3 6 2 1<br>4<br>5<br>4 6 2 7 1<br>2<br>6<br>7 3 5 2 9 1<br>3', '4<br>1<br>4<br>4'),
(251, 'TEST CASE 1', '589461256', 'The Digit Count is : 9'),
(252, 'TEST CASE 1', '123456', 'The Digit Count is : 21'),
(253, 'TEST CASE 1', '500', '0 is an Armstrong number<br>1 is an Armstrong number<br>153 is an Armstrong number<br>370 is an Armstrong number<br>371 is an Armstrong number<br>407 is an Armstrong number'),
(254, 'TEST CASE 1', '5<br>4', 'The Difference is : 96'),
(254, 'TEST CASE 2', '8<br>3', 'The Difference is : 40314'),
(255, 'TEST CASE 1', '3628800', 'This is factorial for : 10'),
(255, 'TEST CASE 2', '3628801', 'It is not a factorised number.'),
(256, 'TEST CASE 1', '1990<br>2012', 'The Total number of year is : 6'),
(257, 'TEST CASE 1', '5<br>6<br>3<br>5<br>2<br>4', 'Before Sorting :<br>6 3 5 2 4 <br> <br>After Sorting<br>Ascending Order :<br> 2 3 4 5 6<br>Descending Order :<br> 6 5 4 3 2'),
(257, 'TEST CASE 2', '', ''),
(258, 'TEST CASE 1', '5<br>6<br>3<br>5<br>2<br>4', 'Before Sorting :<br>6 3 5 2 4 <br> <br>After Sorting<br>Ascending Order :<br> 2 3 4 5 6<br>Descending Order :<br> 6 5 4 3 2'),
(259, 'TEST CASE 1', '5<br>6<br>3<br>5<br>2<br>4', 'Before Sorting:<br>6 3 5 2 4 <br>After Sorting<br>Ascending Order:<br>2 3 4 5 6 <br>Descending Order:<br>6 5 4 3 2'),
(260, 'TEST CASE 1', '5<br>6<br>3<br>5<br>2<br>4', 'Before Sorting<br>6 3 5 2 4 <br>After Sorting<br>Ascending Order<br>2 3 4 5 6 <br>Descending Order<br>6 5 4 3 2'),
(261, 'TEST CASE 1', 'Wipro Technologies Bangalore', 'orpiW seigolonhceT erolagnaB'),
(262, 'TEST CASE 1', 'Hello World    <br>Some Content    <br>Hello World', 'World        <br>Some Content    <br>ello World'),
(262, 'TEST CASE 2', 'Python program          <br>C                      <br>Java', 'program      <br>C              <br>ava'),
(263, 'TEST CASE 1', '210<br>abhyuday', '3)a2'),
(263, 'TEST CASE 2', '120<br>karan', '3@k1'),
(264, 'TEST CASE 1', '210<br>abhyuday', '4)a2'),
(264, 'TEST CASE 2', '120<br>karan', '4)k1'),
(265, 'TEST CASE 1', 'twin peaks series', '6'),
(265, 'TEST CASE 2', 'face like a bull dog', '7'),
(266, 'TEST CASE 1', '210<br>abhyuday', '4)a1'),
(266, 'TEST CASE 2', '120<br>karan', '4)k2'),
(267, 'TEST CASE 1', 'aaabccddd', 'abd'),
(267, 'TEST CASE 2', 'baab', 'Empty String'),
(268, 'TEST CASE 1', '2<br>aabcbcdbca<br>aaab', '4<br>2'),
(268, 'TEST CASE 2', '1<br>abcdabcab', '4'),
(269, 'TEST CASE 1', 'hoopla', '2'),
(269, 'TEST CASE 2', 'abbCCCddBBBxx', '3'),
(270, 'TEST CASE 1', 'xxggxx', 'true'),
(270, 'TEST CASE 2', 'xxgxx', 'false'),
(271, 'TEST CASE 1', '20 30', '600'),
(271, 'TEST CASE 2', '10 20', '200'),
(272, 'TEST CASE 1', '20<br>30', '100'),
(272, 'TEST CASE 2', '32<br>28', '120'),
(273, 'TEST CASE 1', '20 30', '500'),
(273, 'TEST CASE 2', '55 67', '1220'),
(274, 'TEST CASE 1', '5<br>6', '30<br>15'),
(274, 'TEST CASE 2', '10<br>5', '50<br>25'),
(275, 'TEST CASE 1', '1', 'Base default constructor<br>Base default constructor<br>Derived default constructor'),
(275, 'TEST CASE 2', '2', 'Base default constructor<br>Base default constructor<br>Derived default constructor'),
(276, 'TEST CASE 1', '5<br>1<br>6<br>7<br>0', '19'),
(276, 'TEST CASE 2', '1<br>2<br>3<br>4<br>5', '15'),
(277, 'TEST CASE 1', '5<br>1<br>0<br>-2<br>-1', '2<br>1'),
(277, 'TEST CASE 2', '5<br>1<br>8<br>4<br>0', '4<br>1'),
(278, 'TEST CASE 1', '5<br>10<br>20<br>30', 'Roll number:5<br>Subject1:10<br>subject2:20<br>Total:30'),
(278, 'TEST CASE 2', '17<br>45<br>60<br>105', 'Roll number:17<br>Subject1:45<br>subject2:60<br>Total:105'),
(281, 'TEST CASE 1', '3<br>3<br>4 0 4<br>7 9 8<br>2<br>0 3<br>10 9<br>4<br>0 3 0 2<br>6 8 1 5', '9<br>32<br>22'),
(282, 'TEST CASE 1', '2<br>2<br>..<br>.#<br>3<br>...<br>#..<br>..#', 'DUR<br>RDURDLDURLDUDL'),
(282, 'TEST CASE 2', '5<br>.....<br>....#<br>#....<br>....#<br>#....', 'DRURDRURLDDRLDULDLUDLRDULRDURDURDUDR<br>RDURDLDURLDUDL<br>DRURDRURDURLDDRLDULDLULDLRUDLRDDLRURDRURDUR<br>RDURDLDURLDUDL'),
(283, 'TEST CASE 1', '2 0<br>3 3<br>1 2<br>2 3<br>1 3', 'YES<br>NO<br>NO<br>YES<br>NO'),
(284, 'TEST CASE 1', '5<br>4 4 3 2 3 4<br>4 4 3 2 4 4<br>4 4 3 2 2 3<br>2 3 1 1 1 3  <br>2 3 1 1 1 1', '3<br>4<br>11<br>3<br>1'),
(285, 'TEST CASE 1', '2<br>2<br>3', '2<br>14'),
(285, 'TEST CASE 2', '5', '0'),
(286, 'TEST CASE 1', '3<br>4<br>0 1 2<br>8<br>0 1 2 0 0 3 3<br>9<br>0 1 1 1 1 0 2 2', '2<br>4<br>5'),
(286, 'TEST CASE 2', '6<br>4<br>0 1 2<br>8<br>0 1 2 0 0 3 3<br>9<br>0 1 1 1 1 0 2 2<br>3<br>0 1 <br>7<br>0 1 2 0 0 3 <br>8<br>0 1 1 1 1 0 2 7', '2<br>4<br>5<br>2<br>3<br>5'),
(287, 'TEST CASE 1', '3 3 3<br>1 1<br>1 1<br>1 1<br>1 1<br>1 1<br>1 1<br>1 1<br>1<br>2<br>3', '4<br>12<br>17'),
(288, 'TEST CASE 1', '3<br>6<br>113<br>144', '2<br>1<br>-1'),
(289, 'TEST CASE 1', '2<br>5 3 5<br>1 2 3 4 5<br>6 3 4<br>9 5 1 7 3 7', '10<br>-1'),
(289, 'TEST CASE 2', '6<br>4 3 5<br>1 2 3 4 <br>3 3 4<br>9 5 1 <br>5 3 5<br>1 2 3 4 5<br>6 3 4<br>9 5 1 7 3 7<br>5 3 5<br>1 2 3 4 5<br>6 3 4<br>9 5 1 7 3 7', '-1<br>-1<br>10<br>-1<br>10<br>-1'),
(290, 'TEST CASE 1', '4<br>5<br>- 5 * 6 7<br>15<br>- * / 15 - 7 + 1 1 3 + 2 + 1 1<br>16<br>+ 2 3 4 * 1 2 3 4 ^ 6 7 * 5 6 7<br>21<br>! -3 + * 167 164 - 257 + 190 ! 6 - / 272 0 ^ 341 12 18 !', '3 * 6 7 42<br>1 - 5 42 -37<br>OK<br>7 + 1 1 2<br>5 - 7 2 5<br>3 / 15 5 3<br>2 * 3 3 9<br>5 + 1 1 2<br>3 + 2 2 4<br>1 - 9 4 5<br>OK<br>5 * 1 2 2<br>11 * 5 6 30<br>8 ^ 6 7 279936<br>1 + 2 3 5<br>NOT OK<br>1 ! -3 -1 -6<br>10 ! 6 -1 720<br>15 ^ 341 12 2062435601<br>NOT OK'),
(291, 'TEST CASE 1', 'Rajesh<br>Engineering College<br>Tamil Nadu<br>Mechanical Engineering<br>25', 'ID=25<br>Name=Rajesh<br>College=Engineering College<br>State=Tamil Nadu<br>Department=Mechanical Engineering'),
(291, 'TEST CASE 2', 'Arun<br>Arts and science College<br>Tamil Nadu<br>MCA<br>29', 'ID=29<br>Name=Arun<br>College=Arts and science College<br>State=Tamil Nadu<br>Department=MCA');
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
